{"repo_url":"https://github.com/biomejs/biome","short_repo_url":"biomejs/biome","summary":"Repository: biomejs/biome\nCommit: c63026e5ba3d5e1a56ba35363bce88e12992bec0\nFiles analyzed: 10000\n\nEstimated tokens: 8.8M","digest_url":"https://d66xu0hf46sfg.cloudfront.net/ingest/github.com/biomejs/biome/c63026e5ba3d5e1a56ba35363bce88e12992bec0/1b25020e6e971e46/biomejs-biome-8a5edab282632443.txt","tree":"Directory structure:\n└── biomejs-biome/\n    ├── biome.json\n    ├── Cargo.toml\n    ├── CHANGELOG_v1.md\n    ├── CLAUDE.md\n    ├── clippy.toml\n    ├── CODE_OF_CONDUCT.md\n    ├── CONTRIBUTING.md\n    ├── Dockerfile.benchmark\n    ├── GOVERNANCE.md\n    ├── LICENSE-APACHE\n    ├── LICENSE-MIT\n    ├── RELEASES.md\n    ├── ROME_CHANGELOG.md\n    ├── .coderabbit.yaml\n    ├── .dockerignore\n    ├── .editorconfig\n    ├── .git-blame-ignore-revs\n    ├── .markdownlint.json\n    ├── benchmark/\n    │   ├── README.md\n    │   ├── bench.js\n    │   ├── biome.json\n    │   ├── dprint.json\n    │   ├── eslint.config.js\n    │   ├── package.json\n    │   ├── ts-biome.json\n    │   ├── ts-eslint.config.js\n    │   ├── tsconfig.json\n    │   ├── .prettierignore\n    │   └── .prettierrc.json\n    ├── CHANGELOG.md -> CHANGELOG.md\n    ├── crates/\n    │   ├── biome_analyze/\n    │   │   ├── Cargo.toml\n    │   │   ├── CONTRIBUTING.md\n    │   │   └── src/\n    │   │       ├── analyzer_plugin.rs\n    │   │       ├── categories.rs\n    │   │       ├── context.rs\n    │   │       ├── diagnostics.rs\n    │   │       ├── lib.rs\n    │   │       ├── matcher.rs\n    │   │       ├── options.rs\n    │   │       ├── query.rs\n    │   │       ├── registry.rs\n    │   │       ├── rule.rs\n    │   │       ├── services.rs\n    │   │       ├── signals.rs\n    │   │       ├── suppression_action.rs\n    │   │       ├── suppressions.rs\n    │   │       ├── syntax.rs\n    │   │       ├── utils.rs\n    │   │       └── visitor.rs\n    │   ├── biome_aria/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── lib.rs\n    │   │       └── roles.rs\n    │   ├── biome_aria_metadata/\n    │   │   ├── build.rs\n    │   │   ├── Cargo.toml\n    │   │   ├── CONTRIBUTING.md\n    │   │   └── src/\n    │   │       └── lib.rs\n    │   ├── biome_cli/\n    │   │   ├── README.md\n    │   │   ├── Cargo.toml\n    │   │   ├── examples/\n    │   │   │   └── text_reporter.rs\n    │   │   ├── src/\n    │   │   │   ├── changed.rs\n    │   │   │   ├── cli_options.rs\n    │   │   │   ├── diagnostics.rs\n    │   │   │   ├── lib.rs\n    │   │   │   ├── logging.rs\n    │   │   │   ├── main.rs\n    │   │   │   ├── panic.rs\n    │   │   │   ├── commands/\n    │   │   │   │   ├── check.rs\n    │   │   │   │   ├── ci.rs\n    │   │   │   │   ├── clean.rs\n    │   │   │   │   ├── daemon.rs\n    │   │   │   │   ├── explain.rs\n    │   │   │   │   ├── format.rs\n    │   │   │   │   ├── init.rs\n    │   │   │   │   ├── lint.rs\n    │   │   │   │   ├── migrate.rs\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   ├── rage.rs\n    │   │   │   │   ├── scan_kind.rs\n    │   │   │   │   ├── search.rs\n    │   │   │   │   └── version.rs\n    │   │   │   ├── execute/\n    │   │   │   │   ├── diagnostics.rs\n    │   │   │   │   ├── migrate.rs\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   ├── process_file.rs\n    │   │   │   │   ├── std_in.rs\n    │   │   │   │   ├── traverse.rs\n    │   │   │   │   ├── migrate/\n    │   │   │   │   │   ├── eslint.rs\n    │   │   │   │   │   ├── eslint_any_rule_to_biome.rs\n    │   │   │   │   │   ├── eslint_eslint.rs\n    │   │   │   │   │   ├── eslint_jsxa11y.rs\n    │   │   │   │   │   ├── eslint_to_biome.rs\n    │   │   │   │   │   ├── eslint_typescript.rs\n    │   │   │   │   │   ├── eslint_unicorn.rs\n    │   │   │   │   │   ├── ignorefile.rs\n    │   │   │   │   │   ├── node.rs\n    │   │   │   │   │   └── prettier.rs\n    │   │   │   │   └── process_file/\n    │   │   │   │       ├── check.rs\n    │   │   │   │       ├── format.rs\n    │   │   │   │       ├── lint_and_assist.rs\n    │   │   │   │       ├── search.rs\n    │   │   │   │       └── workspace_file.rs\n    │   │   │   ├── reporter/\n    │   │   │   │   ├── github.rs\n    │   │   │   │   ├── gitlab.rs\n    │   │   │   │   ├── json.rs\n    │   │   │   │   ├── junit.rs\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   ├── summary.rs\n    │   │   │   │   └── terminal.rs\n    │   │   │   ├── reports/\n    │   │   │   │   └── mod.rs\n    │   │   │   └── service/\n    │   │   │       ├── mod.rs\n    │   │   │       ├── unix.rs\n    │   │   │       └── windows.rs\n    │   │   └── tests/\n    │   │       ├── configs.rs\n    │   │       ├── main.rs\n    │   │       ├── snap_test.rs\n    │   │       ├── cases/\n    │   │       │   ├── assist.rs\n    │   │       │   ├── biome_json_support.rs\n    │   │       │   ├── config_extends.rs\n    │   │       │   ├── config_path.rs\n    │   │       │   ├── cts_files.rs\n    │   │       │   ├── diagnostics.rs\n    │   │       │   ├── editorconfig.rs\n    │   │       │   ├── graphql.rs\n    │   │       │   ├── handle_astro_files.rs\n    │   │       │   ├── handle_css_files.rs\n    │   │       │   ├── handle_svelte_files.rs\n    │   │       │   ├── handle_vue_files.rs\n    │   │       │   ├── html.rs\n    │   │       │   ├── included_files.rs\n    │   │       │   ├── linter_domains.rs\n    │   │       │   ├── linter_groups_plain.rs\n    │   │       │   ├── migrate_v2.rs\n    │   │       │   ├── mod.rs\n    │   │       │   ├── monorepo.rs\n    │   │       │   ├── overrides_formatter.rs\n    │   │       │   ├── overrides_linter.rs\n    │   │       │   ├── overrides_max_file_size.rs\n    │   │       │   ├── overrides_organize_imports.rs\n    │   │       │   ├── protected_files.rs\n    │   │       │   ├── reporter_github.rs\n    │   │       │   ├── reporter_gitlab.rs\n    │   │       │   ├── reporter_junit.rs\n    │   │       │   ├── reporter_summary.rs\n    │   │       │   ├── reporter_terminal.rs\n    │   │       │   ├── rules_via_dependencies.rs\n    │   │       │   ├── suppressions.rs\n    │   │       │   ├── unknown_files.rs\n    │   │       │   └── vcs_ignored_files.rs\n    │   │       ├── commands/\n    │   │       │   ├── check.rs\n    │   │       │   ├── ci.rs\n    │   │       │   ├── explain.rs\n    │   │       │   ├── format.rs\n    │   │       │   ├── init.rs\n    │   │       │   ├── lint.rs\n    │   │       │   ├── lsp_proxy.rs\n    │   │       │   ├── migrate.rs\n    │   │       │   ├── migrate_eslint.rs\n    │   │       │   ├── migrate_prettier.rs\n    │   │       │   ├── mod.rs\n    │   │       │   ├── rage.rs\n    │   │       │   ├── search.rs\n    │   │       │   └── version.rs\n    │   │       └── snapshots/\n    │   │           ├── main_cases_assist/\n    │   │           │   ├── assist_emit_diagnostic_and_blocks.snap\n    │   │           │   ├── assist_emit_diagnostic_and_blocks_ci.snap\n    │   │           │   ├── assist_emit_diagnostic_but_doesnt_block.snap\n    │   │           │   └── assist_writes.snap\n    │   │           ├── main_cases_biome_json_support/\n    │   │           │   ├── always_disable_trailing_commas_biome_json.snap\n    │   │           │   ├── biome_json_is_not_ignored.snap\n    │   │           │   ├── check_biome_json.snap\n    │   │           │   ├── ci_biome_json.snap\n    │   │           │   ├── formatter_biome_json.snap\n    │   │           │   └── linter_biome_json.snap\n    │   │           ├── main_cases_config_extends/\n    │   │           │   ├── allows_reverting_fields_in_extended_config_to_default.snap\n    │   │           │   ├── applies_extended_values_in_current_config.snap\n    │   │           │   ├── extends_config_merge_overrides.snap\n    │   │           │   ├── extends_config_ok_formatter_no_linter.snap\n    │   │           │   ├── extends_config_ok_from_npm_package.snap\n    │   │           │   ├── extends_config_ok_from_npm_package_with_author_field.snap\n    │   │           │   ├── extends_config_ok_from_npm_package_with_condition_names.snap\n    │   │           │   ├── extends_config_ok_linter_not_formatter.snap\n    │   │           │   ├── extends_resolves_when_using_config_path.snap\n    │   │           │   ├── extends_should_raise_an_error_for_unresolved_configuration.snap\n    │   │           │   ├── extends_should_raise_an_error_for_unresolved_configuration_and_show_verbose.snap\n    │   │           │   └── respects_unaffected_values_from_extended_config.snap\n    │   │           ├── main_cases_config_path/\n    │   │           │   ├── raises_an_error_for_no_configuration_file_found.snap\n    │   │           │   ├── raises_an_error_when_the_config_file_is_not_json.snap\n    │   │           │   ├── set_config_path_to_directory.snap\n    │   │           │   └── set_config_path_to_file.snap\n    │   │           ├── main_cases_cts_files/\n    │   │           │   └── should_allow_using_export_statements.snap\n    │   │           ├── main_cases_diagnostics/\n    │   │           │   ├── diagnostic_level.snap\n    │   │           │   ├── logs_the_appropriate_messages_according_to_set_diagnostics_level.snap\n    │   │           │   ├── max_diagnostics_no_verbose.snap\n    │   │           │   ├── max_diagnostics_verbose.snap\n    │   │           │   └── should_fail_when_max_diagnostics_is_zero.snap\n    │   │           ├── main_cases_editorconfig/\n    │   │           │   ├── end_of_line_parse_error.snap\n    │   │           │   ├── indent_size_can_set_to_tab.snap\n    │   │           │   ├── indent_size_parse_error.snap\n    │   │           │   ├── non_closed_section.snap\n    │   │           │   ├── root_parse_error.snap\n    │   │           │   ├── should_apply_path_overrides.snap\n    │   │           │   ├── should_have_biome_override_editorconfig.snap\n    │   │           │   ├── should_have_cli_override_editorconfig.snap\n    │   │           │   ├── should_not_use_editorconfig.snap\n    │   │           │   ├── should_not_use_higher_editorconfig_when_find_biome_conf.snap\n    │   │           │   ├── should_use_editorconfig.snap\n    │   │           │   ├── should_use_editorconfig_check.snap\n    │   │           │   ├── should_use_editorconfig_check_enabled_from_biome_conf.snap\n    │   │           │   ├── should_use_editorconfig_ci.snap\n    │   │           │   ├── should_use_editorconfig_ci_enabled_from_biome_conf.snap\n    │   │           │   └── should_use_editorconfig_enabled_from_biome_conf.snap\n    │   │           ├── main_cases_graphql/\n    │   │           │   ├── format_and_write_graphql_files.snap\n    │   │           │   ├── format_graphql_files.snap\n    │   │           │   └── lint_single_rule.snap\n    │   │           ├── main_cases_handle_astro_files/\n    │   │           │   ├── astro_global.snap\n    │   │           │   ├── check_stdin_successfully.snap\n    │   │           │   ├── check_stdin_write_successfully.snap\n    │   │           │   ├── check_stdin_write_unsafe_successfully.snap\n    │   │           │   ├── does_not_throw_parse_error_for_return.snap\n    │   │           │   ├── format_astro_carriage_return_line_feed_files.snap\n    │   │           │   ├── format_astro_files.snap\n    │   │           │   ├── format_astro_files_write.snap\n    │   │           │   ├── format_empty_astro_files_write.snap\n    │   │           │   ├── format_stdin_successfully.snap\n    │   │           │   ├── format_stdin_write_successfully.snap\n    │   │           │   ├── lint_and_fix_astro_files.snap\n    │   │           │   ├── lint_astro_files.snap\n    │   │           │   ├── lint_stdin_successfully.snap\n    │   │           │   ├── lint_stdin_write_successfully.snap\n    │   │           │   ├── lint_stdin_write_unsafe_successfully.snap\n    │   │           │   ├── sorts_imports_check.snap\n    │   │           │   └── sorts_imports_write.snap\n    │   │           ├── main_cases_handle_css_files/\n    │   │           │   ├── should_format_files_by_when_opt_in.snap\n    │   │           │   ├── should_format_write_files_by_when_opt_in.snap\n    │   │           │   └── should_not_format_files_by_default.snap\n    │   │           ├── main_cases_handle_svelte_files/\n    │   │           │   ├── check_stdin_successfully.snap\n    │   │           │   ├── check_stdin_write_successfully.snap\n    │   │           │   ├── check_stdin_write_unsafe_successfully.snap\n    │   │           │   ├── format_stdin_successfully.snap\n    │   │           │   ├── format_stdin_write_successfully.snap\n    │   │           │   ├── format_svelte_carriage_return_line_feed_files.snap\n    │   │           │   ├── format_svelte_ts_context_module_files.snap\n    │   │           │   ├── format_svelte_ts_context_module_files_write.snap\n    │   │           │   ├── lint_stdin_successfully.snap\n    │   │           │   ├── lint_stdin_write_successfully.snap\n    │   │           │   ├── lint_stdin_write_unsafe_successfully.snap\n    │   │           │   ├── sorts_imports_check.snap\n    │   │           │   └── sorts_imports_write.snap\n    │   │           ├── main_cases_handle_vue_files/\n    │   │           │   ├── check_stdin_successfully.snap\n    │   │           │   ├── check_stdin_write_successfully.snap\n    │   │           │   ├── check_stdin_write_unsafe_successfully.snap\n    │   │           │   ├── format_empty_vue_js_files_write.snap\n    │   │           │   ├── format_empty_vue_ts_files_write.snap\n    │   │           │   ├── format_stdin_successfully.snap\n    │   │           │   ├── format_stdin_write_successfully.snap\n    │   │           │   ├── format_vue_carriage_return_line_feed_files.snap\n    │   │           │   ├── format_vue_explicit_js_files.snap\n    │   │           │   ├── format_vue_explicit_js_files_write.snap\n    │   │           │   ├── format_vue_generic_component_files.snap\n    │   │           │   ├── format_vue_implicit_js_files.snap\n    │   │           │   ├── format_vue_implicit_js_files_write.snap\n    │   │           │   ├── format_vue_ts_files.snap\n    │   │           │   ├── format_vue_ts_files_write.snap\n    │   │           │   ├── lint_stdin_successfully.snap\n    │   │           │   ├── lint_stdin_write_successfully.snap\n    │   │           │   ├── lint_stdin_write_unsafe_successfully.snap\n    │   │           │   ├── lint_vue_js_files.snap\n    │   │           │   ├── lint_vue_ts_files.snap\n    │   │           │   ├── sorts_imports_check.snap\n    │   │           │   ├── sorts_imports_write.snap\n    │   │           │   └── vue_compiler_macros_as_globals.snap\n    │   │           ├── main_cases_html/\n    │   │           │   ├── should_error_when_interpolation_is_disabled.snap\n    │   │           │   └── should_not_error_when_interpolation_is_enabled.snap\n    │   │           ├── main_cases_included_files/\n    │   │           │   ├── does_handle_only_included_files.snap\n    │   │           │   ├── does_not_handle_files_in_ignored_folder.snap\n    │   │           │   ├── does_not_handle_included_files_if_overridden_by_ignore.snap\n    │   │           │   ├── does_not_handle_included_files_if_overridden_by_ignore_formatter.snap\n    │   │           │   ├── does_not_handle_included_files_if_overridden_by_ignore_linter.snap\n    │   │           │   └── does_not_handle_included_files_if_overridden_by_organize_imports.snap\n    │   │           ├── main_cases_linter_domains/\n    │   │           │   ├── does_disable_test_rules.snap\n    │   │           │   ├── does_enable_test_rules.snap\n    │   │           │   ├── does_enable_test_rules_and_only.snap\n    │   │           │   ├── does_enable_test_rules_and_skip.snap\n    │   │           │   ├── does_enable_test_rules_when_recommended_rules_are_disabled_but_domain_is_enabled.snap\n    │   │           │   └── enable_test_rules_via_overrides.snap\n    │   │           ├── main_cases_linter_groups_plain/\n    │   │           │   ├── disable_all_rules_when_group_is_off.snap\n    │   │           │   ├── enables_all_rules_when_group_is_error.snap\n    │   │           │   └── enables_all_rules_when_group_is_on_with_default_severity.snap\n    │   │           ├── main_cases_migrate_v2/\n    │   │           │   ├── should_migrate_aws_config.snap\n    │   │           │   ├── should_migrate_issue_5465.snap\n    │   │           │   ├── should_migrate_nested_config.snap\n    │   │           │   ├── should_successfully_migrate_ariakit.snap\n    │   │           │   ├── should_successfully_migrate_knip.snap\n    │   │           │   └── should_successfully_migrate_sentry.snap\n    │   │           ├── main_cases_monorepo/\n    │   │           │   ├── should_error_when_no_root_config_is_found.snap\n    │   │           │   ├── should_extend_from_the_root_config.snap\n    │   │           │   ├── should_fail_for_nested_roots.snap\n    │   │           │   ├── should_find_root_when_run_from_nested_dir.snap\n    │   │           │   ├── should_find_settings_when_run_from_nested_dir.snap\n    │   │           │   ├── should_find_settings_when_targeting_file_in_nested_dir.snap\n    │   │           │   ├── should_find_settings_when_targeting_nested_dir.snap\n    │   │           │   ├── should_find_settings_when_targeting_parent_of_nested_dir.snap\n    │   │           │   ├── should_format_nested_files_differently.snap\n    │   │           │   ├── should_ignore_files_in_nested_projects.snap\n    │   │           │   ├── should_ignore_linter_nested_file.snap\n    │   │           │   ├── should_ignore_nested_configuration_in_ignored_directory.snap\n    │   │           │   ├── should_not_lint_when_root_is_disabled_but_nested_is_enabled.snap\n    │   │           │   └── when_running_from_a_subdirectory_should_extend_from_the_root_config.snap\n    │   │           ├── main_cases_overrides_formatter/\n    │   │           │   ├── allow_trailing_commas_on_well_known_files.snap\n    │   │           │   ├── complex_enable_disable_overrides.snap\n    │   │           │   ├── disallow_comments_on_well_known_files.snap\n    │   │           │   ├── does_handle_included_file_and_disable_formatter.snap\n    │   │           │   ├── does_include_file_with_different_formatting.snap\n    │   │           │   ├── does_include_file_with_different_formatting_and_all_of_them.snap\n    │   │           │   ├── does_include_file_with_different_languages.snap\n    │   │           │   ├── does_include_file_with_different_overrides.snap\n    │   │           │   ├── does_not_change_formatting_language_settings.snap\n    │   │           │   ├── does_not_change_formatting_language_settings_2.snap\n    │   │           │   ├── does_not_change_formatting_settings.snap\n    │   │           │   ├── does_not_conceal_previous_overrides.snap\n    │   │           │   ├── does_not_override_well_known_special_files_when_config_override_is_present.snap\n    │   │           │   ├── overrides_default_formatter_for_package_json.snap\n    │   │           │   ├── overrides_grit_formatting_options.snap\n    │   │           │   ├── overrides_javascript_formatting_options.snap\n    │   │           │   ├── overrides_json_formatting_options.snap\n    │   │           │   └── takes_last_formatter_enabled_into_account.snap\n    │   │           ├── main_cases_overrides_linter/\n    │   │           │   ├── does_handle_included_file_and_disable_linter.snap\n    │   │           │   ├── does_include_file_with_different_linting_and_applies_all_of_them.snap\n    │   │           │   ├── does_include_file_with_different_overrides.snap\n    │   │           │   ├── does_include_file_with_different_rules.snap\n    │   │           │   ├── does_merge_all_overrides.snap\n    │   │           │   ├── does_not_change_linting_settings.snap\n    │   │           │   ├── does_not_conceal_overrides_globals.snap\n    │   │           │   ├── does_override_groupe_recommended.snap\n    │   │           │   ├── does_override_recommended.snap\n    │   │           │   ├── does_override_the_rules.snap\n    │   │           │   ├── does_preserve_group_recommended_when_override_global_recommended.snap\n    │   │           │   ├── does_preserve_individually_disabled_rules_in_overrides.snap\n    │   │           │   └── takes_last_linter_enabled_into_account.snap\n    │   │           ├── main_cases_overrides_max_file_size/\n    │   │           │   ├── overrides_files_max_size_ignored_includes_does_not_match_filename.snap\n    │   │           │   ├── overrides_files_max_size_ignored_includes_does_not_match_filename_invalid_format_check.snap\n    │   │           │   ├── overrides_files_max_size_ignored_includes_does_not_match_filename_invalid_format_format.snap\n    │   │           │   ├── overrides_files_max_size_option_invalid_value.snap\n    │   │           │   ├── overrides_files_max_size_option_pass.snap\n    │   │           │   ├── overrides_files_max_size_too_large_limit_check.snap\n    │   │           │   └── overrides_files_max_size_too_large_limit_format.snap\n    │   │           ├── main_cases_overrides_organize_imports/\n    │   │           │   └── does_handle_included_file_and_disable_organize_imports.snap\n    │   │           ├── main_cases_protected_files/\n    │   │           │   ├── not_process_file_from_cli.snap\n    │   │           │   ├── not_process_file_from_cli_verbose.snap\n    │   │           │   ├── not_process_file_from_stdin_format.snap\n    │   │           │   ├── not_process_file_from_stdin_lint.snap\n    │   │           │   ├── not_process_file_from_stdin_verbose_format.snap\n    │   │           │   ├── not_process_file_from_stdin_verbose_lint.snap\n    │   │           │   ├── not_process_file_linter_disabled_from_cli_verbose.snap\n    │   │           │   ├── not_process_ignored_file_from_cli_verbose.snap\n    │   │           │   └── should_return_the_content_of_protected_files_via_stdin.snap\n    │   │           ├── main_cases_reporter_github/\n    │   │           │   ├── reports_diagnostics_github_check_command.snap\n    │   │           │   ├── reports_diagnostics_github_ci_command.snap\n    │   │           │   ├── reports_diagnostics_github_format_command.snap\n    │   │           │   └── reports_diagnostics_github_lint_command.snap\n    │   │           ├── main_cases_reporter_gitlab/\n    │   │           │   ├── reports_diagnostics_gitlab_check_command.snap\n    │   │           │   ├── reports_diagnostics_gitlab_ci_command.snap\n    │   │           │   ├── reports_diagnostics_gitlab_format_command.snap\n    │   │           │   └── reports_diagnostics_gitlab_lint_command.snap\n    │   │           ├── main_cases_reporter_junit/\n    │   │           │   ├── reports_diagnostics_junit_check_command.snap\n    │   │           │   ├── reports_diagnostics_junit_ci_command.snap\n    │   │           │   ├── reports_diagnostics_junit_format_command.snap\n    │   │           │   └── reports_diagnostics_junit_lint_command.snap\n    │   │           ├── main_cases_reporter_summary/\n    │   │           │   ├── reports_diagnostics_summary_check_command.snap\n    │   │           │   ├── reports_diagnostics_summary_check_verbose_command.snap\n    │   │           │   ├── reports_diagnostics_summary_ci_command.snap\n    │   │           │   ├── reports_diagnostics_summary_format_command.snap\n    │   │           │   └── reports_diagnostics_summary_lint_command.snap\n    │   │           ├── main_cases_reporter_terminal/\n    │   │           │   ├── reports_diagnostics_check_command_verbose.snap\n    │   │           │   └── reports_diagnostics_check_write_command_verbose.snap\n    │   │           ├── main_cases_rules_via_dependencies/\n    │   │           │   ├── doesnt_enable_rules_when_recommended_is_false.snap\n    │   │           │   ├── enables_next_rules_via_dependencies.snap\n    │   │           │   ├── enables_react_rules_via_dependencies.snap\n    │   │           │   ├── enables_rules_via_dependencies_but_disable_rule_from_config.snap\n    │   │           │   └── enables_test_globals_via_dependencies.snap\n    │   │           ├── main_cases_suppressions/\n    │   │           │   ├── custom_explanation_with_reason.snap\n    │   │           │   ├── err_when_both_write_and_suppress_are_passed.snap\n    │   │           │   ├── err_when_missing_range_end.snap\n    │   │           │   ├── err_when_only_reason.snap\n    │   │           │   ├── misplaced_top_level_suppression.snap\n    │   │           │   ├── should_emit_diagnostics_for_incorrect_reason.snap\n    │   │           │   ├── suppress_multiple_ok.snap\n    │   │           │   ├── suppress_ok.snap\n    │   │           │   ├── suppress_only_ok.snap\n    │   │           │   ├── suppress_skip_ok.snap\n    │   │           │   ├── syntax_rule_line_suppression.snap\n    │   │           │   ├── syntax_rule_range_suppression.snap\n    │   │           │   ├── syntax_rule_top_suppression.snap\n    │   │           │   ├── unused_range_suppression.snap\n    │   │           │   └── unused_suppression_after_top_level.snap\n    │   │           ├── main_cases_unknown_files/\n    │   │           │   ├── should_not_print_a_diagnostic_unknown_file_because_ignored.snap\n    │   │           │   └── should_print_a_diagnostic_unknown_file.snap\n    │   │           ├── main_cases_vcs_ignored_files/\n    │   │           │   ├── ignore_vcs_ignored_file_via_cli.snap\n    │   │           │   ├── ignore_vcs_os_independent_parse.snap\n    │   │           │   ├── ignores_file_inside_directory.snap\n    │   │           │   ├── include_vcs_ignore_cascade.snap\n    │   │           │   ├── should_fail_when_ignore_file_is_absent.snap\n    │   │           │   ├── should_ignore_absolute_paths_in_ignore_file_with_glob.snap\n    │   │           │   └── use_root_gitignore_when_running_from_subdirectory.snap\n    │   │           ├── main_commands_check/\n    │   │           │   ├── applies_organize_imports.snap\n    │   │           │   ├── applies_organize_imports_bug_4552.snap\n    │   │           │   ├── applies_organize_imports_from_cli.snap\n    │   │           │   ├── apply_bogus_argument.snap\n    │   │           │   ├── apply_noop.snap\n    │   │           │   ├── apply_ok.snap\n    │   │           │   ├── apply_suggested.snap\n    │   │           │   ├── apply_suggested_error.snap\n    │   │           │   ├── apply_unsafe_with_error.snap\n    │   │           │   ├── check_help.snap\n    │   │           │   ├── check_json_files.snap\n    │   │           │   ├── check_plugin_suppressions.snap\n    │   │           │   ├── check_returns_error_for_css_sorting.snap\n    │   │           │   ├── check_skip_errors.snap\n    │   │           │   ├── check_skip_parse_errors.snap\n    │   │           │   ├── check_stdin_applies_the_config_based_on_path.snap\n    │   │           │   ├── check_stdin_ignores_unknown_file_path.snap\n    │   │           │   ├── check_stdin_returns_content_when_not_write.snap\n    │   │           │   ├── check_stdin_returns_text_if_content_is_not_changed.snap\n    │   │           │   ├── check_stdin_write_successfully.snap\n    │   │           │   ├── check_stdin_write_unsafe_only_organize_imports.snap\n    │   │           │   ├── check_stdin_write_unsafe_successfully.snap\n    │   │           │   ├── ci_does_not_enable_assist.snap\n    │   │           │   ├── config_recommended_group.snap\n    │   │           │   ├── does_error_with_only_warnings.snap\n    │   │           │   ├── doesnt_check_file_when_assist_is_disabled.snap\n    │   │           │   ├── doesnt_error_if_no_files_were_processed.snap\n    │   │           │   ├── dont_applies_organize_imports_for_ignored_file.snap\n    │   │           │   ├── downgrade_severity.snap\n    │   │           │   ├── file_too_large.snap\n    │   │           │   ├── file_too_large_cli_limit.snap\n    │   │           │   ├── file_too_large_config_limit.snap\n    │   │           │   ├── files_max_size_parse_error.snap\n    │   │           │   ├── fix_noop.snap\n    │   │           │   ├── fix_ok.snap\n    │   │           │   ├── fix_suggested_error.snap\n    │   │           │   ├── fix_unsafe_ok.snap\n    │   │           │   ├── fix_unsafe_with_error.snap\n    │   │           │   ├── fs_error_dereferenced_symlink.snap\n    │   │           │   ├── fs_error_infinite_symlink_expansion_to_dirs.snap\n    │   │           │   ├── fs_error_read_only.snap\n    │   │           │   ├── fs_error_unknown.snap\n    │   │           │   ├── fs_files_ignore_symlink.snap\n    │   │           │   ├── html_enabled_by_arg_check.snap\n    │   │           │   ├── ignore_configured_globals.snap\n    │   │           │   ├── ignores_unknown_file.snap\n    │   │           │   ├── lint_error.snap\n    │   │           │   ├── lint_error_without_file_paths.snap\n    │   │           │   ├── maximum_diagnostics.snap\n    │   │           │   ├── no_lint_if_files_are_listed_in_ignore_option.snap\n    │   │           │   ├── no_lint_if_linter_is_disabled.snap\n    │   │           │   ├── no_lint_if_linter_is_disabled_when_run_apply.snap\n    │   │           │   ├── no_lint_if_linter_is_disabled_when_run_apply_biome_jsonc.snap\n    │   │           │   ├── no_lint_when_file_is_ignored.snap\n    │   │           │   ├── no_supported_file_found.snap\n    │   │           │   ├── nursery_unstable.snap\n    │   │           │   ├── parse_error.snap\n    │   │           │   ├── print_json.snap\n    │   │           │   ├── print_json_pretty.snap\n    │   │           │   ├── print_verbose.snap\n    │   │           │   ├── print_verbose_write.snap\n    │   │           │   ├── should_apply_correct_file_source.snap\n    │   │           │   ├── should_disable_a_rule.snap\n    │   │           │   ├── should_disable_a_rule_group.snap\n    │   │           │   ├── should_error_if_unchanged_files_only_with_changed_flag.snap\n    │   │           │   ├── should_error_if_unstaged_files_only_with_staged_flag.snap\n    │   │           │   ├── should_not_disable_recommended_rules_for_a_group.snap\n    │   │           │   ├── should_not_enable_all_recommended_rules.snap\n    │   │           │   ├── should_organize_imports_diff_on_check.snap\n    │   │           │   ├── should_pass_if_there_are_only_warnings.snap\n    │   │           │   ├── should_show_formatter_diagnostics_for_files_ignored_by_linter.snap\n    │   │           │   ├── shows_organize_imports_diff_on_check_when_enforced.snap\n    │   │           │   ├── suppression_syntax_error.snap\n    │   │           │   ├── unsupported_file.snap\n    │   │           │   ├── unsupported_file_verbose.snap\n    │   │           │   ├── upgrade_severity.snap\n    │   │           │   ├── use_literal_keys_should_emit_correct_ast_issue_266.snap\n    │   │           │   ├── write_noop.snap\n    │   │           │   ├── write_ok.snap\n    │   │           │   ├── write_suggested_error.snap\n    │   │           │   ├── write_unsafe_ok.snap\n    │   │           │   └── write_unsafe_with_error.snap\n    │   │           ├── main_commands_ci/\n    │   │           │   ├── ci_does_not_enable_assist.snap\n    │   │           │   ├── ci_does_not_organize_imports_via_cli.snap\n    │   │           │   ├── ci_does_not_run_formatter.snap\n    │   │           │   ├── ci_does_not_run_formatter_biome_jsonc.snap\n    │   │           │   ├── ci_does_not_run_formatter_via_cli.snap\n    │   │           │   ├── ci_does_not_run_linter.snap\n    │   │           │   ├── ci_does_not_run_linter_via_cli.snap\n    │   │           │   ├── ci_errors_for_all_disabled_checks.snap\n    │   │           │   ├── ci_formatter_linter_organize_imports.snap\n    │   │           │   ├── ci_help.snap\n    │   │           │   ├── ci_lint_error.snap\n    │   │           │   ├── ci_ok.snap\n    │   │           │   ├── ci_parse_error.snap\n    │   │           │   ├── ci_runs_linter_not_formatter_issue_3495.snap\n    │   │           │   ├── ci_skip_errors.snap\n    │   │           │   ├── ci_skip_parse_errors.snap\n    │   │           │   ├── correctly_handles_ignored_and_not_ignored_files.snap\n    │   │           │   ├── does_error_with_only_warnings.snap\n    │   │           │   ├── does_formatting_error_without_file_paths.snap\n    │   │           │   ├── doesnt_error_if_no_files_were_processed.snap\n    │   │           │   ├── file_too_large.snap\n    │   │           │   ├── file_too_large_cli_limit.snap\n    │   │           │   ├── file_too_large_config_limit.snap\n    │   │           │   ├── files_max_size_parse_error.snap\n    │   │           │   ├── formatting_error.snap\n    │   │           │   ├── ignores_unknown_file.snap\n    │   │           │   ├── max_diagnostics.snap\n    │   │           │   ├── max_diagnostics_default.snap\n    │   │           │   ├── print_verbose.snap\n    │   │           │   └── should_error_if_unchanged_files_only_with_changed_flag.snap\n    │   │           ├── main_commands_explain/\n    │   │           │   ├── explain_help.snap\n    │   │           │   ├── explain_logs.snap\n    │   │           │   ├── explain_not_found.snap\n    │   │           │   ├── explain_valid_rule.snap\n    │   │           │   ├── explain_valid_rule_domain_rule.snap\n    │   │           │   └── explain_valid_rule_multiple_domains.snap\n    │   │           ├── main_commands_format/\n    │   │           │   ├── applies_configuration_from_biome_jsonc.snap\n    │   │           │   ├── applies_custom_arrow_parentheses.snap\n    │   │           │   ├── applies_custom_attribute_position.snap\n    │   │           │   ├── applies_custom_bracket_same_line.snap\n    │   │           │   ├── applies_custom_bracket_spacing.snap\n    │   │           │   ├── applies_custom_bracket_spacing_graphql.snap\n    │   │           │   ├── applies_custom_configuration.snap\n    │   │           │   ├── applies_custom_configuration_over_config_file.snap\n    │   │           │   ├── applies_custom_configuration_over_config_file_issue_3175_v1.snap\n    │   │           │   ├── applies_custom_configuration_over_config_file_issue_3175_v2.snap\n    │   │           │   ├── applies_custom_jsx_quote_style.snap\n    │   │           │   ├── applies_custom_quote_style.snap\n    │   │           │   ├── applies_custom_trailing_commas.snap\n    │   │           │   ├── can_format_graphphs_files.snap\n    │   │           │   ├── custom_config_file_path.snap\n    │   │           │   ├── does_not_format_if_disabled.snap\n    │   │           │   ├── does_not_format_if_files_are_listed_in_ignore_option.snap\n    │   │           │   ├── does_not_format_ignored_directories.snap\n    │   │           │   ├── does_not_format_ignored_file_in_included_directory.snap\n    │   │           │   ├── does_not_format_ignored_files.snap\n    │   │           │   ├── doesnt_error_if_no_files_were_processed.snap\n    │   │           │   ├── don_t_format_ignored_known_jsonc_files.snap\n    │   │           │   ├── file_too_large.snap\n    │   │           │   ├── file_too_large_cli_limit.snap\n    │   │           │   ├── file_too_large_config_limit.snap\n    │   │           │   ├── files_max_size_parse_error.snap\n    │   │           │   ├── format_empty_svelte_js_files_write.snap\n    │   │           │   ├── format_empty_svelte_ts_files_write.snap\n    │   │           │   ├── format_help.snap\n    │   │           │   ├── format_is_disabled.snap\n    │   │           │   ├── format_json_trailing_commas_all.snap\n    │   │           │   ├── format_json_trailing_commas_none.snap\n    │   │           │   ├── format_json_trailing_commas_overrides_all.snap\n    │   │           │   ├── format_json_trailing_commas_overrides_none.snap\n    │   │           │   ├── format_json_when_allow_trailing_commas.snap\n    │   │           │   ├── format_json_when_allow_trailing_commas_write.snap\n    │   │           │   ├── format_jsonc_files.snap\n    │   │           │   ├── format_package_json.snap\n    │   │           │   ├── format_shows_parse_diagnostics.snap\n    │   │           │   ├── format_skip_parse_errors_continues_with_valid_files.snap\n    │   │           │   ├── format_stdin_does_not_error_with_ignore_unknown_file_extensions.snap\n    │   │           │   ├── format_stdin_errors_with_no_file_extension.snap\n    │   │           │   ├── format_stdin_successfully.snap\n    │   │           │   ├── format_stdin_with_errors.snap\n    │   │           │   ├── format_svelte_explicit_js_files.snap\n    │   │           │   ├── format_svelte_explicit_js_files_write.snap\n    │   │           │   ├── format_svelte_implicit_js_files.snap\n    │   │           │   ├── format_svelte_implicit_js_files_write.snap\n    │   │           │   ├── format_svelte_ts_files.snap\n    │   │           │   ├── format_svelte_ts_files_write.snap\n    │   │           │   ├── format_with_configuration.snap\n    │   │           │   ├── format_without_file_paths.snap\n    │   │           │   ├── formatter_fix.snap\n    │   │           │   ├── formatter_lint_warning.snap\n    │   │           │   ├── formatter_print.snap\n    │   │           │   ├── formatter_write.snap\n    │   │           │   ├── fs_error_read_only.snap\n    │   │           │   ├── html_disabled_by_default.snap\n    │   │           │   ├── html_enabled_by_arg_format.snap\n    │   │           │   ├── ignore_comments_error_when_allow_comments.snap\n    │   │           │   ├── ignores_unknown_file.snap\n    │   │           │   ├── include_ignore_cascade.snap\n    │   │           │   ├── indent_size_parse_errors_negative.snap\n    │   │           │   ├── indent_size_parse_errors_overflow.snap\n    │   │           │   ├── indent_style_parse_errors.snap\n    │   │           │   ├── invalid_config_file_path.snap\n    │   │           │   ├── line_width_parse_errors_negative.snap\n    │   │           │   ├── line_width_parse_errors_overflow.snap\n    │   │           │   ├── max_diagnostics.snap\n    │   │           │   ├── max_diagnostics_default.snap\n    │   │           │   ├── no_supported_file_found.snap\n    │   │           │   ├── override_don_t_affect_ignored_files.snap\n    │   │           │   ├── print_json.snap\n    │   │           │   ├── print_json_pretty.snap\n    │   │           │   ├── print_verbose.snap\n    │   │           │   ├── quote_properties_parse_errors_letter_case.snap\n    │   │           │   ├── should_apply_different_formatting.snap\n    │   │           │   ├── should_apply_different_formatting_with_cli.snap\n    │   │           │   ├── should_apply_different_indent_style.snap\n    │   │           │   ├── should_error_if_unchanged_files_only_with_changed_flag.snap\n    │   │           │   ├── should_error_if_unstaged_files_only_with_staged_flag.snap\n    │   │           │   ├── should_format_files_in_folders_ignored_by_linter.snap\n    │   │           │   ├── should_not_format_css_files_if_disabled.snap\n    │   │           │   ├── should_not_format_file_with_syntax_errors.snap\n    │   │           │   ├── should_not_format_js_files_if_disabled.snap\n    │   │           │   ├── should_not_format_json_files_if_disabled.snap\n    │   │           │   ├── trailing_commas_parse_errors.snap\n    │   │           │   ├── treat_known_json_files_as_jsonc_files.snap\n    │   │           │   ├── vcs_absolute_path.snap\n    │   │           │   ├── with_invalid_semicolons_option.snap\n    │   │           │   ├── with_semicolons_options.snap\n    │   │           │   └── write_only_files_in_correct_base.snap\n    │   │           ├── main_commands_init/\n    │   │           │   ├── creates_config_file.snap\n    │   │           │   ├── creates_config_file_when_biome_installed_via_package_manager.snap\n    │   │           │   ├── creates_config_jsonc_file.snap\n    │   │           │   ├── does_not_create_config_file_if_json_exists.snap\n    │   │           │   ├── does_not_create_config_file_if_jsonc_exists.snap\n    │   │           │   └── init_help.snap\n    │   │           ├── main_commands_lint/\n    │   │           │   ├── apply_bogus_argument.snap\n    │   │           │   ├── apply_noop.snap\n    │   │           │   ├── apply_ok.snap\n    │   │           │   ├── apply_suggested.snap\n    │   │           │   ├── apply_suggested_error.snap\n    │   │           │   ├── apply_unsafe_with_error.snap\n    │   │           │   ├── check_json_files.snap\n    │   │           │   ├── check_stdin_shows_parse_diagnostics.snap\n    │   │           │   ├── check_stdin_write_successfully.snap\n    │   │           │   ├── check_stdin_write_unsafe_successfully.snap\n    │   │           │   ├── config_recommended_group.snap\n    │   │           │   ├── does_error_with_only_warnings.snap\n    │   │           │   ├── doesnt_error_if_no_files_were_processed.snap\n    │   │           │   ├── downgrade_severity.snap\n    │   │           │   ├── downgrade_severity_info.snap\n    │   │           │   ├── file_too_large.snap\n    │   │           │   ├── file_too_large_cli_limit.snap\n    │   │           │   ├── file_too_large_config_limit.snap\n    │   │           │   ├── files_max_size_parse_error.snap\n    │   │           │   ├── fix_noop.snap\n    │   │           │   ├── fix_ok.snap\n    │   │           │   ├── fix_suggested.snap\n    │   │           │   ├── fix_suggested_error.snap\n    │   │           │   ├── fix_unsafe_with_error.snap\n    │   │           │   ├── fs_error_dereferenced_symlink.snap\n    │   │           │   ├── fs_error_infinite_symlink_expansion_to_dirs.snap\n    │   │           │   ├── fs_error_read_only.snap\n    │   │           │   ├── fs_error_unknown.snap\n    │   │           │   ├── group_level_recommended_false_enable_specific.snap\n    │   │           │   ├── ignore_configured_globals.snap\n    │   │           │   ├── ignore_file_in_subdir_in_symlinked_dir.snap\n    │   │           │   ├── ignores_unknown_file.snap\n    │   │           │   ├── include_files_in_subdir.snap\n    │   │           │   ├── include_files_in_symlinked_subdir.snap\n    │   │           │   ├── lint_error.snap\n    │   │           │   ├── lint_error_without_file_paths.snap\n    │   │           │   ├── lint_help.snap\n    │   │           │   ├── lint_only_group.snap\n    │   │           │   ├── lint_only_group_skip_rule.snap\n    │   │           │   ├── lint_only_group_with_disabled_rule.snap\n    │   │           │   ├── lint_only_missing_group.snap\n    │   │           │   ├── lint_only_multiple_rules.snap\n    │   │           │   ├── lint_only_rule.snap\n    │   │           │   ├── lint_only_rule_and_group.snap\n    │   │           │   ├── lint_only_rule_doesnt_exist.snap\n    │   │           │   ├── lint_only_rule_ignore_suppression_comments.snap\n    │   │           │   ├── lint_only_rule_skip_group.snap\n    │   │           │   ├── lint_only_rule_with_config.snap\n    │   │           │   ├── lint_only_rule_with_linter_disabled.snap\n    │   │           │   ├── lint_only_rule_with_recommended_disabled.snap\n    │   │           │   ├── lint_only_skip_group.snap\n    │   │           │   ├── lint_only_skip_rule.snap\n    │   │           │   ├── lint_only_write.snap\n    │   │           │   ├── lint_skip_errors.snap\n    │   │           │   ├── lint_skip_group_with_enabled_rule.snap\n    │   │           │   ├── lint_skip_multiple_rules.snap\n    │   │           │   ├── lint_skip_parse_errors.snap\n    │   │           │   ├── lint_skip_rule.snap\n    │   │           │   ├── lint_skip_rule_and_group.snap\n    │   │           │   ├── lint_skip_write.snap\n    │   │           │   ├── lint_syntax_rules.snap\n    │   │           │   ├── linter_can_resolve_imported_symbols.snap\n    │   │           │   ├── linter_doesnt_crash_on_malformed_code_from_issue_4623.snap\n    │   │           │   ├── linter_doesnt_crash_on_malformed_code_from_issue_4723.snap\n    │   │           │   ├── linter_enables_project_domain_based_on_extended_config.snap\n    │   │           │   ├── linter_finds_nested_package_json_for_no_undeclared_dependencies.snap\n    │   │           │   ├── linter_finds_nested_package_json_for_no_undeclared_dependencies_inversed.snap\n    │   │           │   ├── linter_finds_package_json_for_no_undeclared_dependencies.snap\n    │   │           │   ├── linter_shows_the_default_severity_of_rule_on.snap\n    │   │           │   ├── maximum_diagnostics.snap\n    │   │           │   ├── no_lint_if_files_are_listed_in_ignore_option.snap\n    │   │           │   ├── no_lint_if_linter_is_disabled.snap\n    │   │           │   ├── no_lint_if_linter_is_disabled_when_run_apply.snap\n    │   │           │   ├── no_lint_if_linter_is_disabled_when_run_apply_biome_jsonc.snap\n    │   │           │   ├── no_lint_when_file_is_ignored.snap\n    │   │           │   ├── no_supported_file_found.snap\n    │   │           │   ├── nursery_unstable.snap\n    │   │           │   ├── parse_error.snap\n    │   │           │   ├── print_verbose.snap\n    │   │           │   ├── should_apply_correct_file_source.snap\n    │   │           │   ├── should_apply_root_settings_with_stdin_file_path.snap\n    │   │           │   ├── should_apply_root_settings_with_stdin_file_path_and_extended_broken_config.snap\n    │   │           │   ├── should_apply_root_settings_with_stdin_file_path_and_extended_config.snap\n    │   │           │   ├── should_apply_root_settings_with_stdin_file_path_and_extended_non_root_config.snap\n    │   │           │   ├── should_disable_a_rule.snap\n    │   │           │   ├── should_disable_a_rule_group.snap\n    │   │           │   ├── should_error_if_changed_flag_and_staged_flag_are_active_at_the_same_time.snap\n    │   │           │   ├── should_error_if_changed_flag_is_used_without_since_or_default_branch_config.snap\n    │   │           │   ├── should_error_if_since_arg_is_used_without_changed.snap\n    │   │           │   ├── should_error_if_unchanged_files_only_with_changed_flag.snap\n    │   │           │   ├── should_error_if_unstaged_files_only_with_staged_flag.snap\n    │   │           │   ├── should_lint_module_in_commonjs_package.snap\n    │   │           │   ├── should_not_choke_on_recursive_function_call.snap\n    │   │           │   ├── should_not_disable_recommended_rules_for_a_group.snap\n    │   │           │   ├── should_not_enable_all_recommended_rules.snap\n    │   │           │   ├── should_not_error_for_no_changed_files_with_no_errors_on_unmatched.snap\n    │   │           │   ├── should_not_process_ignored_file_even_if_its_changed.snap\n    │   │           │   ├── should_not_process_ignored_file_even_if_its_staged.snap\n    │   │           │   ├── should_only_process_changed_file_if_its_included.snap\n    │   │           │   ├── should_only_process_staged_file_if_its_included.snap\n    │   │           │   ├── should_only_processes_changed_files_when_changed_flag_is_set.snap\n    │   │           │   ├── should_only_processes_staged_files_when_staged_flag_is_set.snap\n    │   │           │   ├── should_pass_if_there_are_only_warnings.snap\n    │   │           │   ├── should_process_changed_files_if_changed_flag_is_set_and_default_branch_is_configured.snap\n    │   │           │   ├── should_report_when_schema_version_mismatch.snap\n    │   │           │   ├── suppression_syntax_error.snap\n    │   │           │   ├── unsupported_file.snap\n    │   │           │   ├── unsupported_file_verbose.snap\n    │   │           │   └── upgrade_severity.snap\n    │   │           ├── main_commands_lsp_proxy/\n    │   │           │   └── lsp_proxy_help.snap\n    │   │           ├── main_commands_migrate/\n    │   │           │   ├── migrate_config_up_to_date.snap\n    │   │           │   ├── migrate_help.snap\n    │   │           │   ├── missing_configuration_file.snap\n    │   │           │   ├── should_migrate_nested_files.snap\n    │   │           │   └── should_suggest_error_incompatible_arguments.snap\n    │   │           ├── main_commands_migrate_eslint/\n    │   │           │   ├── migrate_eslint_config_packagejson.snap\n    │   │           │   ├── migrate_eslintignore.snap\n    │   │           │   ├── migrate_eslintignore_and_ignore_patterns.snap\n    │   │           │   ├── migrate_eslintignore_negated_patterns.snap\n    │   │           │   ├── migrate_eslintrc.snap\n    │   │           │   ├── migrate_eslintrcjson.snap\n    │   │           │   ├── migrate_eslintrcjson_empty.snap\n    │   │           │   ├── migrate_eslintrcjson_exclude_inspired.snap\n    │   │           │   ├── migrate_eslintrcjson_extended_rules.snap\n    │   │           │   ├── migrate_eslintrcjson_fix.snap\n    │   │           │   ├── migrate_eslintrcjson_include_inspired.snap\n    │   │           │   ├── migrate_eslintrcjson_missing_biomejson.snap\n    │   │           │   ├── migrate_eslintrcjson_override_existing_config.snap\n    │   │           │   ├── migrate_eslintrcjson_rule_options.snap\n    │   │           │   ├── migrate_eslintrcjson_write.snap\n    │   │           │   ├── migrate_eslintrcyaml_unsupported.snap\n    │   │           │   ├── migrate_merge_with_overrides.snap\n    │   │           │   └── migrate_no_eslint_config_packagejson.snap\n    │   │           ├── main_commands_migrate_prettier/\n    │   │           │   ├── prettier_migrate.snap\n    │   │           │   ├── prettier_migrate_end_of_line.snap\n    │   │           │   ├── prettier_migrate_fix.snap\n    │   │           │   ├── prettier_migrate_jsonc.snap\n    │   │           │   ├── prettier_migrate_no_file.snap\n    │   │           │   ├── prettier_migrate_override_with_bad_print_width.snap\n    │   │           │   ├── prettier_migrate_overrides.snap\n    │   │           │   ├── prettier_migrate_with_bad_top_level_print_width.snap\n    │   │           │   ├── prettier_migrate_with_ignore.snap\n    │   │           │   ├── prettier_migrate_write.snap\n    │   │           │   ├── prettier_migrate_write_biome_jsonc.snap\n    │   │           │   ├── prettier_migrate_write_packagejson.snap\n    │   │           │   ├── prettier_migrate_write_with_ignore_file.snap\n    │   │           │   ├── prettier_migrate_yml_file.snap\n    │   │           │   └── prettierjson_migrate_write.snap\n    │   │           ├── main_commands_rage/\n    │   │           │   ├── rage_help.snap\n    │   │           │   ├── rage_ok.snap\n    │   │           │   ├── with_configuration.snap\n    │   │           │   ├── with_formatter_configuration.snap\n    │   │           │   ├── with_jsonc_configuration.snap\n    │   │           │   ├── with_linter_configuration.snap\n    │   │           │   ├── with_malformed_configuration.snap\n    │   │           │   ├── with_no_configuration.snap\n    │   │           │   └── with_server_logs.snap\n    │   │           ├── main_commands_search/\n    │   │           │   ├── search_css_pattern.snap\n    │   │           │   ├── search_css_pattern_shorthand.snap\n    │   │           │   ├── search_css_pattern_skips_js_files.snap\n    │   │           │   ├── search_js_pattern.snap\n    │   │           │   └── search_js_pattern_skips_css_files.snap\n    │   │           ├── main_commands_version/\n    │   │           │   ├── version_full.snap\n    │   │           │   └── version_ok.snap\n    │   │           └── main_configuration/\n    │   │               ├── correct_root.snap\n    │   │               ├── incorrect_globals.snap\n    │   │               ├── incorrect_rule_name.snap\n    │   │               ├── line_width_error.snap\n    │   │               └── override_globals.snap\n    │   ├── biome_configuration/\n    │   │   ├── Cargo.toml\n    │   │   ├── benches/\n    │   │   │   ├── biome_bench.json\n    │   │   │   └── biome_json.rs\n    │   │   ├── src/\n    │   │   │   ├── bool.rs\n    │   │   │   ├── css.rs\n    │   │   │   ├── diagnostics.rs\n    │   │   │   ├── editorconfig.rs\n    │   │   │   ├── extends.rs\n    │   │   │   ├── formatter.rs\n    │   │   │   ├── generated.rs\n    │   │   │   ├── graphql.rs\n    │   │   │   ├── grit.rs\n    │   │   │   ├── html.rs\n    │   │   │   ├── json.rs\n    │   │   │   ├── lib.rs\n    │   │   │   ├── max_size.rs\n    │   │   │   ├── organize_imports.rs\n    │   │   │   ├── overrides.rs\n    │   │   │   ├── plugins.rs\n    │   │   │   ├── vcs.rs\n    │   │   │   ├── analyzer/\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   ├── assist/\n    │   │   │   │   │   ├── actions.rs\n    │   │   │   │   │   └── mod.rs\n    │   │   │   │   └── linter/\n    │   │   │   │       ├── mod.rs\n    │   │   │   │       └── rules.rs\n    │   │   │   ├── generated/\n    │   │   │   │   ├── assist.rs\n    │   │   │   │   └── linter.rs\n    │   │   │   ├── javascript/\n    │   │   │   │   ├── formatter.rs\n    │   │   │   │   └── mod.rs\n    │   │   │   └── snapshots/\n    │   │   │       ├── config_already_exists.snap\n    │   │   │       ├── deserialization_error.snap\n    │   │   │       ├── incorrect_pattern.snap\n    │   │   │       └── unknown_rule.snap\n    │   │   └── tests/\n    │   │       ├── spec_tests.rs\n    │   │       ├── invalid/\n    │   │       │   ├── css_formatter_quote_style.json\n    │   │       │   ├── css_formatter_quote_style.json.snap\n    │   │       │   ├── domains.json\n    │   │       │   ├── domains.json.snap\n    │   │       │   ├── files_extraneous_field.json\n    │   │       │   ├── files_extraneous_field.json.snap\n    │   │       │   ├── files_incorrect_type.json\n    │   │       │   ├── files_incorrect_type.json.snap\n    │   │       │   ├── files_incorrect_type_for_value.json\n    │   │       │   ├── files_incorrect_type_for_value.json.snap\n    │   │       │   ├── files_negative_max_size.json\n    │   │       │   ├── files_negative_max_size.json.snap\n    │   │       │   ├── formatter_extraneous_field.json\n    │   │       │   ├── formatter_extraneous_field.json.snap\n    │   │       │   ├── formatter_format_with_errors_incorrect_type.json\n    │   │       │   ├── formatter_format_with_errors_incorrect_type.json.snap\n    │   │       │   ├── formatter_incorrect_type.json\n    │   │       │   ├── formatter_incorrect_type.json.snap\n    │   │       │   ├── formatter_line_width_too_high.json\n    │   │       │   ├── formatter_line_width_too_high.json.snap\n    │   │       │   ├── formatter_line_width_too_higher_than_allowed.json\n    │   │       │   ├── formatter_line_width_too_higher_than_allowed.json.snap\n    │   │       │   ├── formatter_quote_style.json\n    │   │       │   ├── formatter_quote_style.json.snap\n    │   │       │   ├── formatter_syntax_error.json\n    │   │       │   ├── formatter_syntax_error.json.snap\n    │   │       │   ├── hooks_deprecated.json\n    │   │       │   ├── hooks_deprecated.json.snap\n    │   │       │   ├── hooks_incorrect_options.json\n    │   │       │   ├── hooks_incorrect_options.json.snap\n    │   │       │   ├── javascript_formatter_quote_properties.json\n    │   │       │   ├── javascript_formatter_quote_properties.json.snap\n    │   │       │   ├── javascript_formatter_quote_style.json\n    │   │       │   ├── javascript_formatter_quote_style.json.snap\n    │   │       │   ├── javascript_formatter_semicolons.json\n    │   │       │   ├── javascript_formatter_semicolons.json.snap\n    │   │       │   ├── javascript_formatter_trailing_commas.json\n    │   │       │   ├── javascript_formatter_trailing_commas.json.snap\n    │   │       │   ├── naming_convention_incorrect_options.json\n    │   │       │   ├── naming_convention_incorrect_options.json.snap\n    │   │       │   ├── organize_imports.json\n    │   │       │   ├── organize_imports.json.snap\n    │   │       │   ├── root_and_extends.json\n    │   │       │   ├── root_and_extends.json.snap\n    │   │       │   ├── schema.json\n    │   │       │   ├── schema.json.snap\n    │   │       │   ├── top_level_extraneous_field.json\n    │   │       │   ├── top_level_extraneous_field.json.snap\n    │   │       │   ├── vcs_incorrect_type.json\n    │   │       │   ├── vcs_incorrect_type.json.snap\n    │   │       │   ├── vcs_missing_client.json\n    │   │       │   ├── vcs_missing_client.json.snap\n    │   │       │   ├── vcs_wrong_client.json\n    │   │       │   ├── vcs_wrong_client.json.snap\n    │   │       │   ├── wrong_extends_incorrect_items.json\n    │   │       │   ├── wrong_extends_incorrect_items.json.snap\n    │   │       │   ├── wrong_extends_type.json\n    │   │       │   ├── wrong_extends_type.json.snap\n    │   │       │   └── overrides/\n    │   │       │       ├── incorrect_key.json\n    │   │       │       ├── incorrect_key.json.snap\n    │   │       │       ├── incorrect_type.json\n    │   │       │       ├── incorrect_type.json.snap\n    │   │       │       ├── incorrect_value_javascript.json\n    │   │       │       └── incorrect_value_javascript.json.snap\n    │   │       └── valid/\n    │   │           ├── base_options_inside_css.json\n    │   │           ├── base_options_inside_javascript.json\n    │   │           ├── base_options_inside_json.json\n    │   │           ├── extends_jsonc_m.json\n    │   │           ├── extends_jsonc_s.jsonc\n    │   │           └── overrides/\n    │   │               └── top_level_keys.json\n    │   ├── biome_console/\n    │   │   ├── README.md\n    │   │   ├── Cargo.toml\n    │   │   ├── CODESPAN_LICENSE\n    │   │   ├── LICENSE\n    │   │   ├── src/\n    │   │   │   ├── fmt.rs\n    │   │   │   ├── lib.rs\n    │   │   │   ├── markup.rs\n    │   │   │   ├── utils.rs\n    │   │   │   ├── write.rs\n    │   │   │   └── write/\n    │   │   │       ├── html.rs\n    │   │   │       └── termcolor.rs\n    │   │   └── tests/\n    │   │       ├── macro.rs\n    │   │       └── markup/\n    │   │           ├── closing_element_mismatch.rs\n    │   │           ├── closing_element_mismatch.stderr\n    │   │           ├── closing_element_standalone.rs\n    │   │           ├── closing_element_standalone.stderr\n    │   │           ├── element_non_ident_name.rs\n    │   │           ├── element_non_ident_name.stderr\n    │   │           ├── invalid_group.rs\n    │   │           ├── invalid_group.stderr\n    │   │           ├── invalid_punct.rs\n    │   │           ├── invalid_punct.stderr\n    │   │           ├── open_element_improper_close_1.rs\n    │   │           ├── open_element_improper_close_1.stderr\n    │   │           ├── open_element_improper_close_2.rs\n    │   │           ├── open_element_improper_close_2.stderr\n    │   │           ├── open_element_improper_prop_value.rs\n    │   │           ├── open_element_improper_prop_value.stderr\n    │   │           ├── open_element_missing_prop_value.rs\n    │   │           ├── open_element_missing_prop_value.stderr\n    │   │           ├── open_element_unfinished_1.rs\n    │   │           ├── open_element_unfinished_1.stderr\n    │   │           ├── open_element_unfinished_2.rs\n    │   │           ├── open_element_unfinished_2.stderr\n    │   │           ├── open_element_unfinished_3.rs\n    │   │           ├── open_element_unfinished_3.stderr\n    │   │           ├── open_element_unfinished_4.rs\n    │   │           ├── open_element_unfinished_4.stderr\n    │   │           ├── open_element_unfinished_5.rs\n    │   │           ├── open_element_unfinished_5.stderr\n    │   │           ├── open_element_unfinished_6.rs\n    │   │           ├── open_element_unfinished_6.stderr\n    │   │           ├── open_element_unfinished_7.rs\n    │   │           ├── open_element_unfinished_7.stderr\n    │   │           ├── unclosed_element.rs\n    │   │           └── unclosed_element.stderr\n    │   ├── biome_control_flow/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── builder.rs\n    │   │       └── lib.rs\n    │   ├── biome_css_analyze/\n    │   │   ├── Cargo.toml\n    │   │   ├── benches/\n    │   │   │   ├── analyzer-libs-css.txt\n    │   │   │   └── css_analyzer.rs\n    │   │   ├── src/\n    │   │   │   ├── assist.rs\n    │   │   │   ├── fonts.rs\n    │   │   │   ├── keywords.rs\n    │   │   │   ├── lib.rs\n    │   │   │   ├── lint.rs\n    │   │   │   ├── order.rs\n    │   │   │   ├── registry.rs\n    │   │   │   ├── suppression_action.rs\n    │   │   │   ├── utils.rs\n    │   │   │   ├── assist/\n    │   │   │   │   ├── source.rs\n    │   │   │   │   └── source/\n    │   │   │   │       └── use_sorted_properties.rs\n    │   │   │   ├── lint/\n    │   │   │   │   ├── a11y.rs\n    │   │   │   │   ├── complexity.rs\n    │   │   │   │   ├── correctness.rs\n    │   │   │   │   ├── style.rs\n    │   │   │   │   ├── suspicious.rs\n    │   │   │   │   ├── a11y/\n    │   │   │   │   │   └── use_generic_font_names.rs\n    │   │   │   │   ├── complexity/\n    │   │   │   │   │   └── no_important_styles.rs\n    │   │   │   │   ├── correctness/\n    │   │   │   │   │   ├── no_invalid_direction_in_linear_gradient.rs\n    │   │   │   │   │   ├── no_invalid_grid_areas.rs\n    │   │   │   │   │   ├── no_invalid_position_at_import_rule.rs\n    │   │   │   │   │   ├── no_missing_var_function.rs\n    │   │   │   │   │   ├── no_unknown_function.rs\n    │   │   │   │   │   ├── no_unknown_media_feature_name.rs\n    │   │   │   │   │   ├── no_unknown_property.rs\n    │   │   │   │   │   ├── no_unknown_pseudo_class.rs\n    │   │   │   │   │   ├── no_unknown_pseudo_element.rs\n    │   │   │   │   │   ├── no_unknown_type_selector.rs\n    │   │   │   │   │   ├── no_unknown_unit.rs\n    │   │   │   │   │   └── no_unmatchable_anb_selector.rs\n    │   │   │   │   ├── style/\n    │   │   │   │   │   ├── no_descending_specificity.rs\n    │   │   │   │   │   └── no_value_at_rule.rs\n    │   │   │   │   └── suspicious/\n    │   │   │   │       ├── no_duplicate_at_import_rules.rs\n    │   │   │   │       ├── no_duplicate_custom_properties.rs\n    │   │   │   │       ├── no_duplicate_font_names.rs\n    │   │   │   │       ├── no_duplicate_properties.rs\n    │   │   │   │       ├── no_duplicate_selectors_keyframe_block.rs\n    │   │   │   │       ├── no_empty_block.rs\n    │   │   │   │       ├── no_important_in_keyframe.rs\n    │   │   │   │       ├── no_irregular_whitespace.rs\n    │   │   │   │       ├── no_shorthand_property_overrides.rs\n    │   │   │   │       ├── no_unknown_at_rules.rs\n    │   │   │   │       └── no_useless_escape_in_string.rs\n    │   │   │   └── services/\n    │   │   │       ├── mod.rs\n    │   │   │       └── semantic.rs\n    │   │   └── tests/\n    │   │       ├── quick_test.rs\n    │   │       ├── spec_tests.rs\n    │   │       ├── plugin/\n    │   │       │   ├── useLowercaseColors.css\n    │   │       │   ├── useLowercaseColors.grit\n    │   │       │   └── useLowercaseColors.grit.snap\n    │   │       ├── specs/\n    │   │       │   ├── a11y/\n    │   │       │   │   └── useGenericFontNames/\n    │   │       │   │       ├── invalid.css\n    │   │       │   │       ├── invalid.css.snap\n    │   │       │   │       ├── valid.css\n    │   │       │   │       └── valid.css.snap\n    │   │       │   ├── complexity/\n    │   │       │   │   └── noImportantStyles/\n    │   │       │   │       ├── invalid.css\n    │   │       │   │       └── invalid.css.snap\n    │   │       │   ├── correctness/\n    │   │       │   │   ├── noInvalidDirectionInLinearGradient/\n    │   │       │   │   │   ├── invalid.css\n    │   │       │   │   │   ├── invalid.css.snap\n    │   │       │   │   │   ├── valid.css\n    │   │       │   │   │   └── valid.css.snap\n    │   │       │   │   ├── noInvalidGridAreas/\n    │   │       │   │   │   ├── invalid.css\n    │   │       │   │   │   ├── invalid.css.snap\n    │   │       │   │   │   ├── valid.css\n    │   │       │   │   │   └── valid.css.snap\n    │   │       │   │   ├── noInvalidPositionAtImportRule/\n    │   │       │   │   │   ├── invalid.css\n    │   │       │   │   │   ├── invalid.css.snap\n    │   │       │   │   │   ├── invalidBetweenImport.css\n    │   │       │   │   │   ├── invalidBetweenImport.css.snap\n    │   │       │   │   │   ├── invalidMediaImport.css\n    │   │       │   │   │   ├── invalidMediaImport.css.snap\n    │   │       │   │   │   ├── invalidMediaImportUpperCase.css\n    │   │       │   │   │   ├── invalidMediaImportUpperCase.css.snap\n    │   │       │   │   │   ├── valid.css\n    │   │       │   │   │   ├── valid.css.snap\n    │   │       │   │   │   ├── validCharset.css\n    │   │       │   │   │   ├── validCharset.css.snap\n    │   │       │   │   │   ├── validCharsetComment.css\n    │   │       │   │   │   ├── validCharsetComment.css.snap\n    │   │       │   │   │   ├── validCharsetMultipleImport.css\n    │   │       │   │   │   ├── validCharsetMultipleImport.css.snap\n    │   │       │   │   │   ├── validComment.css\n    │   │       │   │   │   ├── validComment.css.snap\n    │   │       │   │   │   ├── validLayerImport.css\n    │   │       │   │   │   ├── validLayerImport.css.snap\n    │   │       │   │   │   ├── validMultipleImport.css\n    │   │       │   │   │   ├── validMultipleImport.css.snap\n    │   │       │   │   │   ├── validNoImportant.css\n    │   │       │   │   │   └── validNoImportant.css.snap\n    │   │       │   │   ├── noMissingVarFunction/\n    │   │       │   │   │   ├── invalid.css\n    │   │       │   │   │   ├── invalid.css.snap\n    │   │       │   │   │   ├── valid.css\n    │   │       │   │   │   └── valid.css.snap\n    │   │       │   │   ├── noUnknownFunction/\n    │   │       │   │   │   ├── invalid.css\n    │   │       │   │   │   ├── invalid.css.snap\n    │   │       │   │   │   ├── valid.css\n    │   │       │   │   │   └── valid.css.snap\n    │   │       │   │   ├── noUnknownMediaFeatureName/\n    │   │       │   │   │   ├── invalid.css\n    │   │       │   │   │   ├── invalid.css.snap\n    │   │       │   │   │   ├── valid.css\n    │   │       │   │   │   └── valid.css.snap\n    │   │       │   │   ├── noUnknownProperty/\n    │   │       │   │   │   ├── invalid.css\n    │   │       │   │   │   ├── invalid.css.snap\n    │   │       │   │   │   ├── valid.css\n    │   │       │   │   │   └── valid.css.snap\n    │   │       │   │   ├── noUnknownPseudoClass/\n    │   │       │   │   │   ├── invalid.css\n    │   │       │   │   │   ├── invalid.css.snap\n    │   │       │   │   │   ├── valid.css\n    │   │       │   │   │   ├── valid.css.snap\n    │   │       │   │   │   ├── validGlobal.css\n    │   │       │   │   │   ├── validGlobal.css.snap\n    │   │       │   │   │   └── validGlobal.options.json\n    │   │       │   │   ├── noUnknownPseudoElement/\n    │   │       │   │   │   ├── invalid.css\n    │   │       │   │   │   ├── invalid.css.snap\n    │   │       │   │   │   ├── valid.css\n    │   │       │   │   │   └── valid.css.snap\n    │   │       │   │   ├── noUnknownTypeSelector/\n    │   │       │   │   │   ├── invalid.css\n    │   │       │   │   │   ├── invalid.css.snap\n    │   │       │   │   │   ├── valid.css\n    │   │       │   │   │   └── valid.css.snap\n    │   │       │   │   ├── noUnknownUnit/\n    │   │       │   │   │   ├── invalid.css\n    │   │       │   │   │   ├── invalid.css.snap\n    │   │       │   │   │   ├── valid.css\n    │   │       │   │   │   └── valid.css.snap\n    │   │       │   │   └── noUnmatchableAnbSelector/\n    │   │       │   │       ├── invalid.css\n    │   │       │   │       ├── invalid.css.snap\n    │   │       │   │       ├── valid.css\n    │   │       │   │       └── valid.css.snap\n    │   │       │   ├── source/\n    │   │       │   │   └── useSortedProperties/\n    │   │       │   │       ├── invalid.css\n    │   │       │   │       ├── invalid.css.snap\n    │   │       │   │       ├── valid.css\n    │   │       │   │       └── valid.css.snap\n    │   │       │   ├── style/\n    │   │       │   │   ├── noDescendingSpecificity/\n    │   │       │   │   │   ├── complex_selector.invalid.css\n    │   │       │   │   │   ├── complex_selector.invalid.css.snap\n    │   │       │   │   │   ├── function_pseudo_selector.invalid.css\n    │   │       │   │   │   ├── function_pseudo_selector.invalid.css.snap\n    │   │       │   │   │   ├── nested.invalid.css\n    │   │       │   │   │   ├── nested.invalid.css.snap\n    │   │       │   │   │   ├── simple_pseudo_selector.invalid.css\n    │   │       │   │   │   ├── simple_pseudo_selector.invalid.css.snap\n    │   │       │   │   │   ├── valid.css\n    │   │       │   │   │   └── valid.css.snap\n    │   │       │   │   └── noValueAtRule/\n    │   │       │   │       ├── invalid.module.css\n    │   │       │   │       ├── invalid.module.css.snap\n    │   │       │   │       ├── valid.module.css\n    │   │       │   │       └── valid.module.css.snap\n    │   │       │   └── suspicious/\n    │   │       │       ├── noDuplicateAtImportRules/\n    │   │       │       │   ├── invalid.css\n    │   │       │       │   ├── invalid.css.snap\n    │   │       │       │   ├── invalidMedia.css\n    │   │       │       │   ├── invalidMedia.css.snap\n    │   │       │       │   ├── invalidMultipleMedia.css\n    │   │       │       │   ├── invalidMultipleMedia.css.snap\n    │   │       │       │   ├── invalidQuotes.css\n    │   │       │       │   ├── invalidQuotes.css.snap\n    │   │       │       │   ├── invalidUrls.css\n    │   │       │       │   ├── invalidUrls.css.snap\n    │   │       │       │   ├── valid.css\n    │   │       │       │   └── valid.css.snap\n    │   │       │       ├── noDuplicateCustomProperties/\n    │   │       │       │   ├── invalid.css\n    │   │       │       │   ├── invalid.css.snap\n    │   │       │       │   ├── valid.css\n    │   │       │       │   └── valid.css.snap\n    │   │       │       ├── noDuplicateFontNames/\n    │   │       │       │   ├── invalid.css\n    │   │       │       │   ├── invalid.css.snap\n    │   │       │       │   ├── valid.css\n    │   │       │       │   └── valid.css.snap\n    │   │       │       ├── noDuplicateProperties/\n    │   │       │       │   ├── invalid.css\n    │   │       │       │   ├── invalid.css.snap\n    │   │       │       │   ├── valid.css\n    │   │       │       │   ├── valid.css.snap\n    │   │       │       │   ├── valid_6022.css\n    │   │       │       │   └── valid_6022.css.snap\n    │   │       │       ├── noDuplicateSelectorsKeyframeBlock/\n    │   │       │       │   ├── invalid.css\n    │   │       │       │   ├── invalid.css.snap\n    │   │       │       │   ├── valid.css\n    │   │       │       │   └── valid.css.snap\n    │   │       │       ├── noEmptyBlock/\n    │   │       │       │   ├── invalid.css\n    │   │       │       │   ├── invalid.css.snap\n    │   │       │       │   ├── valid.css\n    │   │       │       │   └── valid.css.snap\n    │   │       │       ├── noImportantInKeyframe/\n    │   │       │       │   ├── invalid.css\n    │   │       │       │   ├── invalid.css.snap\n    │   │       │       │   ├── valid.css\n    │   │       │       │   └── valid.css.snap\n    │   │       │       ├── noIrregularWhitespace/\n    │   │       │       │   ├── invalid.css\n    │   │       │       │   ├── invalid.css.snap\n    │   │       │       │   ├── valid.css\n    │   │       │       │   └── valid.css.snap\n    │   │       │       ├── noShorthandPropertyOverrides/\n    │   │       │       │   ├── invalid.css\n    │   │       │       │   ├── invalid.css.snap\n    │   │       │       │   ├── valid.css\n    │   │       │       │   └── valid.css.snap\n    │   │       │       ├── noUnknownAtRules/\n    │   │       │       │   ├── invalid.css\n    │   │       │       │   ├── invalid.css.snap\n    │   │       │       │   ├── valid.css\n    │   │       │       │   └── valid.css.snap\n    │   │       │       └── noUselessEscapeInString/\n    │   │       │           ├── invalid.css\n    │   │       │           ├── invalid.css.snap\n    │   │       │           ├── valid.css\n    │   │       │           └── valid.css.snap\n    │   │       └── suppression/\n    │   │           ├── source/\n    │   │           │   └── useSortedProperties/\n    │   │           │       ├── valid.css\n    │   │           │       └── valid.css.snap\n    │   │           └── suspicious/\n    │   │               ├── noDuplicateFontNames/\n    │   │               │   ├── noDuplicateFontNames.css\n    │   │               │   └── noDuplicateFontNames.css.snap\n    │   │               └── noEmptyBlock/\n    │   │                   ├── noEmptyBlock.css\n    │   │                   └── noEmptyBlock.css.snap\n    │   ├── biome_css_factory/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── generated.rs\n    │   │       ├── lib.rs\n    │   │       └── generated/\n    │   │           ├── node_factory.rs\n    │   │           └── syntax_factory.rs\n    │   ├── biome_css_formatter/\n    │   │   ├── README.md\n    │   │   ├── Cargo.toml\n    │   │   ├── benches/\n    │   │   │   ├── css_formatter.rs\n    │   │   │   └── libs-css.txt\n    │   │   ├── src/\n    │   │   │   ├── comments.rs\n    │   │   │   ├── context.rs\n    │   │   │   ├── cst.rs\n    │   │   │   ├── generated.rs\n    │   │   │   ├── lib.rs\n    │   │   │   ├── prelude.rs\n    │   │   │   ├── separated.rs\n    │   │   │   ├── trivia.rs\n    │   │   │   ├── verbatim.rs\n    │   │   │   ├── css/\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   ├── any/\n    │   │   │   │   │   ├── at_rule.rs\n    │   │   │   │   │   ├── attribute_matcher_value.rs\n    │   │   │   │   │   ├── composes_import_source.rs\n    │   │   │   │   │   ├── compound_selector.rs\n    │   │   │   │   │   ├── conditional_block.rs\n    │   │   │   │   │   ├── container_and_combinable_query.rs\n    │   │   │   │   │   ├── container_or_combinable_query.rs\n    │   │   │   │   │   ├── container_query.rs\n    │   │   │   │   │   ├── container_query_in_parens.rs\n    │   │   │   │   │   ├── container_style_and_combinable_query.rs\n    │   │   │   │   │   ├── container_style_in_parens.rs\n    │   │   │   │   │   ├── container_style_or_combinable_query.rs\n    │   │   │   │   │   ├── container_style_query.rs\n    │   │   │   │   │   ├── custom_identifier.rs\n    │   │   │   │   │   ├── declaration.rs\n    │   │   │   │   │   ├── declaration_block.rs\n    │   │   │   │   │   ├── declaration_name.rs\n    │   │   │   │   │   ├── declaration_or_at_rule.rs\n    │   │   │   │   │   ├── declaration_or_at_rule_block.rs\n    │   │   │   │   │   ├── declaration_or_rule.rs\n    │   │   │   │   │   ├── declaration_or_rule_block.rs\n    │   │   │   │   │   ├── dimension.rs\n    │   │   │   │   │   ├── document_matcher.rs\n    │   │   │   │   │   ├── expression.rs\n    │   │   │   │   │   ├── font_family_name.rs\n    │   │   │   │   │   ├── font_feature_values_block.rs\n    │   │   │   │   │   ├── font_feature_values_item.rs\n    │   │   │   │   │   ├── function.rs\n    │   │   │   │   │   ├── generic_component_value.rs\n    │   │   │   │   │   ├── import_layer.rs\n    │   │   │   │   │   ├── import_supports_condition.rs\n    │   │   │   │   │   ├── import_url.rs\n    │   │   │   │   │   ├── keyframes_block.rs\n    │   │   │   │   │   ├── keyframes_identifier.rs\n    │   │   │   │   │   ├── keyframes_item.rs\n    │   │   │   │   │   ├── keyframes_name.rs\n    │   │   │   │   │   ├── keyframes_scope.rs\n    │   │   │   │   │   ├── keyframes_selector.rs\n    │   │   │   │   │   ├── layer.rs\n    │   │   │   │   │   ├── media_and_combinable_condition.rs\n    │   │   │   │   │   ├── media_condition.rs\n    │   │   │   │   │   ├── media_in_parens.rs\n    │   │   │   │   │   ├── media_or_combinable_condition.rs\n    │   │   │   │   │   ├── media_query.rs\n    │   │   │   │   │   ├── media_type_condition.rs\n    │   │   │   │   │   ├── media_type_query.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── namespace_prefix.rs\n    │   │   │   │   │   ├── namespace_url.rs\n    │   │   │   │   │   ├── page_at_rule_block.rs\n    │   │   │   │   │   ├── page_at_rule_item.rs\n    │   │   │   │   │   ├── page_selector.rs\n    │   │   │   │   │   ├── page_selector_pseudo.rs\n    │   │   │   │   │   ├── property.rs\n    │   │   │   │   │   ├── pseudo_class.rs\n    │   │   │   │   │   ├── pseudo_class_nth.rs\n    │   │   │   │   │   ├── pseudo_class_nth_selector.rs\n    │   │   │   │   │   ├── pseudo_element.rs\n    │   │   │   │   │   ├── pseudo_value.rs\n    │   │   │   │   │   ├── query_feature.rs\n    │   │   │   │   │   ├── query_feature_value.rs\n    │   │   │   │   │   ├── relative_selector.rs\n    │   │   │   │   │   ├── rule.rs\n    │   │   │   │   │   ├── rule_block.rs\n    │   │   │   │   │   ├── scope_range.rs\n    │   │   │   │   │   ├── selector.rs\n    │   │   │   │   │   ├── simple_selector.rs\n    │   │   │   │   │   ├── sub_selector.rs\n    │   │   │   │   │   ├── supports_and_combinable_condition.rs\n    │   │   │   │   │   ├── supports_condition.rs\n    │   │   │   │   │   ├── supports_in_parens.rs\n    │   │   │   │   │   ├── supports_or_combinable_condition.rs\n    │   │   │   │   │   ├── unicode_value.rs\n    │   │   │   │   │   ├── url_modifier.rs\n    │   │   │   │   │   ├── url_value.rs\n    │   │   │   │   │   ├── value.rs\n    │   │   │   │   │   ├── value_at_rule_clause.rs\n    │   │   │   │   │   ├── value_at_rule_import_source.rs\n    │   │   │   │   │   ├── value_at_rule_import_specifier.rs\n    │   │   │   │   │   └── value_at_rule_property.rs\n    │   │   │   │   ├── auxiliary/\n    │   │   │   │   │   ├── attribute_matcher.rs\n    │   │   │   │   │   ├── attribute_matcher_value.rs\n    │   │   │   │   │   ├── attribute_name.rs\n    │   │   │   │   │   ├── binary_expression.rs\n    │   │   │   │   │   ├── bracketed_value.rs\n    │   │   │   │   │   ├── composes_import_specifier.rs\n    │   │   │   │   │   ├── composes_property_value.rs\n    │   │   │   │   │   ├── container_and_query.rs\n    │   │   │   │   │   ├── container_not_query.rs\n    │   │   │   │   │   ├── container_or_query.rs\n    │   │   │   │   │   ├── container_query_in_parens.rs\n    │   │   │   │   │   ├── container_size_feature_in_parens.rs\n    │   │   │   │   │   ├── container_style_and_query.rs\n    │   │   │   │   │   ├── container_style_in_parens.rs\n    │   │   │   │   │   ├── container_style_not_query.rs\n    │   │   │   │   │   ├── container_style_or_query.rs\n    │   │   │   │   │   ├── container_style_query_in_parens.rs\n    │   │   │   │   │   ├── declaration.rs\n    │   │   │   │   │   ├── declaration_block.rs\n    │   │   │   │   │   ├── declaration_important.rs\n    │   │   │   │   │   ├── declaration_or_at_rule_block.rs\n    │   │   │   │   │   ├── declaration_or_rule_block.rs\n    │   │   │   │   │   ├── declaration_with_semicolon.rs\n    │   │   │   │   │   ├── document_custom_matcher.rs\n    │   │   │   │   │   ├── empty_declaration.rs\n    │   │   │   │   │   ├── font_family_name.rs\n    │   │   │   │   │   ├── font_feature_values_block.rs\n    │   │   │   │   │   ├── font_feature_values_item.rs\n    │   │   │   │   │   ├── function.rs\n    │   │   │   │   │   ├── generic_delimiter.rs\n    │   │   │   │   │   ├── import_anonymous_layer.rs\n    │   │   │   │   │   ├── import_named_layer.rs\n    │   │   │   │   │   ├── import_supports.rs\n    │   │   │   │   │   ├── keyframes_block.rs\n    │   │   │   │   │   ├── keyframes_item.rs\n    │   │   │   │   │   ├── keyframes_scope_function.rs\n    │   │   │   │   │   ├── keyframes_scope_prefix.rs\n    │   │   │   │   │   ├── keyframes_scoped_name.rs\n    │   │   │   │   │   ├── layer_declaration.rs\n    │   │   │   │   │   ├── layer_reference.rs\n    │   │   │   │   │   ├── list_of_component_values_expression.rs\n    │   │   │   │   │   ├── media_and_condition.rs\n    │   │   │   │   │   ├── media_and_type_query.rs\n    │   │   │   │   │   ├── media_condition_in_parens.rs\n    │   │   │   │   │   ├── media_condition_query.rs\n    │   │   │   │   │   ├── media_feature_in_parens.rs\n    │   │   │   │   │   ├── media_not_condition.rs\n    │   │   │   │   │   ├── media_or_condition.rs\n    │   │   │   │   │   ├── media_type.rs\n    │   │   │   │   │   ├── media_type_query.rs\n    │   │   │   │   │   ├── metavariable.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── named_namespace_prefix.rs\n    │   │   │   │   │   ├── namespace.rs\n    │   │   │   │   │   ├── nested_qualified_rule.rs\n    │   │   │   │   │   ├── nth_offset.rs\n    │   │   │   │   │   ├── page_at_rule_block.rs\n    │   │   │   │   │   ├── parameter.rs\n    │   │   │   │   │   ├── parenthesized_expression.rs\n    │   │   │   │   │   ├── qualified_rule.rs\n    │   │   │   │   │   ├── query_feature_boolean.rs\n    │   │   │   │   │   ├── query_feature_plain.rs\n    │   │   │   │   │   ├── query_feature_range.rs\n    │   │   │   │   │   ├── query_feature_range_comparison.rs\n    │   │   │   │   │   ├── query_feature_range_interval.rs\n    │   │   │   │   │   ├── query_feature_reverse_range.rs\n    │   │   │   │   │   ├── root.rs\n    │   │   │   │   │   ├── rule_block.rs\n    │   │   │   │   │   ├── scope_edge.rs\n    │   │   │   │   │   ├── scope_range_end.rs\n    │   │   │   │   │   ├── scope_range_interval.rs\n    │   │   │   │   │   ├── scope_range_start.rs\n    │   │   │   │   │   ├── supports_and_condition.rs\n    │   │   │   │   │   ├── supports_condition_in_parens.rs\n    │   │   │   │   │   ├── supports_feature_declaration.rs\n    │   │   │   │   │   ├── supports_not_condition.rs\n    │   │   │   │   │   ├── supports_or_condition.rs\n    │   │   │   │   │   ├── unicode_codepoint.rs\n    │   │   │   │   │   ├── unicode_range.rs\n    │   │   │   │   │   ├── unicode_range_interval.rs\n    │   │   │   │   │   ├── unicode_range_wildcard.rs\n    │   │   │   │   │   ├── universal_namespace_prefix.rs\n    │   │   │   │   │   ├── url_function.rs\n    │   │   │   │   │   ├── value_at_rule_declaration_clause.rs\n    │   │   │   │   │   ├── value_at_rule_import_clause.rs\n    │   │   │   │   │   ├── value_at_rule_import_specifier.rs\n    │   │   │   │   │   └── value_at_rule_named_import_specifier.rs\n    │   │   │   │   ├── bogus/\n    │   │   │   │   │   ├── bogus.rs\n    │   │   │   │   │   ├── bogus_at_rule.rs\n    │   │   │   │   │   ├── bogus_block.rs\n    │   │   │   │   │   ├── bogus_custom_identifier.rs\n    │   │   │   │   │   ├── bogus_declaration_item.rs\n    │   │   │   │   │   ├── bogus_document_matcher.rs\n    │   │   │   │   │   ├── bogus_font_family_name.rs\n    │   │   │   │   │   ├── bogus_font_feature_values_item.rs\n    │   │   │   │   │   ├── bogus_keyframes_item.rs\n    │   │   │   │   │   ├── bogus_keyframes_name.rs\n    │   │   │   │   │   ├── bogus_layer.rs\n    │   │   │   │   │   ├── bogus_media_query.rs\n    │   │   │   │   │   ├── bogus_page_selector_pseudo.rs\n    │   │   │   │   │   ├── bogus_parameter.rs\n    │   │   │   │   │   ├── bogus_property.rs\n    │   │   │   │   │   ├── bogus_property_value.rs\n    │   │   │   │   │   ├── bogus_pseudo_class.rs\n    │   │   │   │   │   ├── bogus_pseudo_element.rs\n    │   │   │   │   │   ├── bogus_rule.rs\n    │   │   │   │   │   ├── bogus_scope_range.rs\n    │   │   │   │   │   ├── bogus_selector.rs\n    │   │   │   │   │   ├── bogus_sub_selector.rs\n    │   │   │   │   │   ├── bogus_supports_condition.rs\n    │   │   │   │   │   ├── bogus_unicode_range_value.rs\n    │   │   │   │   │   ├── bogus_url_modifier.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── unknown_at_rule_component_list.rs\n    │   │   │   │   │   └── value_at_rule_generic_value.rs\n    │   │   │   │   ├── lists/\n    │   │   │   │   │   ├── bracketed_value_list.rs\n    │   │   │   │   │   ├── component_value_list.rs\n    │   │   │   │   │   ├── composes_class_list.rs\n    │   │   │   │   │   ├── compound_selector_list.rs\n    │   │   │   │   │   ├── custom_identifier_list.rs\n    │   │   │   │   │   ├── declaration_list.rs\n    │   │   │   │   │   ├── declaration_or_at_rule_list.rs\n    │   │   │   │   │   ├── declaration_or_rule_list.rs\n    │   │   │   │   │   ├── document_matcher_list.rs\n    │   │   │   │   │   ├── font_family_name_list.rs\n    │   │   │   │   │   ├── font_feature_values_item_list.rs\n    │   │   │   │   │   ├── generic_component_value_list.rs\n    │   │   │   │   │   ├── keyframes_item_list.rs\n    │   │   │   │   │   ├── keyframes_selector_list.rs\n    │   │   │   │   │   ├── layer_name_list.rs\n    │   │   │   │   │   ├── layer_reference_list.rs\n    │   │   │   │   │   ├── media_query_list.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── nested_selector_list.rs\n    │   │   │   │   │   ├── page_at_rule_item_list.rs\n    │   │   │   │   │   ├── page_selector_list.rs\n    │   │   │   │   │   ├── page_selector_pseudo_list.rs\n    │   │   │   │   │   ├── parameter_list.rs\n    │   │   │   │   │   ├── pseudo_element_function_parameter_list.rs\n    │   │   │   │   │   ├── pseudo_value_list.rs\n    │   │   │   │   │   ├── relative_selector_list.rs\n    │   │   │   │   │   ├── rule_list.rs\n    │   │   │   │   │   ├── selector_list.rs\n    │   │   │   │   │   ├── sub_selector_list.rs\n    │   │   │   │   │   ├── url_modifier_list.rs\n    │   │   │   │   │   ├── value_at_rule_import_specifier_list.rs\n    │   │   │   │   │   └── value_at_rule_property_list.rs\n    │   │   │   │   ├── properties/\n    │   │   │   │   │   ├── composes_property.rs\n    │   │   │   │   │   ├── generic_property.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   └── value_at_rule_generic_property.rs\n    │   │   │   │   ├── pseudo/\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── page_selector_pseudo.rs\n    │   │   │   │   │   ├── pseudo_class_function_compound_selector_list.rs\n    │   │   │   │   │   ├── pseudo_class_function_custom_identifier_list.rs\n    │   │   │   │   │   ├── pseudo_class_function_identifier.rs\n    │   │   │   │   │   ├── pseudo_class_function_nth.rs\n    │   │   │   │   │   ├── pseudo_class_function_relative_selector_list.rs\n    │   │   │   │   │   ├── pseudo_class_function_selector_list.rs\n    │   │   │   │   │   ├── pseudo_class_function_value_list.rs\n    │   │   │   │   │   ├── pseudo_class_identifier.rs\n    │   │   │   │   │   ├── pseudo_class_nth.rs\n    │   │   │   │   │   ├── pseudo_class_nth_identifier.rs\n    │   │   │   │   │   ├── pseudo_class_nth_number.rs\n    │   │   │   │   │   ├── pseudo_element_function.rs\n    │   │   │   │   │   ├── pseudo_element_function_custom_identifier.rs\n    │   │   │   │   │   └── pseudo_element_identifier.rs\n    │   │   │   │   ├── selectors/\n    │   │   │   │   │   ├── attribute_selector.rs\n    │   │   │   │   │   ├── class_selector.rs\n    │   │   │   │   │   ├── complex_selector.rs\n    │   │   │   │   │   ├── compound_selector.rs\n    │   │   │   │   │   ├── id_selector.rs\n    │   │   │   │   │   ├── keyframes_ident_selector.rs\n    │   │   │   │   │   ├── keyframes_percentage_selector.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── nested_selector.rs\n    │   │   │   │   │   ├── page_selector.rs\n    │   │   │   │   │   ├── pseudo_class_function_compound_selector.rs\n    │   │   │   │   │   ├── pseudo_class_function_selector.rs\n    │   │   │   │   │   ├── pseudo_class_nth_selector.rs\n    │   │   │   │   │   ├── pseudo_class_of_nth_selector.rs\n    │   │   │   │   │   ├── pseudo_class_selector.rs\n    │   │   │   │   │   ├── pseudo_element_function_selector.rs\n    │   │   │   │   │   ├── pseudo_element_selector.rs\n    │   │   │   │   │   ├── relative_selector.rs\n    │   │   │   │   │   ├── supports_feature_selector.rs\n    │   │   │   │   │   ├── type_selector.rs\n    │   │   │   │   │   └── universal_selector.rs\n    │   │   │   │   ├── statements/\n    │   │   │   │   │   ├── at_rule.rs\n    │   │   │   │   │   ├── charset_at_rule.rs\n    │   │   │   │   │   ├── color_profile_at_rule.rs\n    │   │   │   │   │   ├── container_at_rule.rs\n    │   │   │   │   │   ├── counter_style_at_rule.rs\n    │   │   │   │   │   ├── document_at_rule.rs\n    │   │   │   │   │   ├── font_face_at_rule.rs\n    │   │   │   │   │   ├── font_feature_values_at_rule.rs\n    │   │   │   │   │   ├── font_palette_values_at_rule.rs\n    │   │   │   │   │   ├── import_at_rule.rs\n    │   │   │   │   │   ├── keyframes_at_rule.rs\n    │   │   │   │   │   ├── layer_at_rule.rs\n    │   │   │   │   │   ├── margin_at_rule.rs\n    │   │   │   │   │   ├── media_at_rule.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── namespace_at_rule.rs\n    │   │   │   │   │   ├── page_at_rule.rs\n    │   │   │   │   │   ├── position_try_at_rule.rs\n    │   │   │   │   │   ├── property_at_rule.rs\n    │   │   │   │   │   ├── scope_at_rule.rs\n    │   │   │   │   │   ├── starting_style_at_rule.rs\n    │   │   │   │   │   ├── supports_at_rule.rs\n    │   │   │   │   │   ├── unknown_block_at_rule.rs\n    │   │   │   │   │   ├── unknown_value_at_rule.rs\n    │   │   │   │   │   ├── value_at_rule.rs\n    │   │   │   │   │   └── view_transition_at_rule.rs\n    │   │   │   │   └── value/\n    │   │   │   │       ├── color.rs\n    │   │   │   │       ├── custom_identifier.rs\n    │   │   │   │       ├── dashed_identifier.rs\n    │   │   │   │       ├── identifier.rs\n    │   │   │   │       ├── mod.rs\n    │   │   │   │       ├── number.rs\n    │   │   │   │       ├── percentage.rs\n    │   │   │   │       ├── ratio.rs\n    │   │   │   │       ├── regular_dimension.rs\n    │   │   │   │       ├── string.rs\n    │   │   │   │       ├── unknown_dimension.rs\n    │   │   │   │       └── url_value_raw.rs\n    │   │   │   └── utils/\n    │   │   │       ├── block_like.rs\n    │   │   │       ├── component_value_list.rs\n    │   │   │       ├── mod.rs\n    │   │   │       └── string_utils.rs\n    │   │   └── tests/\n    │   │       ├── language.rs\n    │   │       ├── prettier_tests.rs\n    │   │       ├── quick_test.rs\n    │   │       ├── spec_test.rs\n    │   │       ├── spec_tests.rs\n    │   │       └── specs/\n    │   │           ├── css/\n    │   │           │   ├── block.css\n    │   │           │   ├── block.css.snap\n    │   │           │   ├── casing.css\n    │   │           │   ├── casing.css.snap\n    │   │           │   ├── comma_separated_values.css\n    │   │           │   ├── comma_separated_values.css.snap\n    │   │           │   ├── composes.css\n    │   │           │   ├── composes.css.snap\n    │   │           │   ├── declaration_empty.css\n    │   │           │   ├── declaration_empty.css.snap\n    │   │           │   ├── declaration_list.css\n    │   │           │   ├── declaration_list.css.snap\n    │   │           │   ├── dimensions.css\n    │   │           │   ├── dimensions.css.snap\n    │   │           │   ├── empty.css\n    │   │           │   ├── empty.css.snap\n    │   │           │   ├── functions.css\n    │   │           │   ├── functions.css.snap\n    │   │           │   ├── important.css\n    │   │           │   ├── important.css.snap\n    │   │           │   ├── issue_3229.css\n    │   │           │   ├── issue_3229.css.snap\n    │   │           │   ├── namespace.css\n    │   │           │   ├── namespace.css.snap\n    │   │           │   ├── number.css\n    │   │           │   ├── number.css.snap\n    │   │           │   ├── simple.css\n    │   │           │   ├── simple.css.snap\n    │   │           │   ├── units.css\n    │   │           │   ├── units.css.snap\n    │   │           │   ├── url.css\n    │   │           │   ├── url.css.snap\n    │   │           │   ├── value_fill.css\n    │   │           │   ├── value_fill.css.snap\n    │   │           │   ├── value_one_group_per_line.css\n    │   │           │   ├── value_one_group_per_line.css.snap\n    │   │           │   ├── value_one_per_line.css\n    │   │           │   ├── value_one_per_line.css.snap\n    │   │           │   ├── variables.css\n    │   │           │   ├── variables.css.snap\n    │   │           │   ├── atrule/\n    │   │           │   │   ├── charset.css\n    │   │           │   │   ├── charset.css.snap\n    │   │           │   │   ├── color_profile.css\n    │   │           │   │   ├── color_profile.css.snap\n    │   │           │   │   ├── container.css\n    │   │           │   │   ├── container.css.snap\n    │   │           │   │   ├── counter_style.css\n    │   │           │   │   ├── counter_style.css.snap\n    │   │           │   │   ├── document.css\n    │   │           │   │   ├── document.css.snap\n    │   │           │   │   ├── font_face.css\n    │   │           │   │   ├── font_face.css.snap\n    │   │           │   │   ├── font_feature_values.css\n    │   │           │   │   ├── font_feature_values.css.snap\n    │   │           │   │   ├── import.css\n    │   │           │   │   ├── import.css.snap\n    │   │           │   │   ├── keyframes.css\n    │   │           │   │   ├── keyframes.css.snap\n    │   │           │   │   ├── layer.css\n    │   │           │   │   ├── layer.css.snap\n    │   │           │   │   ├── media.css\n    │   │           │   │   ├── media.css.snap\n    │   │           │   │   ├── namespace.css\n    │   │           │   │   ├── namespace.css.snap\n    │   │           │   │   ├── page.css\n    │   │           │   │   ├── page.css.snap\n    │   │           │   │   ├── page_complex.css\n    │   │           │   │   ├── page_complex.css.snap\n    │   │           │   │   ├── property.css\n    │   │           │   │   ├── property.css.snap\n    │   │           │   │   ├── scope.css\n    │   │           │   │   ├── scope.css.snap\n    │   │           │   │   ├── starting_style.css\n    │   │           │   │   ├── starting_style.css.snap\n    │   │           │   │   ├── supports.css\n    │   │           │   │   ├── supports.css.snap\n    │   │           │   │   ├── supports_complex.css\n    │   │           │   │   ├── supports_complex.css.snap\n    │   │           │   │   ├── unknown.css\n    │   │           │   │   ├── unknown.css.snap\n    │   │           │   │   ├── value.css\n    │   │           │   │   └── value.css.snap\n    │   │           │   ├── color/\n    │   │           │   │   ├── functional_colors.css\n    │   │           │   │   ├── functional_colors.css.snap\n    │   │           │   │   ├── hex_colors.css\n    │   │           │   │   └── hex_colors.css.snap\n    │   │           │   ├── nesting/\n    │   │           │   │   ├── conditional_at_rule.css\n    │   │           │   │   ├── conditional_at_rule.css.snap\n    │   │           │   │   ├── nesting.css\n    │   │           │   │   ├── nesting.css.snap\n    │   │           │   │   ├── nesting_1.css\n    │   │           │   │   └── nesting_1.css.snap\n    │   │           │   ├── properties/\n    │   │           │   │   ├── all.css\n    │   │           │   │   ├── all.css.snap\n    │   │           │   │   ├── border.css\n    │   │           │   │   ├── border.css.snap\n    │   │           │   │   ├── custom.css\n    │   │           │   │   ├── custom.css.snap\n    │   │           │   │   ├── generic.css\n    │   │           │   │   ├── generic.css.snap\n    │   │           │   │   ├── grid.css\n    │   │           │   │   ├── grid.css.snap\n    │   │           │   │   ├── unicode_range.css\n    │   │           │   │   ├── unicode_range.css.snap\n    │   │           │   │   ├── z-index.css\n    │   │           │   │   └── z-index.css.snap\n    │   │           │   ├── pseudo/\n    │   │           │   │   ├── is.css\n    │   │           │   │   ├── is.css.snap\n    │   │           │   │   ├── not.css\n    │   │           │   │   ├── not.css.snap\n    │   │           │   │   ├── pseudo_class_function_compound_selector.css\n    │   │           │   │   ├── pseudo_class_function_compound_selector.css.snap\n    │   │           │   │   ├── pseudo_class_function_compound_selector_list.css\n    │   │           │   │   ├── pseudo_class_function_compound_selector_list.css.snap\n    │   │           │   │   ├── pseudo_class_function_custom_identifier_list.css\n    │   │           │   │   ├── pseudo_class_function_custom_identifier_list.css.snap\n    │   │           │   │   ├── pseudo_class_function_nth.css\n    │   │           │   │   ├── pseudo_class_function_nth.css.snap\n    │   │           │   │   ├── pseudo_class_function_relative_selector_list.css\n    │   │           │   │   ├── pseudo_class_function_relative_selector_list.css.snap\n    │   │           │   │   ├── pseudo_class_function_selector.css\n    │   │           │   │   ├── pseudo_class_function_selector.css.snap\n    │   │           │   │   ├── pseudo_class_function_value_list.css\n    │   │           │   │   ├── pseudo_class_function_value_list.css.snap\n    │   │           │   │   ├── pseudo_class_identifier.css\n    │   │           │   │   ├── pseudo_class_identifier.css.snap\n    │   │           │   │   ├── pseudo_element_selector.css\n    │   │           │   │   ├── pseudo_element_selector.css.snap\n    │   │           │   │   ├── where.css\n    │   │           │   │   └── where.css.snap\n    │   │           │   ├── quote_style/\n    │   │           │   │   ├── normalize_quotes.css\n    │   │           │   │   ├── normalize_quotes.css.snap\n    │   │           │   │   └── options.json\n    │   │           │   ├── range/\n    │   │           │   │   ├── between_rules.css\n    │   │           │   │   ├── between_rules.css.snap\n    │   │           │   │   ├── keyframes.css\n    │   │           │   │   ├── keyframes.css.snap\n    │   │           │   │   ├── mid_value.css\n    │   │           │   │   ├── mid_value.css.snap\n    │   │           │   │   ├── selector_list.css\n    │   │           │   │   ├── selector_list.css.snap\n    │   │           │   │   ├── single_declaration.css\n    │   │           │   │   ├── single_declaration.css.snap\n    │   │           │   │   ├── single_rule.css\n    │   │           │   │   ├── single_rule.css.snap\n    │   │           │   │   ├── single_value.css\n    │   │           │   │   └── single_value.css.snap\n    │   │           │   └── selectors/\n    │   │           │       ├── attribute_selector.css\n    │   │           │       ├── attribute_selector.css.snap\n    │   │           │       ├── class_selector.css\n    │   │           │       ├── class_selector.css.snap\n    │   │           │       ├── complex_selector.css\n    │   │           │       ├── complex_selector.css.snap\n    │   │           │       ├── id_selector.css\n    │   │           │       ├── id_selector.css.snap\n    │   │           │       ├── selector_lists.css\n    │   │           │       ├── selector_lists.css.snap\n    │   │           │       ├── type_selector.css\n    │   │           │       ├── type_selector.css.snap\n    │   │           │       └── pseudo_class/\n    │   │           │           ├── pseudo_class_has.css\n    │   │           │           └── pseudo_class_has.css.snap\n    │   │           └── prettier/\n    │   │               ├── README.md\n    │   │               ├── prepare_tests.js\n    │   │               └── css/\n    │   │                   ├── atrule/\n    │   │                   │   ├── at-root.css\n    │   │                   │   ├── at-root.css.prettier-snap\n    │   │                   │   ├── at-root.css.snap\n    │   │                   │   ├── charset.css\n    │   │                   │   ├── charset.css.prettier-snap\n    │   │                   │   ├── counter-style.css\n    │   │                   │   ├── counter-style.css.prettier-snap\n    │   │                   │   ├── custom-media.css\n    │   │                   │   ├── custom-media.css.prettier-snap\n    │   │                   │   ├── custom-media.css.snap\n    │   │                   │   ├── custom-selector.css\n    │   │                   │   ├── custom-selector.css.prettier-snap\n    │   │                   │   ├── custom-selector.css.snap\n    │   │                   │   ├── debug.css\n    │   │                   │   ├── debug.css.prettier-snap\n    │   │                   │   ├── debug.css.snap\n    │   │                   │   ├── each.css\n    │   │                   │   ├── each.css.prettier-snap\n    │   │                   │   ├── each.css.snap\n    │   │                   │   ├── extend.css\n    │   │                   │   ├── extend.css.prettier-snap\n    │   │                   │   ├── extend.css.snap\n    │   │                   │   ├── font-face.css\n    │   │                   │   ├── font-face.css.prettier-snap\n    │   │                   │   ├── font-feature-values.css\n    │   │                   │   ├── font-feature-values.css.prettier-snap\n    │   │                   │   ├── for.css\n    │   │                   │   ├── for.css.prettier-snap\n    │   │                   │   ├── for.css.snap\n    │   │                   │   ├── function.css\n    │   │                   │   ├── function.css.prettier-snap\n    │   │                   │   ├── function.css.snap\n    │   │                   │   ├── if-else.css\n    │   │                   │   ├── if-else.css.prettier-snap\n    │   │                   │   ├── if-else.css.snap\n    │   │                   │   ├── import.css\n    │   │                   │   ├── import.css.prettier-snap\n    │   │                   │   ├── import.css.snap\n    │   │                   │   ├── include.css\n    │   │                   │   ├── include.css.prettier-snap\n    │   │                   │   ├── include.css.snap\n    │   │                   │   ├── keyframes.css\n    │   │                   │   ├── keyframes.css.prettier-snap\n    │   │                   │   ├── media.css\n    │   │                   │   ├── media.css.prettier-snap\n    │   │                   │   ├── media.css.snap\n    │   │                   │   ├── mixin.css\n    │   │                   │   ├── mixin.css.prettier-snap\n    │   │                   │   ├── mixin.css.snap\n    │   │                   │   ├── namespaces.css\n    │   │                   │   ├── namespaces.css.prettier-snap\n    │   │                   │   ├── page.css\n    │   │                   │   ├── page.css.prettier-snap\n    │   │                   │   ├── return.css\n    │   │                   │   ├── return.css.prettier-snap\n    │   │                   │   ├── return.css.snap\n    │   │                   │   ├── supports.css\n    │   │                   │   ├── supports.css.prettier-snap\n    │   │                   │   ├── supports.css.snap\n    │   │                   │   ├── viewport.css\n    │   │                   │   ├── viewport.css.prettier-snap\n    │   │                   │   ├── while.css\n    │   │                   │   ├── while.css.prettier-snap\n    │   │                   │   └── while.css.snap\n    │   │                   ├── attribute/\n    │   │                   │   ├── custom-selector.css\n    │   │                   │   ├── custom-selector.css.prettier-snap\n    │   │                   │   ├── custom-selector.css.snap\n    │   │                   │   ├── insensitive.css\n    │   │                   │   ├── insensitive.css.prettier-snap\n    │   │                   │   ├── namespaces.css\n    │   │                   │   ├── namespaces.css.prettier-snap\n    │   │                   │   ├── quotes.css\n    │   │                   │   ├── quotes.css.prettier-snap\n    │   │                   │   ├── quotes.css.snap\n    │   │                   │   ├── spaces.css\n    │   │                   │   └── spaces.css.prettier-snap\n    │   │                   ├── atword/\n    │   │                   │   ├── atword.css\n    │   │                   │   ├── atword.css.prettier-snap\n    │   │                   │   └── atword.css.snap\n    │   │                   ├── bom/\n    │   │                   │   ├── bom.css\n    │   │                   │   ├── bom.css.prettier-snap\n    │   │                   │   └── bom.css.snap\n    │   │                   ├── case/\n    │   │                   │   ├── case.css\n    │   │                   │   ├── case.css.prettier-snap\n    │   │                   │   ├── case.css.snap\n    │   │                   │   ├── custom-selectors.css\n    │   │                   │   └── custom-selectors.css.prettier-snap\n    │   │                   ├── character-escaping/\n    │   │                   │   ├── character_escaping.css\n    │   │                   │   ├── character_escaping.css.prettier-snap\n    │   │                   │   └── character_escaping.css.snap\n    │   │                   ├── colon/\n    │   │                   │   ├── colon.css\n    │   │                   │   └── colon.css.prettier-snap\n    │   │                   ├── color/\n    │   │                   │   ├── color-adjuster.css\n    │   │                   │   ├── color-adjuster.css.prettier-snap\n    │   │                   │   ├── color-adjuster.css.snap\n    │   │                   │   ├── color-level-4.css\n    │   │                   │   ├── color-level-4.css.prettier-snap\n    │   │                   │   ├── current-color.css\n    │   │                   │   ├── current-color.css.prettier-snap\n    │   │                   │   ├── functional-syntax.css\n    │   │                   │   ├── functional-syntax.css.prettier-snap\n    │   │                   │   ├── hexcolor.css\n    │   │                   │   ├── hexcolor.css.prettier-snap\n    │   │                   │   ├── whitespace-syntax.css\n    │   │                   │   └── whitespace-syntax.css.prettier-snap\n    │   │                   ├── combinator/\n    │   │                   │   ├── combinator.css\n    │   │                   │   ├── combinator.css.prettier-snap\n    │   │                   │   ├── leading.css\n    │   │                   │   └── leading.css.prettier-snap\n    │   │                   ├── comments/\n    │   │                   │   ├── at-rules.css\n    │   │                   │   ├── at-rules.css.prettier-snap\n    │   │                   │   ├── at-rules.css.snap\n    │   │                   │   ├── block.css\n    │   │                   │   ├── block.css.prettier-snap\n    │   │                   │   ├── bug.css\n    │   │                   │   ├── bug.css.prettier-snap\n    │   │                   │   ├── CRLF.css\n    │   │                   │   ├── CRLF.css.prettier-snap\n    │   │                   │   ├── custom-properties.css\n    │   │                   │   ├── custom-properties.css.prettier-snap\n    │   │                   │   ├── custom-properties.css.snap\n    │   │                   │   ├── declaration.css\n    │   │                   │   ├── declaration.css.prettier-snap\n    │   │                   │   ├── declaration.css.snap\n    │   │                   │   ├── prettier-ignore.css\n    │   │                   │   ├── prettier-ignore.css.prettier-snap\n    │   │                   │   ├── selectors.css\n    │   │                   │   ├── selectors.css.prettier-snap\n    │   │                   │   ├── selectors.css.snap\n    │   │                   │   ├── source-map.css\n    │   │                   │   ├── source-map.css.prettier-snap\n    │   │                   │   ├── types.css\n    │   │                   │   └── types.css.prettier-snap\n    │   │                   ├── composes/\n    │   │                   │   ├── composes.css\n    │   │                   │   └── composes.css.prettier-snap\n    │   │                   ├── empty/\n    │   │                   │   ├── empty.css\n    │   │                   │   └── empty.css.prettier-snap\n    │   │                   ├── fill-value/\n    │   │                   │   ├── fill.css\n    │   │                   │   ├── fill.css.prettier-snap\n    │   │                   │   └── fill.css.snap\n    │   │                   ├── front-matter/\n    │   │                   │   ├── custom-parser.css\n    │   │                   │   ├── custom-parser.css.prettier-snap\n    │   │                   │   ├── custom-parser.css.snap\n    │   │                   │   ├── empty.css\n    │   │                   │   ├── empty.css.prettier-snap\n    │   │                   │   └── empty.css.snap\n    │   │                   ├── grid/\n    │   │                   │   ├── grid.css\n    │   │                   │   ├── grid.css.prettier-snap\n    │   │                   │   └── grid.css.snap\n    │   │                   ├── important/\n    │   │                   │   ├── important.css\n    │   │                   │   └── important.css.prettier-snap\n    │   │                   ├── indent/\n    │   │                   │   ├── indent.css\n    │   │                   │   ├── indent.css.prettier-snap\n    │   │                   │   ├── indent.css.snap\n    │   │                   │   ├── selectors.css\n    │   │                   │   └── selectors.css.prettier-snap\n    │   │                   ├── inline-url/\n    │   │                   │   ├── empty.css\n    │   │                   │   ├── empty.css.prettier-snap\n    │   │                   │   ├── inline_url.css\n    │   │                   │   ├── inline_url.css.prettier-snap\n    │   │                   │   └── inline_url.css.snap\n    │   │                   ├── long-rule/\n    │   │                   │   ├── long_rule.css\n    │   │                   │   └── long_rule.css.prettier-snap\n    │   │                   ├── loose/\n    │   │                   │   ├── loose.css\n    │   │                   │   ├── loose.css.prettier-snap\n    │   │                   │   └── loose.css.snap\n    │   │                   ├── modules/\n    │   │                   │   ├── modules.css\n    │   │                   │   └── modules.css.prettier-snap\n    │   │                   ├── numbers/\n    │   │                   │   ├── numbers.css\n    │   │                   │   ├── numbers.css.prettier-snap\n    │   │                   │   └── numbers.css.snap\n    │   │                   ├── params/\n    │   │                   │   ├── params.css\n    │   │                   │   └── params.css.prettier-snap\n    │   │                   ├── parens/\n    │   │                   │   ├── empty-lines.css\n    │   │                   │   ├── empty-lines.css.prettier-snap\n    │   │                   │   ├── empty-lines.css.snap\n    │   │                   │   ├── parens.css\n    │   │                   │   ├── parens.css.prettier-snap\n    │   │                   │   └── parens.css.snap\n    │   │                   ├── postcss-8-improment/\n    │   │                   │   ├── empty-props.css\n    │   │                   │   ├── empty-props.css.prettier-snap\n    │   │                   │   └── empty-props.css.snap\n    │   │                   ├── postcss-plugins/\n    │   │                   │   ├── postcss-mixins.css\n    │   │                   │   ├── postcss-mixins.css.prettier-snap\n    │   │                   │   ├── postcss-mixins.css.snap\n    │   │                   │   ├── postcss-nested-props.css\n    │   │                   │   ├── postcss-nested-props.css.prettier-snap\n    │   │                   │   ├── postcss-nested-props.css.snap\n    │   │                   │   ├── postcss-nested.css\n    │   │                   │   ├── postcss-nested.css.prettier-snap\n    │   │                   │   ├── postcss-nesting.css\n    │   │                   │   ├── postcss-nesting.css.prettier-snap\n    │   │                   │   ├── postcss-nesting.css.snap\n    │   │                   │   ├── postcss-simple-vars.css\n    │   │                   │   ├── postcss-simple-vars.css.prettier-snap\n    │   │                   │   └── postcss-simple-vars.css.snap\n    │   │                   ├── prefix/\n    │   │                   │   ├── prefix.css\n    │   │                   │   └── prefix.css.prettier-snap\n    │   │                   ├── pseudo-call/\n    │   │                   │   ├── is.css\n    │   │                   │   ├── is.css.prettier-snap\n    │   │                   │   ├── pseudo_call.css\n    │   │                   │   ├── pseudo_call.css.prettier-snap\n    │   │                   │   ├── where.css\n    │   │                   │   └── where.css.prettier-snap\n    │   │                   ├── quotes/\n    │   │                   │   ├── quotes.css\n    │   │                   │   ├── quotes.css.prettier-snap\n    │   │                   │   └── quotes.css.snap\n    │   │                   ├── range/\n    │   │                   │   ├── issue2267.css\n    │   │                   │   ├── issue2267.css.prettier-snap\n    │   │                   │   └── issue2267.css.snap\n    │   │                   ├── selector-call/\n    │   │                   │   ├── call.css\n    │   │                   │   ├── call.css.prettier-snap\n    │   │                   │   └── call.css.snap\n    │   │                   ├── selector-list/\n    │   │                   │   ├── selectors.css\n    │   │                   │   ├── selectors.css.prettier-snap\n    │   │                   │   └── selectors.css.snap\n    │   │                   ├── selector-string/\n    │   │                   │   ├── string.css\n    │   │                   │   └── string.css.prettier-snap\n    │   │                   ├── trailing-comma/\n    │   │                   │   ├── var-func.css\n    │   │                   │   ├── var-func.css.prettier-snap\n    │   │                   │   └── var-func.css.snap\n    │   │                   ├── units/\n    │   │                   │   ├── values.css\n    │   │                   │   ├── values.css.prettier-snap\n    │   │                   │   └── values.css.snap\n    │   │                   ├── url/\n    │   │                   │   ├── url.css\n    │   │                   │   ├── url.css.prettier-snap\n    │   │                   │   └── url.css.snap\n    │   │                   ├── variables/\n    │   │                   │   ├── apply-rule.css\n    │   │                   │   ├── apply-rule.css.prettier-snap\n    │   │                   │   ├── apply-rule.css.snap\n    │   │                   │   ├── variables.css\n    │   │                   │   └── variables.css.prettier-snap\n    │   │                   └── yaml/\n    │   │                       ├── comment_after.css\n    │   │                       ├── comment_after.css.prettier-snap\n    │   │                       ├── comment_after.css.snap\n    │   │                       ├── dirty.css\n    │   │                       ├── dirty.css.prettier-snap\n    │   │                       ├── dirty.css.snap\n    │   │                       ├── empty.css\n    │   │                       ├── empty.css.prettier-snap\n    │   │                       ├── empty.css.snap\n    │   │                       ├── empty_newlines.css\n    │   │                       ├── empty_newlines.css.prettier-snap\n    │   │                       ├── empty_newlines.css.snap\n    │   │                       ├── ignore.css\n    │   │                       ├── ignore.css.prettier-snap\n    │   │                       ├── malformed-2.css\n    │   │                       ├── malformed-2.css.prettier-snap\n    │   │                       ├── malformed-2.css.snap\n    │   │                       ├── malformed.css\n    │   │                       ├── malformed.css.prettier-snap\n    │   │                       ├── only_comments.css\n    │   │                       ├── only_comments.css.prettier-snap\n    │   │                       ├── only_comments.css.snap\n    │   │                       ├── with_comments.css\n    │   │                       ├── with_comments.css.prettier-snap\n    │   │                       ├── with_comments.css.snap\n    │   │                       ├── without-newline-after.css\n    │   │                       ├── without-newline-after.css.prettier-snap\n    │   │                       ├── without-newline-after.css.snap\n    │   │                       ├── yaml.css\n    │   │                       ├── yaml.css.prettier-snap\n    │   │                       └── yaml.css.snap\n    │   ├── biome_css_parser/\n    │   │   ├── README.md\n    │   │   ├── Cargo.toml\n    │   │   ├── LICENSE\n    │   │   ├── benches/\n    │   │   │   ├── css_parser.rs\n    │   │   │   └── libs-css.txt\n    │   │   ├── src/\n    │   │   │   ├── lib.rs\n    │   │   │   ├── parser.rs\n    │   │   │   ├── prelude.rs\n    │   │   │   ├── state.rs\n    │   │   │   ├── token_source.rs\n    │   │   │   ├── lexer/\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   └── tests.rs\n    │   │   │   └── syntax/\n    │   │   │       ├── css_modules.rs\n    │   │   │       ├── mod.rs\n    │   │   │       ├── parse_error.rs\n    │   │   │       ├── at_rule/\n    │   │   │       │   ├── charset.rs\n    │   │   │       │   ├── color_profile.rs\n    │   │   │       │   ├── counter_style.rs\n    │   │   │       │   ├── document.rs\n    │   │   │       │   ├── error.rs\n    │   │   │       │   ├── feature.rs\n    │   │   │       │   ├── font_face.rs\n    │   │   │       │   ├── font_feature_values.rs\n    │   │   │       │   ├── font_palette_values.rs\n    │   │   │       │   ├── import.rs\n    │   │   │       │   ├── keyframes.rs\n    │   │   │       │   ├── layer.rs\n    │   │   │       │   ├── media.rs\n    │   │   │       │   ├── mod.rs\n    │   │   │       │   ├── namespace.rs\n    │   │   │       │   ├── page.rs\n    │   │   │       │   ├── parse_error.rs\n    │   │   │       │   ├── position_try.rs\n    │   │   │       │   ├── property.rs\n    │   │   │       │   ├── scope.rs\n    │   │   │       │   ├── starting_style.rs\n    │   │   │       │   ├── unknown.rs\n    │   │   │       │   ├── value.rs\n    │   │   │       │   ├── view_transition.rs\n    │   │   │       │   ├── container/\n    │   │   │       │   │   ├── error.rs\n    │   │   │       │   │   └── mod.rs\n    │   │   │       │   └── supports/\n    │   │   │       │       ├── error.rs\n    │   │   │       │       └── mod.rs\n    │   │   │       ├── block/\n    │   │   │       │   ├── conditional_block.rs\n    │   │   │       │   ├── declaration_block.rs\n    │   │   │       │   ├── declaration_or_at_rule_list_block.rs\n    │   │   │       │   ├── declaration_or_rule_list_block.rs\n    │   │   │       │   ├── mod.rs\n    │   │   │       │   └── rule_block.rs\n    │   │   │       ├── property/\n    │   │   │       │   ├── color.rs\n    │   │   │       │   ├── mod.rs\n    │   │   │       │   └── unicode_range.rs\n    │   │   │       ├── selector/\n    │   │   │       │   ├── attribute.rs\n    │   │   │       │   ├── mod.rs\n    │   │   │       │   ├── nested_selector.rs\n    │   │   │       │   ├── pseudo_element.rs\n    │   │   │       │   ├── relative_selector.rs\n    │   │   │       │   └── pseudo_class/\n    │   │   │       │       ├── function_compound_selector.rs\n    │   │   │       │       ├── function_compound_selector_list.rs\n    │   │   │       │       ├── function_custom_identifier_list.rs\n    │   │   │       │       ├── function_identifier.rs\n    │   │   │       │       ├── function_nth.rs\n    │   │   │       │       ├── function_relative_selector_list.rs\n    │   │   │       │       ├── function_selector.rs\n    │   │   │       │       ├── function_selector_list.rs\n    │   │   │       │       ├── function_value_list.rs\n    │   │   │       │       ├── identifier.rs\n    │   │   │       │       └── mod.rs\n    │   │   │       └── value/\n    │   │   │           ├── dimension.rs\n    │   │   │           ├── function.rs\n    │   │   │           ├── mod.rs\n    │   │   │           ├── parse_error.rs\n    │   │   │           └── url.rs\n    │   │   └── tests/\n    │   │       ├── spec_test.rs\n    │   │       ├── spec_tests.rs\n    │   │       └── css_test_suite/\n    │   │           ├── error/\n    │   │           │   ├── at_rule/\n    │   │           │   │   ├── at_rule_charset_error.css\n    │   │           │   │   ├── at_rule_charset_error.css.snap\n    │   │           │   │   ├── at_rule_color_profile_error.css\n    │   │           │   │   ├── at_rule_color_profile_error.css.snap\n    │   │           │   │   ├── at_rule_counter_style_error.css\n    │   │           │   │   ├── at_rule_counter_style_error.css.snap\n    │   │           │   │   ├── at_rule_document_error.css\n    │   │           │   │   ├── at_rule_document_error.css.snap\n    │   │           │   │   ├── at_rule_font_face_error.css\n    │   │           │   │   ├── at_rule_font_face_error.css.snap\n    │   │           │   │   ├── at_rule_font_feature_values_error.css\n    │   │           │   │   ├── at_rule_font_feature_values_error.css.snap\n    │   │           │   │   ├── at_rule_font_palette_values_error.css\n    │   │           │   │   ├── at_rule_font_palette_values_error.css.snap\n    │   │           │   │   ├── at_rule_layer_error.css\n    │   │           │   │   ├── at_rule_layer_error.css.snap\n    │   │           │   │   ├── at_rule_media_error.css\n    │   │           │   │   ├── at_rule_media_error.css.snap\n    │   │           │   │   ├── at_rule_namespace_error.css\n    │   │           │   │   ├── at_rule_namespace_error.css.snap\n    │   │           │   │   ├── at_rule_property_error.css\n    │   │           │   │   ├── at_rule_property_error.css.snap\n    │   │           │   │   ├── at_rule_scope_error.css\n    │   │           │   │   ├── at_rule_scope_error.css.snap\n    │   │           │   │   ├── conditional_at_rule_error.css\n    │   │           │   │   ├── conditional_at_rule_error.css.snap\n    │   │           │   │   ├── at_rule_container/\n    │   │           │   │   │   ├── at_rule_container_and_query_error.css\n    │   │           │   │   │   ├── at_rule_container_and_query_error.css.snap\n    │   │           │   │   │   ├── at_rule_container_error.css\n    │   │           │   │   │   ├── at_rule_container_error.css.snap\n    │   │           │   │   │   ├── at_rule_container_or_query_error.css\n    │   │           │   │   │   ├── at_rule_container_or_query_error.css.snap\n    │   │           │   │   │   ├── at_rule_container_style_not_query.css\n    │   │           │   │   │   ├── at_rule_container_style_not_query.css.snap\n    │   │           │   │   │   ├── at_rule_container_style_query_error.css\n    │   │           │   │   │   └── at_rule_container_style_query_error.css.snap\n    │   │           │   │   ├── at_rule_import/\n    │   │           │   │   │   ├── at_rule_import_support_error.css\n    │   │           │   │   │   └── at_rule_import_support_error.css.snap\n    │   │           │   │   ├── at_rule_keyframes/\n    │   │           │   │   │   ├── at_rule_keyframes.css\n    │   │           │   │   │   ├── at_rule_keyframes.css.snap\n    │   │           │   │   │   ├── at_rule_keyframes_1.css\n    │   │           │   │   │   ├── at_rule_keyframes_1.css.snap\n    │   │           │   │   │   ├── disabled_css_module/\n    │   │           │   │   │   │   ├── at_rule_keyframe_disabled_css_modules.css\n    │   │           │   │   │   │   └── at_rule_keyframe_disabled_css_modules.css.snap\n    │   │           │   │   │   └── enabled_css_module/\n    │   │           │   │   │       ├── at_rule_keyframe_enabled_css_modules.css\n    │   │           │   │   │       ├── at_rule_keyframe_enabled_css_modules.css.snap\n    │   │           │   │   │       └── options.json\n    │   │           │   │   ├── at_rule_supports/\n    │   │           │   │   │   ├── at_rule_supports_and_condition_error.css\n    │   │           │   │   │   ├── at_rule_supports_and_condition_error.css.snap\n    │   │           │   │   │   ├── at_rule_supports_invalid_after_support_error.css\n    │   │           │   │   │   ├── at_rule_supports_invalid_after_support_error.css.snap\n    │   │           │   │   │   ├── at_rule_supports_not_condition_error.css\n    │   │           │   │   │   ├── at_rule_supports_not_condition_error.css.snap\n    │   │           │   │   │   ├── at_rule_supports_or_condition_error.css\n    │   │           │   │   │   └── at_rule_supports_or_condition_error.css.snap\n    │   │           │   │   └── value/\n    │   │           │   │       ├── at_rule_value_disabled.css\n    │   │           │   │       ├── at_rule_value_disabled.css.snap\n    │   │           │   │       └── enabled/\n    │   │           │   │           ├── at_rule_value_error_enabled.css\n    │   │           │   │           ├── at_rule_value_error_enabled.css.snap\n    │   │           │   │           └── options.json\n    │   │           │   ├── block/\n    │   │           │   │   ├── css_unfinished_block.css\n    │   │           │   │   └── css_unfinished_block.css.snap\n    │   │           │   ├── property/\n    │   │           │   │   ├── color_error.css\n    │   │           │   │   ├── color_error.css.snap\n    │   │           │   │   ├── property_generic_error.css\n    │   │           │   │   ├── property_generic_error.css.snap\n    │   │           │   │   ├── unicode_range_error.css\n    │   │           │   │   ├── unicode_range_error.css.snap\n    │   │           │   │   ├── composes/\n    │   │           │   │   │   └── disabled/\n    │   │           │   │   │       ├── composes_error_disabled.css\n    │   │           │   │   │       └── composes_error_disabled.css.snap\n    │   │           │   │   ├── composes.enabled/\n    │   │           │   │   │   ├── composes_error_enabled.css\n    │   │           │   │   │   ├── composes_error_enabled.css.snap\n    │   │           │   │   │   └── options.json\n    │   │           │   │   └── grid/\n    │   │           │   │       ├── grid_error.css\n    │   │           │   │       └── grid_error.css.snap\n    │   │           │   ├── relative_selector/\n    │   │           │   │   ├── relative_selector_error.css\n    │   │           │   │   └── relative_selector_error.css.snap\n    │   │           │   └── selector/\n    │   │           │       ├── attribute_selector.css\n    │   │           │       ├── attribute_selector.css.snap\n    │   │           │       ├── class_selector_err.css\n    │   │           │       ├── class_selector_err.css.snap\n    │   │           │       ├── id_selector_err.css\n    │   │           │       ├── id_selector_err.css.snap\n    │   │           │       ├── invalid_selector.css\n    │   │           │       ├── invalid_selector.css.snap\n    │   │           │       ├── missing_identifier.css\n    │   │           │       ├── missing_identifier.css.snap\n    │   │           │       ├── pseudo_element.css\n    │   │           │       ├── pseudo_element.css.snap\n    │   │           │       ├── pseudo_element_function_identifier.css\n    │   │           │       ├── pseudo_element_function_identifier.css.snap\n    │   │           │       ├── pseudo_element_function_selector.css\n    │   │           │       ├── pseudo_element_function_selector.css.snap\n    │   │           │       ├── selector.error.css\n    │   │           │       ├── selector.error.css.snap\n    │   │           │       ├── traling_comma.css\n    │   │           │       ├── traling_comma.css.snap\n    │   │           │       └── pseudo_class/\n    │   │           │           ├── pseudo_class_function_compound_selector.css\n    │   │           │           ├── pseudo_class_function_compound_selector.css.snap\n    │   │           │           ├── pseudo_class_function_compound_selector_list.css\n    │   │           │           ├── pseudo_class_function_compound_selector_list.css.snap\n    │   │           │           ├── pseudo_class_function_custom_identifier_list_error.css\n    │   │           │           ├── pseudo_class_function_custom_identifier_list_error.css.snap\n    │   │           │           ├── pseudo_class_function_identifier.css\n    │   │           │           ├── pseudo_class_function_identifier.css.snap\n    │   │           │           ├── pseudo_class_function_nth.css\n    │   │           │           ├── pseudo_class_function_nth.css.snap\n    │   │           │           ├── pseudo_class_function_relative_selector_list.css\n    │   │           │           ├── pseudo_class_function_relative_selector_list.css.snap\n    │   │           │           ├── pseudo_class_function_selector_list.css\n    │   │           │           ├── pseudo_class_function_selector_list.css.snap\n    │   │           │           ├── pseudo_class_function_value_list.css\n    │   │           │           ├── pseudo_class_function_value_list.css.snap\n    │   │           │           ├── pseudo_class_identifier.css\n    │   │           │           ├── pseudo_class_identifier.css.snap\n    │   │           │           └── pseudo_class_function_selector/\n    │   │           │               ├── disabled/\n    │   │           │               │   ├── pseudo_class_function_selector_disabled.css\n    │   │           │               │   └── pseudo_class_function_selector_disabled.css.snap\n    │   │           │               └── enabled/\n    │   │           │                   ├── options.json\n    │   │           │                   ├── pseudo_class_function_selector_enabled.css\n    │   │           │                   └── pseudo_class_function_selector_enabled.css.snap\n    │   │           └── ok/\n    │   │               ├── class_selector.css\n    │   │               ├── class_selector.css.snap\n    │   │               ├── declaration_emty.css\n    │   │               ├── declaration_emty.css.snap\n    │   │               ├── declaration_list.css\n    │   │               ├── declaration_list.css.snap\n    │   │               ├── dimension.css\n    │   │               ├── dimension.css.snap\n    │   │               ├── empty.css\n    │   │               ├── empty.css.snap\n    │   │               ├── at_rule/\n    │   │               │   ├── at_rule_charset.css\n    │   │               │   ├── at_rule_charset.css.snap\n    │   │               │   ├── at_rule_color_profile.css\n    │   │               │   ├── at_rule_color_profile.css.snap\n    │   │               │   ├── at_rule_container.css\n    │   │               │   ├── at_rule_container.css.snap\n    │   │               │   ├── at_rule_container_complex.css\n    │   │               │   ├── at_rule_container_complex.css.snap\n    │   │               │   ├── at_rule_counter_style.css\n    │   │               │   ├── at_rule_counter_style.css.snap\n    │   │               │   ├── at_rule_document.css\n    │   │               │   ├── at_rule_document.css.snap\n    │   │               │   ├── at_rule_font_face.css\n    │   │               │   ├── at_rule_font_face.css.snap\n    │   │               │   ├── at_rule_font_feature_values.css\n    │   │               │   ├── at_rule_font_feature_values.css.snap\n    │   │               │   ├── at_rule_font_palette_values.css\n    │   │               │   ├── at_rule_font_palette_values.css.snap\n    │   │               │   ├── at_rule_import.css\n    │   │               │   ├── at_rule_import.css.snap\n    │   │               │   ├── at_rule_keyframe.css\n    │   │               │   ├── at_rule_keyframe.css.snap\n    │   │               │   ├── at_rule_layer.css\n    │   │               │   ├── at_rule_layer.css.snap\n    │   │               │   ├── at_rule_media.css\n    │   │               │   ├── at_rule_media.css.snap\n    │   │               │   ├── at_rule_media_complex.css\n    │   │               │   ├── at_rule_media_complex.css.snap\n    │   │               │   ├── at_rule_namespace.css\n    │   │               │   ├── at_rule_namespace.css.snap\n    │   │               │   ├── at_rule_page.css\n    │   │               │   ├── at_rule_page.css.snap\n    │   │               │   ├── at_rule_page_complex.css\n    │   │               │   ├── at_rule_page_complex.css.snap\n    │   │               │   ├── at_rule_position_try.css\n    │   │               │   ├── at_rule_position_try.css.snap\n    │   │               │   ├── at_rule_property.css\n    │   │               │   ├── at_rule_property.css.snap\n    │   │               │   ├── at_rule_scope.css\n    │   │               │   ├── at_rule_scope.css.snap\n    │   │               │   ├── at_rule_starting_style.css\n    │   │               │   ├── at_rule_starting_style.css.snap\n    │   │               │   ├── at_rule_supports.css\n    │   │               │   ├── at_rule_supports.css.snap\n    │   │               │   ├── at_rule_supports_complex.css\n    │   │               │   ├── at_rule_supports_complex.css.snap\n    │   │               │   ├── at_rule_unknown.css\n    │   │               │   ├── at_rule_unknown.css.snap\n    │   │               │   ├── at_rule_view_transition.css\n    │   │               │   ├── at_rule_view_transition.css.snap\n    │   │               │   ├── keyframes/\n    │   │               │   │   ├── at_rule_keyframe_css_modules.css\n    │   │               │   │   ├── at_rule_keyframe_css_modules.css.snap\n    │   │               │   │   └── options.json\n    │   │               │   └── value/\n    │   │               │       ├── at_rule_value.css\n    │   │               │       ├── at_rule_value.css.snap\n    │   │               │       └── options.json\n    │   │               ├── function/\n    │   │               │   ├── calc.css\n    │   │               │   ├── calc.css.snap\n    │   │               │   ├── linear-gradient.css\n    │   │               │   ├── linear-gradient.css.snap\n    │   │               │   ├── rgb.css\n    │   │               │   ├── rgb.css.snap\n    │   │               │   ├── unknow.css\n    │   │               │   ├── unknow.css.snap\n    │   │               │   ├── url.css\n    │   │               │   ├── url.css.snap\n    │   │               │   ├── var.css\n    │   │               │   └── var.css.snap\n    │   │               ├── grit_metavariable/\n    │   │               │   ├── metavar.css\n    │   │               │   └── metavar.css.snap\n    │   │               ├── nesting/\n    │   │               │   ├── conditional_at_rule.css\n    │   │               │   ├── conditional_at_rule.css.snap\n    │   │               │   ├── multiple_amp.css\n    │   │               │   ├── multiple_amp.css.snap\n    │   │               │   ├── nesting.css\n    │   │               │   ├── nesting.css.snap\n    │   │               │   ├── nesting_1.css\n    │   │               │   └── nesting_1.css.snap\n    │   │               ├── property/\n    │   │               │   ├── grid.css\n    │   │               │   ├── grid.css.snap\n    │   │               │   ├── property-with-emoji.css\n    │   │               │   ├── property-with-emoji.css.snap\n    │   │               │   ├── property_all.css\n    │   │               │   ├── property_all.css.snap\n    │   │               │   ├── property_border.css\n    │   │               │   ├── property_border.css.snap\n    │   │               │   ├── property_generic.css\n    │   │               │   ├── property_generic.css.snap\n    │   │               │   ├── property_z-index.css\n    │   │               │   ├── property_z-index.css.snap\n    │   │               │   ├── unicode_range.css\n    │   │               │   ├── unicode_range.css.snap\n    │   │               │   └── composes/\n    │   │               │       ├── composes.css\n    │   │               │       ├── composes.css.snap\n    │   │               │       └── options.json\n    │   │               ├── selector/\n    │   │               │   ├── attribute.css\n    │   │               │   ├── attribute.css.snap\n    │   │               │   ├── class.css\n    │   │               │   ├── class.css.snap\n    │   │               │   ├── complex.css\n    │   │               │   ├── complex.css.snap\n    │   │               │   ├── id.css\n    │   │               │   ├── id.css.snap\n    │   │               │   ├── subselector.css\n    │   │               │   ├── subselector.css.snap\n    │   │               │   ├── type.css\n    │   │               │   ├── type.css.snap\n    │   │               │   ├── universal.css\n    │   │               │   ├── universal.css.snap\n    │   │               │   ├── pseudo_class/\n    │   │               │   │   ├── pseudo_class_an_plus_b.css\n    │   │               │   │   ├── pseudo_class_an_plus_b.css.snap\n    │   │               │   │   ├── pseudo_class_any.css\n    │   │               │   │   ├── pseudo_class_any.css.snap\n    │   │               │   │   ├── pseudo_class_basic.css\n    │   │               │   │   ├── pseudo_class_basic.css.snap\n    │   │               │   │   ├── pseudo_class_current.css\n    │   │               │   │   ├── pseudo_class_current.css.snap\n    │   │               │   │   ├── pseudo_class_dir.css\n    │   │               │   │   ├── pseudo_class_dir.css.snap\n    │   │               │   │   ├── pseudo_class_function_custom_identifier_list.css\n    │   │               │   │   ├── pseudo_class_function_custom_identifier_list.css.snap\n    │   │               │   │   ├── pseudo_class_future.css\n    │   │               │   │   ├── pseudo_class_future.css.snap\n    │   │               │   │   ├── pseudo_class_has.css\n    │   │               │   │   ├── pseudo_class_has.css.snap\n    │   │               │   │   ├── pseudo_class_host.css\n    │   │               │   │   ├── pseudo_class_host.css.snap\n    │   │               │   │   ├── pseudo_class_host_context.css\n    │   │               │   │   ├── pseudo_class_host_context.css.snap\n    │   │               │   │   ├── pseudo_class_ident.css\n    │   │               │   │   ├── pseudo_class_ident.css.snap\n    │   │               │   │   ├── pseudo_class_is.css\n    │   │               │   │   ├── pseudo_class_is.css.snap\n    │   │               │   │   ├── pseudo_class_lang.css\n    │   │               │   │   ├── pseudo_class_lang.css.snap\n    │   │               │   │   ├── pseudo_class_matches.css\n    │   │               │   │   ├── pseudo_class_matches.css.snap\n    │   │               │   │   ├── pseudo_class_not.css\n    │   │               │   │   ├── pseudo_class_not.css.snap\n    │   │               │   │   ├── pseudo_class_past.css\n    │   │               │   │   ├── pseudo_class_past.css.snap\n    │   │               │   │   ├── pseudo_class_where.css\n    │   │               │   │   ├── pseudo_class_where.css.snap\n    │   │               │   │   └── pseudo_class_module/\n    │   │               │   │       ├── options.json\n    │   │               │   │       ├── pseudo_class_module.css\n    │   │               │   │       └── pseudo_class_module.css.snap\n    │   │               │   └── pseudo_element/\n    │   │               │       ├── basic.css\n    │   │               │       ├── basic.css.snap\n    │   │               │       ├── cue-region.css\n    │   │               │       ├── cue-region.css.snap\n    │   │               │       ├── cue.css\n    │   │               │       ├── cue.css.snap\n    │   │               │       ├── escaped.css\n    │   │               │       ├── escaped.css.snap\n    │   │               │       ├── highlight.css\n    │   │               │       ├── highlight.css.snap\n    │   │               │       ├── part.css\n    │   │               │       ├── part.css.snap\n    │   │               │       ├── presudo_complex.css\n    │   │               │       ├── presudo_complex.css.snap\n    │   │               │       ├── slotted.css\n    │   │               │       └── slotted.css.snap\n    │   │               └── values/\n    │   │                   ├── number.css\n    │   │                   ├── number.css.snap\n    │   │                   ├── url_value.css\n    │   │                   └── url_value.css.snap\n    │   ├── biome_css_semantic/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── events.rs\n    │   │       ├── lib.rs\n    │   │       └── semantic_model/\n    │   │           ├── builder.rs\n    │   │           ├── mod.rs\n    │   │           ├── model.rs\n    │   │           └── specificity.rs\n    │   ├── biome_css_syntax/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── file_source.rs\n    │   │       ├── generated.rs\n    │   │       ├── lib.rs\n    │   │       ├── stmt_ext.rs\n    │   │       ├── string_ext.rs\n    │   │       ├── syntax_node.rs\n    │   │       └── generated/\n    │   │           ├── kind.rs\n    │   │           ├── macros.rs\n    │   │           ├── nodes.rs\n    │   │           └── nodes_mut.rs\n    │   ├── biome_deserialize/\n    │   │   ├── README.md\n    │   │   ├── Cargo.toml\n    │   │   ├── CHANGELOG.md\n    │   │   └── src/\n    │   │       ├── diagnostics.rs\n    │   │       ├── impls.rs\n    │   │       ├── json.rs\n    │   │       ├── lib.rs\n    │   │       ├── merge.rs\n    │   │       └── validator.rs\n    │   ├── biome_deserialize_macros/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── deserializable_derive.rs\n    │   │       ├── lib.rs\n    │   │       ├── merge_derive.rs\n    │   │       ├── util.rs\n    │   │       └── deserializable_derive/\n    │   │           ├── container_attrs.rs\n    │   │           ├── enum_variant_attrs.rs\n    │   │           └── struct_field_attrs.rs\n    │   ├── biome_diagnostics/\n    │   │   ├── README.md\n    │   │   ├── Cargo.toml\n    │   │   ├── CONTRIBUTING.md\n    │   │   ├── LICENSE\n    │   │   ├── examples/\n    │   │   │   ├── cli.rs\n    │   │   │   ├── fs.rs\n    │   │   │   ├── lint.rs\n    │   │   │   └── serde.rs\n    │   │   ├── src/\n    │   │   │   ├── adapters.rs\n    │   │   │   ├── advice.rs\n    │   │   │   ├── context.rs\n    │   │   │   ├── diagnostic.rs\n    │   │   │   ├── display.rs\n    │   │   │   ├── display_github.rs\n    │   │   │   ├── error.rs\n    │   │   │   ├── lib.rs\n    │   │   │   ├── location.rs\n    │   │   │   ├── panic.rs\n    │   │   │   ├── serde.rs\n    │   │   │   ├── suggestion.rs\n    │   │   │   └── display/\n    │   │   │       ├── backtrace.rs\n    │   │   │       ├── diff.rs\n    │   │   │       ├── frame.rs\n    │   │   │       └── message.rs\n    │   │   └── tests/\n    │   │       ├── disagnostics.rs\n    │   │       ├── macros.rs\n    │   │       ├── macros/\n    │   │       │   ├── category_ident.rs\n    │   │       │   ├── category_ident.stderr\n    │   │       │   ├── category_paren.rs\n    │   │       │   ├── category_paren.stderr\n    │   │       │   ├── description_ident.rs\n    │   │       │   ├── description_ident.stderr\n    │   │       │   ├── description_paren.rs\n    │   │       │   ├── description_paren.stderr\n    │   │       │   ├── description_syntax_error.rs\n    │   │       │   ├── description_syntax_error.stderr\n    │   │       │   ├── error_union.rs\n    │   │       │   ├── error_union.stderr\n    │   │       │   ├── location_eq.rs\n    │   │       │   ├── location_eq.stderr\n    │   │       │   ├── severity_lit_str.rs\n    │   │       │   ├── severity_lit_str.stderr\n    │   │       │   ├── severity_paren.rs\n    │   │       │   ├── severity_paren.stderr\n    │   │       │   ├── tags_comma.rs\n    │   │       │   ├── tags_comma.stderr\n    │   │       │   ├── tags_eq.rs\n    │   │       │   ├── tags_eq.stderr\n    │   │       │   ├── unknown_container_attr.rs\n    │   │       │   ├── unknown_container_attr.stderr\n    │   │       │   ├── unknown_field_attr.rs\n    │   │       │   ├── unknown_field_attr.stderr\n    │   │       │   ├── unknown_location_attr.rs\n    │   │       │   ├── unknown_location_attr.stderr\n    │   │       │   ├── unknown_message_attr.rs\n    │   │       │   └── unknown_message_attr.stderr\n    │   │       └── snapshots/\n    │   │           ├── html_mdx_print_diagnostic.snap\n    │   │           └── html_print_diagnostic.snap\n    │   ├── biome_diagnostics_categories/\n    │   │   ├── README.md\n    │   │   ├── build.rs\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── categories.rs\n    │   │       └── lib.rs\n    │   ├── biome_diagnostics_macros/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── generate.rs\n    │   │       ├── lib.rs\n    │   │       └── parse.rs\n    │   ├── biome_flags/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       └── lib.rs\n    │   ├── biome_formatter/\n    │   │   ├── README.md\n    │   │   ├── Cargo.toml\n    │   │   ├── CONTRIBUTING.md\n    │   │   ├── LICENSE\n    │   │   ├── shared_traits.rs\n    │   │   └── src/\n    │   │       ├── arguments.rs\n    │   │       ├── buffer.rs\n    │   │       ├── builders.rs\n    │   │       ├── comments.rs\n    │   │       ├── diagnostics.rs\n    │   │       ├── format_element.rs\n    │   │       ├── format_extensions.rs\n    │   │       ├── formatter.rs\n    │   │       ├── group_id.rs\n    │   │       ├── lib.rs\n    │   │       ├── macros.rs\n    │   │       ├── prelude.rs\n    │   │       ├── printed_tokens.rs\n    │   │       ├── separated.rs\n    │   │       ├── source_map.rs\n    │   │       ├── trivia.rs\n    │   │       ├── comments/\n    │   │       │   ├── builder.rs\n    │   │       │   └── map.rs\n    │   │       ├── format_element/\n    │   │       │   ├── document.rs\n    │   │       │   └── tag.rs\n    │   │       ├── printer/\n    │   │       │   ├── call_stack.rs\n    │   │       │   ├── line_suffixes.rs\n    │   │       │   ├── mod.rs\n    │   │       │   ├── queue.rs\n    │   │       │   ├── stack.rs\n    │   │       │   └── printer_options/\n    │   │       │       └── mod.rs\n    │   │       ├── snapshots/\n    │   │       │   ├── formatter_syntax_error.snap\n    │   │       │   ├── invalid_document.snap\n    │   │       │   ├── poor_layout.snap\n    │   │       │   └── range_error.snap\n    │   │       └── token/\n    │   │           ├── mod.rs\n    │   │           ├── number.rs\n    │   │           └── string.rs\n    │   ├── biome_formatter_test/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── check_reformat.rs\n    │   │       ├── diff_report.rs\n    │   │       ├── lib.rs\n    │   │       ├── snapshot_builder.rs\n    │   │       ├── spec.rs\n    │   │       ├── test_prettier_snapshot.rs\n    │   │       ├── utils.rs\n    │   │       └── prettier/\n    │   │           ├── LICENSE\n    │   │           ├── package.json\n    │   │           └── prepare_tests.js\n    │   ├── biome_fs/\n    │   │   ├── README.md\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── fs.rs\n    │   │       ├── interner.rs\n    │   │       ├── lib.rs\n    │   │       ├── path.rs\n    │   │       ├── utils.rs\n    │   │       └── fs/\n    │   │           ├── memory.rs\n    │   │           └── os.rs\n    │   ├── biome_glob/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── editorconfig.rs\n    │   │       └── lib.rs\n    │   ├── biome_graphql_analyze/\n    │   │   ├── Cargo.toml\n    │   │   ├── src/\n    │   │   │   ├── lib.rs\n    │   │   │   ├── lint.rs\n    │   │   │   ├── registry.rs\n    │   │   │   ├── suppression_action.rs\n    │   │   │   └── lint/\n    │   │   │       ├── correctness.rs\n    │   │   │       ├── style.rs\n    │   │   │       ├── suspicious.rs\n    │   │   │       ├── correctness/\n    │   │   │       │   └── use_graphql_named_operations.rs\n    │   │   │       ├── style/\n    │   │   │       │   ├── use_deprecated_reason.rs\n    │   │   │       │   └── use_graphql_naming_convention.rs\n    │   │   │       └── suspicious/\n    │   │   │           └── no_duplicate_fields.rs\n    │   │   └── tests/\n    │   │       ├── spec_tests.rs\n    │   │       ├── specs/\n    │   │       │   ├── correctness/\n    │   │       │   │   └── useGraphqlNamedOperations/\n    │   │       │   │       ├── invalid.graphql\n    │   │       │   │       ├── invalid.graphql.snap\n    │   │       │   │       ├── valid.graphql\n    │   │       │   │       └── valid.graphql.snap\n    │   │       │   ├── style/\n    │   │       │   │   ├── useDeprecatedReason/\n    │   │       │   │   │   ├── invalid.graphql\n    │   │       │   │   │   ├── invalid.graphql.snap\n    │   │       │   │   │   ├── valid.graphql\n    │   │       │   │   │   └── valid.graphql.snap\n    │   │       │   │   └── useGraphqlNamingConvention/\n    │   │       │   │       ├── invalid.graphql\n    │   │       │   │       ├── invalid.graphql.snap\n    │   │       │   │       ├── valid.graphql\n    │   │       │   │       └── valid.graphql.snap\n    │   │       │   └── suspicious/\n    │   │       │       └── noDuplicateFields/\n    │   │       │           ├── invalid.graphql\n    │   │       │           └── invalid.graphql.snap\n    │   │       └── suppression/\n    │   │           └── nursery/\n    │   │               ├── noDuplicatedFields/\n    │   │               │   ├── noDuplicatedFields.graphql\n    │   │               │   └── noDuplicatedFields.graphql.snap\n    │   │               └── useDeprecatedReason/\n    │   │                   ├── useDeprecatedReason.graphql\n    │   │                   └── useDeprecatedReason.graphql.snap\n    │   ├── biome_graphql_factory/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── generated.rs\n    │   │       ├── lib.rs\n    │   │       ├── make.rs\n    │   │       └── generated/\n    │   │           ├── node_factory.rs\n    │   │           └── syntax_factory.rs\n    │   ├── biome_graphql_formatter/\n    │   │   ├── README.md\n    │   │   ├── Cargo.toml\n    │   │   ├── benches/\n    │   │   │   ├── graphql_formatter.rs\n    │   │   │   └── libs-graphql.txt\n    │   │   ├── src/\n    │   │   │   ├── comments.rs\n    │   │   │   ├── context.rs\n    │   │   │   ├── cst.rs\n    │   │   │   ├── generated.rs\n    │   │   │   ├── lib.rs\n    │   │   │   ├── prelude.rs\n    │   │   │   ├── trivia.rs\n    │   │   │   ├── verbatim.rs\n    │   │   │   ├── graphql/\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   ├── any/\n    │   │   │   │   │   ├── definition.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── operation_definition.rs\n    │   │   │   │   │   ├── primitive_type.rs\n    │   │   │   │   │   ├── selection.rs\n    │   │   │   │   │   ├── ts_type.rs\n    │   │   │   │   │   ├── type_definition.rs\n    │   │   │   │   │   ├── type_extension.rs\n    │   │   │   │   │   └── value.rs\n    │   │   │   │   ├── auxiliary/\n    │   │   │   │   │   ├── alias.rs\n    │   │   │   │   │   ├── argument.rs\n    │   │   │   │   │   ├── arguments.rs\n    │   │   │   │   │   ├── description.rs\n    │   │   │   │   │   ├── directive.rs\n    │   │   │   │   │   ├── directive_location.rs\n    │   │   │   │   │   ├── field.rs\n    │   │   │   │   │   ├── fragment_spread.rs\n    │   │   │   │   │   ├── implements_interfaces.rs\n    │   │   │   │   │   ├── inline_fragment.rs\n    │   │   │   │   │   ├── list_type.rs\n    │   │   │   │   │   ├── literal_name.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── name_binding.rs\n    │   │   │   │   │   ├── name_reference.rs\n    │   │   │   │   │   ├── non_null_type.rs\n    │   │   │   │   │   ├── object_field.rs\n    │   │   │   │   │   ├── operation_type.rs\n    │   │   │   │   │   ├── root.rs\n    │   │   │   │   │   ├── root_operation_types.rs\n    │   │   │   │   │   ├── selection_set.rs\n    │   │   │   │   │   ├── type_condition.rs\n    │   │   │   │   │   ├── union_member_types.rs\n    │   │   │   │   │   ├── variable_binding.rs\n    │   │   │   │   │   ├── variable_definitions.rs\n    │   │   │   │   │   └── variable_reference.rs\n    │   │   │   │   ├── bogus/\n    │   │   │   │   │   ├── bogus.rs\n    │   │   │   │   │   ├── bogus_definition.rs\n    │   │   │   │   │   ├── bogus_selection.rs\n    │   │   │   │   │   ├── bogus_type.rs\n    │   │   │   │   │   ├── bogus_value.rs\n    │   │   │   │   │   └── mod.rs\n    │   │   │   │   ├── definitions/\n    │   │   │   │   │   ├── arguments_definition.rs\n    │   │   │   │   │   ├── directive_definition.rs\n    │   │   │   │   │   ├── enum_type_definition.rs\n    │   │   │   │   │   ├── enum_value_definition.rs\n    │   │   │   │   │   ├── enum_values_definition.rs\n    │   │   │   │   │   ├── field_definition.rs\n    │   │   │   │   │   ├── fields_definition.rs\n    │   │   │   │   │   ├── fragment_definition.rs\n    │   │   │   │   │   ├── input_fields_definition.rs\n    │   │   │   │   │   ├── input_object_type_definition.rs\n    │   │   │   │   │   ├── input_value_definition.rs\n    │   │   │   │   │   ├── interface_type_definition.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── object_type_definition.rs\n    │   │   │   │   │   ├── operation_definition.rs\n    │   │   │   │   │   ├── root_operation_type_definition.rs\n    │   │   │   │   │   ├── scalar_type_definition.rs\n    │   │   │   │   │   ├── schema_definition.rs\n    │   │   │   │   │   ├── union_type_definition.rs\n    │   │   │   │   │   └── variable_definition.rs\n    │   │   │   │   ├── extensions/\n    │   │   │   │   │   ├── enum_type_extension.rs\n    │   │   │   │   │   ├── input_object_type_extension.rs\n    │   │   │   │   │   ├── interface_type_extension.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── object_type_extension.rs\n    │   │   │   │   │   ├── scalar_type_extension.rs\n    │   │   │   │   │   ├── schema_extension.rs\n    │   │   │   │   │   └── union_type_extension.rs\n    │   │   │   │   ├── lists/\n    │   │   │   │   │   ├── argument_definition_list.rs\n    │   │   │   │   │   ├── argument_list.rs\n    │   │   │   │   │   ├── definition_list.rs\n    │   │   │   │   │   ├── directive_list.rs\n    │   │   │   │   │   ├── directive_location_list.rs\n    │   │   │   │   │   ├── enum_value_list.rs\n    │   │   │   │   │   ├── field_definition_list.rs\n    │   │   │   │   │   ├── implements_interface_list.rs\n    │   │   │   │   │   ├── input_field_list.rs\n    │   │   │   │   │   ├── list_value_element_list.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── object_value_member_list.rs\n    │   │   │   │   │   ├── root_operation_type_definition_list.rs\n    │   │   │   │   │   ├── selection_list.rs\n    │   │   │   │   │   ├── union_member_type_list.rs\n    │   │   │   │   │   └── variable_definition_list.rs\n    │   │   │   │   └── value/\n    │   │   │   │       ├── boolean_value.rs\n    │   │   │   │       ├── default_value.rs\n    │   │   │   │       ├── enum_value.rs\n    │   │   │   │       ├── float_value.rs\n    │   │   │   │       ├── int_value.rs\n    │   │   │   │       ├── list_value.rs\n    │   │   │   │       ├── mod.rs\n    │   │   │   │       ├── null_value.rs\n    │   │   │   │       ├── object_value.rs\n    │   │   │   │       └── string_value.rs\n    │   │   │   └── utils/\n    │   │   │       ├── list.rs\n    │   │   │       └── mod.rs\n    │   │   └── tests/\n    │   │       ├── language.rs\n    │   │       ├── prettier_tests.rs\n    │   │       ├── quick_test.rs\n    │   │       ├── spec_test.rs\n    │   │       ├── spec_tests.rs\n    │   │       └── specs/\n    │   │           ├── graphql/\n    │   │           │   ├── directive.graphql\n    │   │           │   ├── directive.graphql.snap\n    │   │           │   ├── newline_clrf.graphql\n    │   │           │   ├── newline_clrf.graphql.snap\n    │   │           │   ├── operation.graphql\n    │   │           │   ├── operation.graphql.snap\n    │   │           │   ├── selection_set.graphql\n    │   │           │   ├── selection_set.graphql.snap\n    │   │           │   ├── simple.graphql\n    │   │           │   ├── simple.graphql.snap\n    │   │           │   ├── type.graphql\n    │   │           │   ├── type.graphql.snap\n    │   │           │   ├── value.graphql\n    │   │           │   ├── value.graphql.snap\n    │   │           │   ├── definitions/\n    │   │           │   │   ├── directive_definition.graphql\n    │   │           │   │   ├── directive_definition.graphql.snap\n    │   │           │   │   ├── enum.graphql\n    │   │           │   │   ├── enum.graphql.snap\n    │   │           │   │   ├── enum_extension.graphql\n    │   │           │   │   ├── enum_extension.graphql.snap\n    │   │           │   │   ├── fragment.graphql\n    │   │           │   │   ├── fragment.graphql.snap\n    │   │           │   │   ├── input_object.graphql\n    │   │           │   │   ├── input_object.graphql.snap\n    │   │           │   │   ├── input_object_extension.graphql\n    │   │           │   │   ├── input_object_extension.graphql.snap\n    │   │           │   │   ├── interface.graphql\n    │   │           │   │   ├── interface.graphql.snap\n    │   │           │   │   ├── interface_extension.graphql\n    │   │           │   │   ├── interface_extension.graphql.snap\n    │   │           │   │   ├── object.graphql\n    │   │           │   │   ├── object.graphql.snap\n    │   │           │   │   ├── object_extension.graphql\n    │   │           │   │   ├── object_extension.graphql.snap\n    │   │           │   │   ├── scalar.graphql\n    │   │           │   │   ├── scalar.graphql.snap\n    │   │           │   │   ├── scalar_extension.graphql\n    │   │           │   │   ├── scalar_extension.graphql.snap\n    │   │           │   │   ├── schema.graphql\n    │   │           │   │   ├── schema.graphql.snap\n    │   │           │   │   ├── schema_extension.graphql\n    │   │           │   │   ├── schema_extension.graphql.snap\n    │   │           │   │   ├── union.graphql\n    │   │           │   │   ├── union.graphql.snap\n    │   │           │   │   ├── union_extension.graphql\n    │   │           │   │   └── union_extension.graphql.snap\n    │   │           │   └── object/\n    │   │           │       └── spacing/\n    │   │           │           ├── object_spacing.graphql\n    │   │           │           ├── object_spacing.graphql.snap\n    │   │           │           ├── options.json\n    │   │           │           └── global/\n    │   │           │               ├── object_spacing.graphql\n    │   │           │               ├── object_spacing.graphql.snap\n    │   │           │               └── options.json\n    │   │           └── prettier/\n    │   │               ├── README.md\n    │   │               ├── prepare_tests.js\n    │   │               └── graphql/\n    │   │                   ├── arguments/\n    │   │                   │   ├── hello.graphql\n    │   │                   │   └── hello.graphql.prettier-snap\n    │   │                   ├── bracket-spacing/\n    │   │                   │   ├── bracket_spacing.graphql\n    │   │                   │   └── bracket_spacing.graphql.prettier-snap\n    │   │                   ├── comments/\n    │   │                   │   ├── argument_comment.graphql\n    │   │                   │   ├── argument_comment.graphql.prettier-snap\n    │   │                   │   ├── fields.graphql\n    │   │                   │   ├── fields.graphql.prettier-snap\n    │   │                   │   ├── interfaces.graphql\n    │   │                   │   ├── interfaces.graphql.prettier-snap\n    │   │                   │   ├── tokens.graphql\n    │   │                   │   └── tokens.graphql.prettier-snap\n    │   │                   ├── definitions/\n    │   │                   │   ├── fields.graphql\n    │   │                   │   ├── fields.graphql.prettier-snap\n    │   │                   │   └── fields.graphql.snap\n    │   │                   ├── deprecation/\n    │   │                   │   ├── directives.graphql\n    │   │                   │   └── directives.graphql.prettier-snap\n    │   │                   ├── directive-decl/\n    │   │                   │   ├── directive_decl.graphql\n    │   │                   │   └── directive_decl.graphql.prettier-snap\n    │   │                   ├── directives/\n    │   │                   │   ├── directives.graphql\n    │   │                   │   └── directives.graphql.prettier-snap\n    │   │                   ├── enum/\n    │   │                   │   ├── enum.graphql\n    │   │                   │   └── enum.graphql.prettier-snap\n    │   │                   ├── fields/\n    │   │                   │   ├── fields.graphql\n    │   │                   │   └── fields.graphql.prettier-snap\n    │   │                   ├── fragment-variables/\n    │   │                   │   ├── fragment_variables.graphql\n    │   │                   │   ├── fragment_variables.graphql.prettier-snap\n    │   │                   │   └── fragment_variables.graphql.snap\n    │   │                   ├── fragments/\n    │   │                   │   ├── fragments.graphql\n    │   │                   │   └── fragments.graphql.prettier-snap\n    │   │                   ├── hello/\n    │   │                   │   ├── hello.graphql\n    │   │                   │   └── hello.graphql.prettier-snap\n    │   │                   ├── interface/\n    │   │                   │   ├── interface.graphql\n    │   │                   │   ├── interface.graphql.prettier-snap\n    │   │                   │   ├── object_type_def.graphql\n    │   │                   │   ├── object_type_def.graphql.prettier-snap\n    │   │                   │   ├── object_type_def_mixed_syntax.graphql\n    │   │                   │   ├── object_type_def_mixed_syntax.graphql.prettier-snap\n    │   │                   │   ├── object_type_def_old_syntax.graphql\n    │   │                   │   ├── object_type_def_old_syntax.graphql.prettier-snap\n    │   │                   │   ├── separator-detection.graphql\n    │   │                   │   └── separator-detection.graphql.prettier-snap\n    │   │                   ├── kitchen-sink/\n    │   │                   │   ├── kitchen_sink.graphql\n    │   │                   │   ├── kitchen_sink.graphql.prettier-snap\n    │   │                   │   ├── schema_kitchen_sink.graphql\n    │   │                   │   └── schema_kitchen_sink.graphql.prettier-snap\n    │   │                   ├── lists/\n    │   │                   │   ├── lists.graphql\n    │   │                   │   └── lists.graphql.prettier-snap\n    │   │                   ├── newline/\n    │   │                   │   ├── directive_decl.graphql\n    │   │                   │   ├── directive_decl.graphql.prettier-snap\n    │   │                   │   ├── directives.graphql\n    │   │                   │   ├── directives.graphql.prettier-snap\n    │   │                   │   ├── enum.graphql\n    │   │                   │   ├── enum.graphql.prettier-snap\n    │   │                   │   ├── fields.graphql\n    │   │                   │   ├── fields.graphql.prettier-snap\n    │   │                   │   ├── input.graphql\n    │   │                   │   ├── input.graphql.prettier-snap\n    │   │                   │   ├── interface.graphql\n    │   │                   │   ├── interface.graphql.prettier-snap\n    │   │                   │   ├── object_type_def.graphql\n    │   │                   │   ├── object_type_def.graphql.prettier-snap\n    │   │                   │   ├── schema.graphql\n    │   │                   │   └── schema.graphql.prettier-snap\n    │   │                   ├── object-type-def/\n    │   │                   │   ├── arguments.graphql\n    │   │                   │   ├── arguments.graphql.prettier-snap\n    │   │                   │   ├── directives.graphql\n    │   │                   │   ├── directives.graphql.prettier-snap\n    │   │                   │   ├── extend.graphql\n    │   │                   │   ├── extend.graphql.prettier-snap\n    │   │                   │   ├── implements.graphql\n    │   │                   │   ├── implements.graphql.prettier-snap\n    │   │                   │   ├── input.graphql\n    │   │                   │   ├── input.graphql.prettier-snap\n    │   │                   │   ├── object_type_def.graphql\n    │   │                   │   └── object_type_def.graphql.prettier-snap\n    │   │                   ├── objects/\n    │   │                   │   ├── objects.graphql\n    │   │                   │   └── objects.graphql.prettier-snap\n    │   │                   ├── prettier-ignore/\n    │   │                   │   ├── prettier-ignore-comment.graphql\n    │   │                   │   └── prettier-ignore-comment.graphql.prettier-snap\n    │   │                   ├── range/\n    │   │                   │   ├── issue2296.graphql\n    │   │                   │   └── issue2296.graphql.prettier-snap\n    │   │                   ├── scalar/\n    │   │                   │   ├── scalar.graphql\n    │   │                   │   └── scalar.graphql.prettier-snap\n    │   │                   ├── schema/\n    │   │                   │   ├── schema.graphql\n    │   │                   │   └── schema.graphql.prettier-snap\n    │   │                   ├── string/\n    │   │                   │   ├── description.graphql\n    │   │                   │   ├── description.graphql.prettier-snap\n    │   │                   │   ├── string.graphql\n    │   │                   │   └── string.graphql.prettier-snap\n    │   │                   ├── trailing-comma/\n    │   │                   │   ├── trailing.graphql\n    │   │                   │   └── trailing.graphql.prettier-snap\n    │   │                   ├── type-extension-definition/\n    │   │                   │   ├── type-extendsion-syntax.graphql\n    │   │                   │   └── type-extendsion-syntax.graphql.prettier-snap\n    │   │                   ├── union-types/\n    │   │                   │   ├── union_types.graphql\n    │   │                   │   ├── union_types.graphql.prettier-snap\n    │   │                   │   └── union_types.graphql.prettier-snap-original\n    │   │                   └── variable-definitions/\n    │   │                       ├── variable_definitions.graphql\n    │   │                       └── variable_definitions.graphql.prettier-snap\n    │   ├── biome_graphql_parser/\n    │   │   ├── Cargo.toml\n    │   │   ├── benches/\n    │   │   │   ├── graphql_parser.rs\n    │   │   │   └── libs-graphql.txt\n    │   │   ├── src/\n    │   │   │   ├── lib.rs\n    │   │   │   ├── token_source.rs\n    │   │   │   ├── lexer/\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   └── tests.rs\n    │   │   │   └── parser/\n    │   │   │       ├── argument.rs\n    │   │   │       ├── directive.rs\n    │   │   │       ├── mod.rs\n    │   │   │       ├── parse_error.rs\n    │   │   │       ├── type.rs\n    │   │   │       ├── value.rs\n    │   │   │       ├── variable.rs\n    │   │   │       └── definitions/\n    │   │   │           ├── directive.rs\n    │   │   │           ├── enum.rs\n    │   │   │           ├── field.rs\n    │   │   │           ├── fragment.rs\n    │   │   │           ├── input_object.rs\n    │   │   │           ├── interface.rs\n    │   │   │           ├── mod.rs\n    │   │   │           ├── object.rs\n    │   │   │           ├── operation.rs\n    │   │   │           ├── scalar.rs\n    │   │   │           ├── schema.rs\n    │   │   │           └── union.rs\n    │   │   └── tests/\n    │   │       ├── spec_test.rs\n    │   │       ├── spec_tests.rs\n    │   │       └── graphql_test_suite/\n    │   │           ├── err/\n    │   │           │   ├── directive.graphql\n    │   │           │   ├── directive.graphql.snap\n    │   │           │   ├── operation.graphql\n    │   │           │   ├── operation.graphql.snap\n    │   │           │   ├── selection_set.graphql\n    │   │           │   ├── selection_set.graphql.snap\n    │   │           │   ├── type.graphql\n    │   │           │   ├── type.graphql.snap\n    │   │           │   ├── value.graphql\n    │   │           │   ├── value.graphql.snap\n    │   │           │   └── definitions/\n    │   │           │       ├── directive_definition.graphql\n    │   │           │       ├── directive_definition.graphql.snap\n    │   │           │       ├── enum.graphql\n    │   │           │       ├── enum.graphql.snap\n    │   │           │       ├── enum_extension.graphql\n    │   │           │       ├── enum_extension.graphql.snap\n    │   │           │       ├── fragment.graphql\n    │   │           │       ├── fragment.graphql.snap\n    │   │           │       ├── input_object.graphql\n    │   │           │       ├── input_object.graphql.snap\n    │   │           │       ├── input_object_extension.graphql\n    │   │           │       ├── input_object_extension.graphql.snap\n    │   │           │       ├── interface.graphql\n    │   │           │       ├── interface.graphql.snap\n    │   │           │       ├── interface_extension.graphql\n    │   │           │       ├── interface_extension.graphql.snap\n    │   │           │       ├── object.graphql\n    │   │           │       ├── object.graphql.snap\n    │   │           │       ├── object_extension.graphql\n    │   │           │       ├── object_extension.graphql.snap\n    │   │           │       ├── scalar.graphql\n    │   │           │       ├── scalar.graphql.snap\n    │   │           │       ├── scalar_extension.graphql\n    │   │           │       ├── scalar_extension.graphql.snap\n    │   │           │       ├── schema.graphql\n    │   │           │       ├── schema.graphql.snap\n    │   │           │       ├── schema_extension.graphql\n    │   │           │       ├── schema_extension.graphql.snap\n    │   │           │       ├── union.graphql\n    │   │           │       ├── union.graphql.snap\n    │   │           │       ├── union_extension.graphql\n    │   │           │       └── union_extension.graphql.snap\n    │   │           └── ok/\n    │   │               ├── directive.graphql\n    │   │               ├── directive.graphql.snap\n    │   │               ├── operation.graphql\n    │   │               ├── operation.graphql.snap\n    │   │               ├── selection_set.graphql\n    │   │               ├── selection_set.graphql.snap\n    │   │               ├── type.graphql\n    │   │               ├── type.graphql.snap\n    │   │               ├── value.graphql\n    │   │               ├── value.graphql.snap\n    │   │               └── definitions/\n    │   │                   ├── directive_definition.graphql\n    │   │                   ├── directive_definition.graphql.snap\n    │   │                   ├── enum.graphql\n    │   │                   ├── enum.graphql.snap\n    │   │                   ├── enum_extension.graphql\n    │   │                   ├── enum_extension.graphql.snap\n    │   │                   ├── fragment.graphql\n    │   │                   ├── fragment.graphql.snap\n    │   │                   ├── input_object.graphql\n    │   │                   ├── input_object.graphql.snap\n    │   │                   ├── input_object_extension.graphql\n    │   │                   ├── input_object_extension.graphql.snap\n    │   │                   ├── interface.graphql\n    │   │                   ├── interface.graphql.snap\n    │   │                   ├── interface_extension.graphql\n    │   │                   ├── interface_extension.graphql.snap\n    │   │                   ├── object.graphql\n    │   │                   ├── object.graphql.snap\n    │   │                   ├── object_extension.graphql\n    │   │                   ├── object_extension.graphql.snap\n    │   │                   ├── scalar.graphql\n    │   │                   ├── scalar.graphql.snap\n    │   │                   ├── scalar_extension.graphql\n    │   │                   ├── scalar_extension.graphql.snap\n    │   │                   ├── schema.graphql\n    │   │                   ├── schema.graphql.snap\n    │   │                   ├── schema_extension.graphql\n    │   │                   ├── schema_extension.graphql.snap\n    │   │                   ├── union.graphql\n    │   │                   ├── union.graphql.snap\n    │   │                   ├── union_extension.graphql\n    │   │                   └── union_extension.graphql.snap\n    │   ├── biome_graphql_semantic/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── events.rs\n    │   │       ├── lib.rs\n    │   │       ├── semantic_model/\n    │   │       │   ├── binding.rs\n    │   │       │   ├── builder.rs\n    │   │       │   ├── mod.rs\n    │   │       │   ├── model.rs\n    │   │       │   └── reference.rs\n    │   │       └── tests/\n    │   │           ├── directive.rs\n    │   │           ├── enum.rs\n    │   │           ├── fragment.rs\n    │   │           ├── interface.rs\n    │   │           ├── mod.rs\n    │   │           ├── object.rs\n    │   │           ├── operation.rs\n    │   │           ├── scalar.rs\n    │   │           └── union.rs\n    │   ├── biome_graphql_syntax/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── file_source.rs\n    │   │       ├── generated.rs\n    │   │       ├── lib.rs\n    │   │       ├── string_value_ext.rs\n    │   │       ├── syntax_node.rs\n    │   │       └── generated/\n    │   │           ├── kind.rs\n    │   │           ├── macros.rs\n    │   │           ├── nodes.rs\n    │   │           └── nodes_mut.rs\n    │   ├── biome_grit_factory/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── generated.rs\n    │   │       ├── lib.rs\n    │   │       └── generated/\n    │   │           ├── node_factory.rs\n    │   │           └── syntax_factory.rs\n    │   ├── biome_grit_formatter/\n    │   │   ├── Cargo.toml\n    │   │   ├── src/\n    │   │   │   ├── comments.rs\n    │   │   │   ├── context.rs\n    │   │   │   ├── cst.rs\n    │   │   │   ├── generated.rs\n    │   │   │   ├── lib.rs\n    │   │   │   ├── prelude.rs\n    │   │   │   ├── separated.rs\n    │   │   │   ├── trivia.rs\n    │   │   │   ├── verbatim.rs\n    │   │   │   └── grit/\n    │   │   │       ├── mod.rs\n    │   │   │       ├── any/\n    │   │   │       │   ├── code_snippet_source.rs\n    │   │   │       │   ├── container.rs\n    │   │   │       │   ├── definition.rs\n    │   │   │       │   ├── language_declaration.rs\n    │   │   │       │   ├── language_flavor_kind.rs\n    │   │   │       │   ├── language_name.rs\n    │   │   │       │   ├── list_accessor_subject.rs\n    │   │   │       │   ├── list_index.rs\n    │   │   │       │   ├── list_pattern.rs\n    │   │   │       │   ├── literal.rs\n    │   │   │       │   ├── map_accessor_subject.rs\n    │   │   │       │   ├── map_element.rs\n    │   │   │       │   ├── map_key.rs\n    │   │   │       │   ├── maybe_curly_pattern.rs\n    │   │   │       │   ├── maybe_named_arg.rs\n    │   │   │       │   ├── mod.rs\n    │   │   │       │   ├── pattern.rs\n    │   │   │       │   ├── predicate.rs\n    │   │   │       │   ├── predicate_match_subject.rs\n    │   │   │       │   ├── regex.rs\n    │   │   │       │   └── version.rs\n    │   │   │       ├── auxiliary/\n    │   │   │       │   ├── annotation.rs\n    │   │   │       │   ├── bubble.rs\n    │   │   │       │   ├── bubble_scope.rs\n    │   │   │       │   ├── dot.rs\n    │   │   │       │   ├── dotdotdot.rs\n    │   │   │       │   ├── engine_name.rs\n    │   │   │       │   ├── every.rs\n    │   │   │       │   ├── files.rs\n    │   │   │       │   ├── javascript_body_wrapper.rs\n    │   │   │       │   ├── language_declaration.rs\n    │   │   │       │   ├── language_flavor.rs\n    │   │   │       │   ├── language_flavor_kind.rs\n    │   │   │       │   ├── language_name.rs\n    │   │   │       │   ├── language_specific_snippet.rs\n    │   │   │       │   ├── like.rs\n    │   │   │       │   ├── like_threshold.rs\n    │   │   │       │   ├── list.rs\n    │   │   │       │   ├── list_accessor.rs\n    │   │   │       │   ├── map.rs\n    │   │   │       │   ├── map_accessor.rs\n    │   │   │       │   ├── map_element.rs\n    │   │   │       │   ├── mod.rs\n    │   │   │       │   ├── name.rs\n    │   │   │       │   ├── named_arg.rs\n    │   │   │       │   ├── node_like.rs\n    │   │   │       │   ├── not.rs\n    │   │   │       │   ├── rewrite.rs\n    │   │   │       │   ├── root.rs\n    │   │   │       │   ├── sequential.rs\n    │   │   │       │   ├── some.rs\n    │   │   │       │   ├── underscore.rs\n    │   │   │       │   ├── variable.rs\n    │   │   │       │   ├── version.rs\n    │   │   │       │   └── within.rs\n    │   │   │       ├── bogus/\n    │   │   │       │   ├── bogus.rs\n    │   │   │       │   ├── bogus_container.rs\n    │   │   │       │   ├── bogus_definition.rs\n    │   │   │       │   ├── bogus_language_declaration.rs\n    │   │   │       │   ├── bogus_language_flavor_kind.rs\n    │   │   │       │   ├── bogus_language_name.rs\n    │   │   │       │   ├── bogus_literal.rs\n    │   │   │       │   ├── bogus_map_element.rs\n    │   │   │       │   ├── bogus_named_arg.rs\n    │   │   │       │   ├── bogus_pattern.rs\n    │   │   │       │   ├── bogus_predicate.rs\n    │   │   │       │   ├── bogus_version.rs\n    │   │   │       │   └── mod.rs\n    │   │   │       ├── declarations/\n    │   │   │       │   ├── function_definition.rs\n    │   │   │       │   ├── javascript_function_definition.rs\n    │   │   │       │   └── mod.rs\n    │   │   │       ├── lists/\n    │   │   │       │   ├── definition_list.rs\n    │   │   │       │   ├── language_flavor_list.rs\n    │   │   │       │   ├── list_pattern_list.rs\n    │   │   │       │   ├── map_element_list.rs\n    │   │   │       │   ├── mod.rs\n    │   │   │       │   ├── named_arg_list.rs\n    │   │   │       │   ├── pattern_list.rs\n    │   │   │       │   ├── predicate_list.rs\n    │   │   │       │   └── variable_list.rs\n    │   │   │       ├── patterns/\n    │   │   │       │   ├── add_operation.rs\n    │   │   │       │   ├── assignment_as_pattern.rs\n    │   │   │       │   ├── bracketed_pattern.rs\n    │   │   │       │   ├── curly_pattern.rs\n    │   │   │       │   ├── div_operation.rs\n    │   │   │       │   ├── mod.rs\n    │   │   │       │   ├── mod_operation.rs\n    │   │   │       │   ├── mul_operation.rs\n    │   │   │       │   ├── pattern_accumulate.rs\n    │   │   │       │   ├── pattern_after.rs\n    │   │   │       │   ├── pattern_and.rs\n    │   │   │       │   ├── pattern_any.rs\n    │   │   │       │   ├── pattern_as.rs\n    │   │   │       │   ├── pattern_before.rs\n    │   │   │       │   ├── pattern_contains.rs\n    │   │   │       │   ├── pattern_definition.rs\n    │   │   │       │   ├── pattern_definition_body.rs\n    │   │   │       │   ├── pattern_else_clause.rs\n    │   │   │       │   ├── pattern_if_else.rs\n    │   │   │       │   ├── pattern_includes.rs\n    │   │   │       │   ├── pattern_limit.rs\n    │   │   │       │   ├── pattern_maybe.rs\n    │   │   │       │   ├── pattern_not.rs\n    │   │   │       │   ├── pattern_or.rs\n    │   │   │       │   ├── pattern_or_else.rs\n    │   │   │       │   ├── pattern_until_clause.rs\n    │   │   │       │   ├── pattern_where.rs\n    │   │   │       │   ├── regex_pattern.rs\n    │   │   │       │   ├── regex_pattern_variables.rs\n    │   │   │       │   └── sub_operation.rs\n    │   │   │       ├── predicates/\n    │   │   │       │   ├── bracketed_predicate.rs\n    │   │   │       │   ├── mod.rs\n    │   │   │       │   ├── predicate_accumulate.rs\n    │   │   │       │   ├── predicate_and.rs\n    │   │   │       │   ├── predicate_any.rs\n    │   │   │       │   ├── predicate_assignment.rs\n    │   │   │       │   ├── predicate_call.rs\n    │   │   │       │   ├── predicate_curly.rs\n    │   │   │       │   ├── predicate_definition.rs\n    │   │   │       │   ├── predicate_else_clause.rs\n    │   │   │       │   ├── predicate_equal.rs\n    │   │   │       │   ├── predicate_greater.rs\n    │   │   │       │   ├── predicate_greater_equal.rs\n    │   │   │       │   ├── predicate_if_else.rs\n    │   │   │       │   ├── predicate_less.rs\n    │   │   │       │   ├── predicate_less_equal.rs\n    │   │   │       │   ├── predicate_match.rs\n    │   │   │       │   ├── predicate_maybe.rs\n    │   │   │       │   ├── predicate_not.rs\n    │   │   │       │   ├── predicate_not_equal.rs\n    │   │   │       │   ├── predicate_or.rs\n    │   │   │       │   ├── predicate_return.rs\n    │   │   │       │   └── predicate_rewrite.rs\n    │   │   │       └── value/\n    │   │   │           ├── backtick_snippet_literal.rs\n    │   │   │           ├── boolean_literal.rs\n    │   │   │           ├── code_snippet.rs\n    │   │   │           ├── double_literal.rs\n    │   │   │           ├── int_literal.rs\n    │   │   │           ├── mod.rs\n    │   │   │           ├── negative_int_literal.rs\n    │   │   │           ├── raw_backtick_snippet_literal.rs\n    │   │   │           ├── regex_literal.rs\n    │   │   │           ├── snippet_regex_literal.rs\n    │   │   │           ├── string_literal.rs\n    │   │   │           └── undefined_literal.rs\n    │   │   └── tests/\n    │   │       ├── language.rs\n    │   │       ├── quick_test.rs\n    │   │       ├── spec_test.rs\n    │   │       ├── spec_tests.rs\n    │   │       └── specs/\n    │   │           └── grit/\n    │   │               ├── bubble.grit\n    │   │               ├── bubble.grit.snap\n    │   │               ├── file_node.grit\n    │   │               ├── file_node.grit.snap\n    │   │               ├── function_definition.grit\n    │   │               ├── function_definition.grit.snap\n    │   │               ├── list.grit\n    │   │               ├── list.grit.snap\n    │   │               ├── map.grit\n    │   │               ├── map.grit.snap\n    │   │               ├── multifile.grit\n    │   │               ├── multifile.grit.snap\n    │   │               ├── sequential.grit\n    │   │               ├── sequential.grit.snap\n    │   │               ├── version.grit\n    │   │               ├── version.grit.snap\n    │   │               ├── comments/\n    │   │               │   ├── multifile.grit\n    │   │               │   ├── multifile.grit.snap\n    │   │               │   ├── top-comments.grit\n    │   │               │   └── top-comments.grit.snap\n    │   │               ├── marzano/\n    │   │               │   ├── complex.grit\n    │   │               │   ├── complex.grit.snap\n    │   │               │   ├── engine.grit\n    │   │               │   ├── engine.grit.snap\n    │   │               │   ├── go_code.grit\n    │   │               │   ├── go_code.grit.snap\n    │   │               │   ├── go_unknown.grit\n    │   │               │   ├── go_unknown.grit.snap\n    │   │               │   ├── python.grit\n    │   │               │   ├── python.grit.snap\n    │   │               │   ├── react_hooks.grit\n    │   │               │   ├── react_hooks.grit.snap\n    │   │               │   ├── shadow_scope.grit\n    │   │               │   └── shadow_scope.grit.snap\n    │   │               ├── patterns/\n    │   │               │   ├── any.grit\n    │   │               │   ├── any.grit.snap\n    │   │               │   ├── contains.grit\n    │   │               │   ├── contains.grit.snap\n    │   │               │   ├── create_new_files.grit\n    │   │               │   ├── create_new_files.grit.snap\n    │   │               │   ├── definition_body.grit\n    │   │               │   ├── definition_body.grit.snap\n    │   │               │   ├── file_node.grit\n    │   │               │   ├── file_node.grit.snap\n    │   │               │   ├── if_else.grit\n    │   │               │   ├── if_else.grit.snap\n    │   │               │   ├── like.grit\n    │   │               │   ├── like.grit.snap\n    │   │               │   ├── list_pattern.grit\n    │   │               │   ├── list_pattern.grit.snap\n    │   │               │   ├── or.grit\n    │   │               │   ├── or.grit.snap\n    │   │               │   ├── orelse.grit\n    │   │               │   ├── orelse.grit.snap\n    │   │               │   ├── regex.grit\n    │   │               │   ├── regex.grit.snap\n    │   │               │   ├── where_pattern.grit\n    │   │               │   └── where_pattern.grit.snap\n    │   │               └── predicates/\n    │   │                   ├── and.grit\n    │   │                   ├── and.grit.snap\n    │   │                   ├── any.grit\n    │   │                   ├── any.grit.snap\n    │   │                   ├── assignment.grit\n    │   │                   ├── assignment.grit.snap\n    │   │                   ├── or.grit\n    │   │                   └── or.grit.snap\n    │   ├── biome_grit_parser/\n    │   │   ├── Cargo.toml\n    │   │   ├── src/\n    │   │   │   ├── constants.rs\n    │   │   │   ├── lib.rs\n    │   │   │   ├── token_source.rs\n    │   │   │   ├── lexer/\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   └── tests.rs\n    │   │   │   └── parser/\n    │   │   │       ├── definitions.rs\n    │   │   │       ├── literals.rs\n    │   │   │       ├── mod.rs\n    │   │   │       ├── parse_error.rs\n    │   │   │       ├── patterns.rs\n    │   │   │       ├── predicates.rs\n    │   │   │       └── tests.rs\n    │   │   └── tests/\n    │   │       ├── spec_test.rs\n    │   │       ├── spec_tests.rs\n    │   │       └── grit_test_suite/\n    │   │           ├── err/\n    │   │           │   ├── dotdot_clause.grit\n    │   │           │   ├── dotdot_clause.grit.snap\n    │   │           │   ├── dotdotdotdot_clause.grit\n    │   │           │   ├── dotdotdotdot_clause.grit.snap\n    │   │           │   ├── incorrect_engine.grit\n    │   │           │   ├── incorrect_engine.grit.snap\n    │   │           │   ├── incorrect_string_prefix.grit\n    │   │           │   ├── incorrect_string_prefix.grit.snap\n    │   │           │   ├── incorrect_version.grit\n    │   │           │   ├── incorrect_version.grit.snap\n    │   │           │   ├── invalid_language.grit\n    │   │           │   ├── invalid_language.grit.snap\n    │   │           │   ├── invalid_node_argument.grit\n    │   │           │   ├── invalid_node_argument.grit.snap\n    │   │           │   ├── invalid_predicate.grit\n    │   │           │   ├── invalid_predicate.grit.snap\n    │   │           │   ├── invalid_predicate_operator.grit\n    │   │           │   ├── invalid_predicate_operator.grit.snap\n    │   │           │   ├── invalid_predicate_subject.grit\n    │   │           │   ├── invalid_predicate_subject.grit.snap\n    │   │           │   ├── issue_5610.grit\n    │   │           │   ├── issue_5610.grit.snap\n    │   │           │   ├── language_with_invalid_flavor.grit\n    │   │           │   ├── language_with_invalid_flavor.grit.snap\n    │   │           │   ├── malformed_if_predicate.grit\n    │   │           │   ├── malformed_if_predicate.grit.snap\n    │   │           │   ├── map_with_invalid_key.grit\n    │   │           │   ├── map_with_invalid_key.grit.snap\n    │   │           │   ├── missing_version.grit\n    │   │           │   ├── missing_version.grit.snap\n    │   │           │   ├── multiple_patterns.grit\n    │   │           │   ├── multiple_patterns.grit.snap\n    │   │           │   ├── python_language.grit\n    │   │           │   └── python_language.grit.snap\n    │   │           └── ok/\n    │   │               ├── as_modifier.grit\n    │   │               ├── as_modifier.grit.snap\n    │   │               ├── ast_node.grit\n    │   │               ├── ast_node.grit.snap\n    │   │               ├── backtick_snippet.grit\n    │   │               ├── backtick_snippet.grit.snap\n    │   │               ├── bubble_brace.grit\n    │   │               ├── bubble_brace.grit.snap\n    │   │               ├── bubble_clause.grit\n    │   │               ├── bubble_clause.grit.snap\n    │   │               ├── bubble_clause_arguments.grit\n    │   │               ├── bubble_clause_arguments.grit.snap\n    │   │               ├── contains_operator.grit\n    │   │               ├── contains_operator.grit.snap\n    │   │               ├── create_new_files.grit\n    │   │               ├── create_new_files.grit.snap\n    │   │               ├── dotdotdot_clause.grit\n    │   │               ├── dotdotdot_clause.grit.snap\n    │   │               ├── every_clause.grit\n    │   │               ├── every_clause.grit.snap\n    │   │               ├── file_node.grit\n    │   │               ├── file_node.grit.snap\n    │   │               ├── function_definition.grit\n    │   │               ├── function_definition.grit.snap\n    │   │               ├── if_else_pattern.grit\n    │   │               ├── if_else_pattern.grit.snap\n    │   │               ├── js_function.grit\n    │   │               ├── js_function.grit.snap\n    │   │               ├── language.grit\n    │   │               ├── language.grit.snap\n    │   │               ├── language_with_flavor.grit\n    │   │               ├── language_with_flavor.grit.snap\n    │   │               ├── limit_clause.grit\n    │   │               ├── limit_clause.grit.snap\n    │   │               ├── list_pattern.grit\n    │   │               ├── list_pattern.grit.snap\n    │   │               ├── map.grit\n    │   │               ├── map.grit.snap\n    │   │               ├── marzano_pattern.grit\n    │   │               ├── marzano_pattern.grit.snap\n    │   │               ├── multiply.grit\n    │   │               ├── multiply.grit.snap\n    │   │               ├── not_condition.grit\n    │   │               ├── not_condition.grit.snap\n    │   │               ├── or_condition.grit\n    │   │               ├── or_condition.grit.snap\n    │   │               ├── pattern_after.grit\n    │   │               ├── pattern_after.grit.snap\n    │   │               ├── pattern_any.grit\n    │   │               ├── pattern_any.grit.snap\n    │   │               ├── pattern_definition.grit\n    │   │               ├── pattern_definition.grit.snap\n    │   │               ├── pattern_end.grit\n    │   │               ├── pattern_end.grit.snap\n    │   │               ├── pattern_maybe.grit\n    │   │               ├── pattern_maybe.grit.snap\n    │   │               ├── pattern_with_version.grit\n    │   │               ├── pattern_with_version.grit.snap\n    │   │               ├── precedence_rules.grit\n    │   │               ├── precedence_rules.grit.snap\n    │   │               ├── predicate_definition.grit\n    │   │               ├── predicate_definition.grit.snap\n    │   │               ├── private_pattern.grit\n    │   │               ├── private_pattern.grit.snap\n    │   │               ├── regex.grit\n    │   │               ├── regex.grit.snap\n    │   │               ├── rewrite.grit\n    │   │               ├── rewrite.grit.snap\n    │   │               ├── rewrite_in_where.grit\n    │   │               ├── rewrite_in_where.grit.snap\n    │   │               ├── sequential.grit\n    │   │               ├── sequential.grit.snap\n    │   │               ├── until_modifier.grit\n    │   │               ├── until_modifier.grit.snap\n    │   │               ├── within_clause.grit\n    │   │               └── within_clause.grit.snap\n    │   ├── biome_grit_patterns/\n    │   │   ├── Cargo.toml\n    │   │   ├── src/\n    │   │   │   ├── diagnostics.rs\n    │   │   │   ├── errors.rs\n    │   │   │   ├── grit_analysis_ext.rs\n    │   │   │   ├── grit_binding.rs\n    │   │   │   ├── grit_built_in_functions.rs\n    │   │   │   ├── grit_code_snippet.rs\n    │   │   │   ├── grit_context.rs\n    │   │   │   ├── grit_css_parser.rs\n    │   │   │   ├── grit_definitions.rs\n    │   │   │   ├── grit_file.rs\n    │   │   │   ├── grit_js_parser.rs\n    │   │   │   ├── grit_node.rs\n    │   │   │   ├── grit_node_patterns.rs\n    │   │   │   ├── grit_query.rs\n    │   │   │   ├── grit_resolved_pattern.rs\n    │   │   │   ├── grit_target_language.rs\n    │   │   │   ├── grit_target_node.rs\n    │   │   │   ├── grit_tree.rs\n    │   │   │   ├── lib.rs\n    │   │   │   ├── parse.rs\n    │   │   │   ├── pattern_compiler.rs\n    │   │   │   ├── source_location_ext.rs\n    │   │   │   ├── util.rs\n    │   │   │   ├── variables.rs\n    │   │   │   ├── grit_target_language/\n    │   │   │   │   ├── css_target_language.rs\n    │   │   │   │   ├── js_target_language.rs\n    │   │   │   │   ├── css_target_language/\n    │   │   │   │   │   └── constants.rs\n    │   │   │   │   └── js_target_language/\n    │   │   │   │       └── constants.rs\n    │   │   │   └── pattern_compiler/\n    │   │   │       ├── accumulate_compiler.rs\n    │   │   │       ├── add_compiler.rs\n    │   │   │       ├── after_compiler.rs\n    │   │   │       ├── and_compiler.rs\n    │   │   │       ├── any_compiler.rs\n    │   │   │       ├── as_compiler.rs\n    │   │   │       ├── assignment_compiler.rs\n    │   │   │       ├── auto_wrap.rs\n    │   │   │       ├── before_compiler.rs\n    │   │   │       ├── bubble_compiler.rs\n    │   │   │       ├── call_compiler.rs\n    │   │   │       ├── compilation_context.rs\n    │   │   │       ├── container_compiler.rs\n    │   │   │       ├── contains_compiler.rs\n    │   │   │       ├── divide_compiler.rs\n    │   │   │       ├── equal_compiler.rs\n    │   │   │       ├── every_compiler.rs\n    │   │   │       ├── function_definition_compiler.rs\n    │   │   │       ├── if_compiler.rs\n    │   │   │       ├── includes_compiler.rs\n    │   │   │       ├── like_compiler.rs\n    │   │   │       ├── limit_compiler.rs\n    │   │   │       ├── list_compiler.rs\n    │   │   │       ├── list_index_compiler.rs\n    │   │   │       ├── literal_compiler.rs\n    │   │   │       ├── map_accessor_compiler.rs\n    │   │   │       ├── map_compiler.rs\n    │   │   │       ├── match_compiler.rs\n    │   │   │       ├── maybe_compiler.rs\n    │   │   │       ├── modulo_compiler.rs\n    │   │   │       ├── multiply_compiler.rs\n    │   │   │       ├── node_like_compiler.rs\n    │   │   │       ├── not_compiler.rs\n    │   │   │       ├── or_compiler.rs\n    │   │   │       ├── pattern_definition_compiler.rs\n    │   │   │       ├── predicate_call_compiler.rs\n    │   │   │       ├── predicate_compiler.rs\n    │   │   │       ├── predicate_definition_compiler.rs\n    │   │   │       ├── predicate_return_compiler.rs\n    │   │   │       ├── regex_compiler.rs\n    │   │   │       ├── rewrite_compiler.rs\n    │   │   │       ├── sequential_compiler.rs\n    │   │   │       ├── snippet_compiler.rs\n    │   │   │       ├── some_compiler.rs\n    │   │   │       ├── step_compiler.rs\n    │   │   │       ├── subtract_compiler.rs\n    │   │   │       ├── variable_compiler.rs\n    │   │   │       ├── where_compiler.rs\n    │   │   │       └── within_compiler.rs\n    │   │   └── tests/\n    │   │       ├── quick_test.rs\n    │   │       ├── spec_tests.rs\n    │   │       └── specs/\n    │   │           ├── css/\n    │   │           │   ├── colors.css\n    │   │           │   ├── colors.grit\n    │   │           │   └── colors.snap\n    │   │           ├── error/\n    │   │           │   ├── missingQuote.grit\n    │   │           │   ├── missingQuote.snap\n    │   │           │   └── missingQuote.ts\n    │   │           ├── ts/\n    │   │           │   ├── arrayType.grit\n    │   │           │   ├── arrayType.snap\n    │   │           │   ├── arrayType.ts\n    │   │           │   ├── asyncFunctionDoesntMatchNonAsync.grit\n    │   │           │   ├── asyncFunctionDoesntMatchNonAsync.snap\n    │   │           │   ├── asyncFunctionDoesntMatchNonAsync.ts\n    │   │           │   ├── bareImport.grit\n    │   │           │   ├── bareImport.snap\n    │   │           │   ├── bareImport.ts\n    │   │           │   ├── capitalize.grit\n    │   │           │   ├── capitalize.snap\n    │   │           │   ├── capitalize.ts\n    │   │           │   ├── containsSnippet.grit\n    │   │           │   ├── containsSnippet.snap\n    │   │           │   ├── containsSnippet.ts\n    │   │           │   ├── duplicateVariable.grit\n    │   │           │   ├── duplicateVariable.snap\n    │   │           │   ├── duplicateVariable.ts\n    │   │           │   ├── functionMatchesAsync.grit\n    │   │           │   ├── functionMatchesAsync.snap\n    │   │           │   ├── functionMatchesAsync.ts\n    │   │           │   ├── functionToArrow.grit\n    │   │           │   ├── functionToArrow.snap\n    │   │           │   ├── functionToArrow.ts\n    │   │           │   ├── identifier.grit\n    │   │           │   ├── identifier.snap\n    │   │           │   ├── identifier.ts\n    │   │           │   ├── import_patterns.grit\n    │   │           │   ├── import_patterns.snap\n    │   │           │   ├── import_patterns.ts\n    │   │           │   ├── invalidSnippet.grit\n    │   │           │   ├── invalidSnippet.snap\n    │   │           │   ├── invalidSnippet.ts\n    │   │           │   ├── log.grit\n    │   │           │   ├── log.snap\n    │   │           │   ├── log.ts\n    │   │           │   ├── match.grit\n    │   │           │   ├── match.snap\n    │   │           │   ├── match.ts\n    │   │           │   ├── objectLiteral.grit\n    │   │           │   ├── objectLiteral.snap\n    │   │           │   ├── objectLiteral.ts\n    │   │           │   ├── patternDefinition.grit\n    │   │           │   ├── patternDefinition.snap\n    │   │           │   ├── patternDefinition.ts\n    │   │           │   ├── rawSnippet.grit\n    │   │           │   ├── rawSnippet.snap\n    │   │           │   ├── rawSnippet.ts\n    │   │           │   ├── regex.grit\n    │   │           │   ├── regex.snap\n    │   │           │   ├── regex.ts\n    │   │           │   ├── strings.grit\n    │   │           │   ├── strings.snap\n    │   │           │   ├── strings.ts\n    │   │           │   ├── typeAlias.grit\n    │   │           │   ├── typeAlias.snap\n    │   │           │   ├── typeAlias.ts\n    │   │           │   ├── whereClause.grit\n    │   │           │   ├── whereClause.snap\n    │   │           │   ├── whereClause.ts\n    │   │           │   ├── withinUntilClause.grit\n    │   │           │   ├── withinUntilClause.snap\n    │   │           │   └── withinUntilClause.ts\n    │   │           └── tsx/\n    │   │               ├── jsx.grit\n    │   │               ├── jsx.snap\n    │   │               └── jsx.tsx\n    │   ├── biome_grit_syntax/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── file_source.rs\n    │   │       ├── generated.rs\n    │   │       ├── lib.rs\n    │   │       ├── syntax_ext.rs\n    │   │       ├── syntax_node.rs\n    │   │       └── generated/\n    │   │           ├── kind.rs\n    │   │           ├── macros.rs\n    │   │           ├── nodes.rs\n    │   │           └── nodes_mut.rs\n    │   ├── biome_html_factory/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── generated.rs\n    │   │       ├── lib.rs\n    │   │       ├── make.rs\n    │   │       └── generated/\n    │   │           ├── node_factory.rs\n    │   │           └── syntax_factory.rs\n    │   ├── biome_html_formatter/\n    │   │   ├── Cargo.toml\n    │   │   ├── benches/\n    │   │   │   ├── html_formatter.rs\n    │   │   │   └── libs-html.txt\n    │   │   ├── src/\n    │   │   │   ├── comments.rs\n    │   │   │   ├── context.rs\n    │   │   │   ├── cst.rs\n    │   │   │   ├── generated.rs\n    │   │   │   ├── lib.rs\n    │   │   │   ├── prelude.rs\n    │   │   │   ├── trivia.rs\n    │   │   │   ├── verbatim.rs\n    │   │   │   ├── astro/\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   ├── any/\n    │   │   │   │   │   ├── frontmatter_element.rs\n    │   │   │   │   │   └── mod.rs\n    │   │   │   │   ├── auxiliary/\n    │   │   │   │   │   ├── expression.rs\n    │   │   │   │   │   ├── frontmatter_element.rs\n    │   │   │   │   │   └── mod.rs\n    │   │   │   │   └── bogus/\n    │   │   │   │       ├── bogus_frontmatter.rs\n    │   │   │   │       └── mod.rs\n    │   │   │   ├── html/\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   ├── any/\n    │   │   │   │   │   ├── attribute.rs\n    │   │   │   │   │   ├── attribute_initializer.rs\n    │   │   │   │   │   ├── content.rs\n    │   │   │   │   │   ├── element.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   └── text_expression.rs\n    │   │   │   │   ├── auxiliary/\n    │   │   │   │   │   ├── attribute.rs\n    │   │   │   │   │   ├── attribute_initializer_clause.rs\n    │   │   │   │   │   ├── attribute_name.rs\n    │   │   │   │   │   ├── cdata_section.rs\n    │   │   │   │   │   ├── closing_element.rs\n    │   │   │   │   │   ├── content.rs\n    │   │   │   │   │   ├── directive.rs\n    │   │   │   │   │   ├── double_text_expression.rs\n    │   │   │   │   │   ├── element.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── opening_element.rs\n    │   │   │   │   │   ├── root.rs\n    │   │   │   │   │   ├── self_closing_element.rs\n    │   │   │   │   │   ├── single_text_expression.rs\n    │   │   │   │   │   ├── string.rs\n    │   │   │   │   │   ├── tag_name.rs\n    │   │   │   │   │   └── text_expression.rs\n    │   │   │   │   ├── bogus/\n    │   │   │   │   │   ├── bogus.rs\n    │   │   │   │   │   ├── bogus_attribute.rs\n    │   │   │   │   │   ├── bogus_element.rs\n    │   │   │   │   │   ├── bogus_text_expression.rs\n    │   │   │   │   │   └── mod.rs\n    │   │   │   │   └── lists/\n    │   │   │   │       ├── attribute_list.rs\n    │   │   │   │       ├── element_list.rs\n    │   │   │   │       └── mod.rs\n    │   │   │   ├── svelte/\n    │   │   │   │   └── auxiliary/\n    │   │   │   │       └── text_expression.rs\n    │   │   │   └── utils/\n    │   │   │       ├── children.rs\n    │   │   │       ├── formatters.rs\n    │   │   │       ├── metadata.rs\n    │   │   │       └── mod.rs\n    │   │   └── tests/\n    │   │       ├── language.rs\n    │   │       ├── prettier_tests.rs\n    │   │       ├── quick_test.rs\n    │   │       ├── spec_test.rs\n    │   │       ├── spec_tests.rs\n    │   │       └── specs/\n    │   │           ├── html/\n    │   │           │   ├── content-breaks-when-attr-breaks.html\n    │   │           │   ├── content-breaks-when-attr-breaks.html.snap\n    │   │           │   ├── frontmatter.html\n    │   │           │   ├── frontmatter.html.snap\n    │   │           │   ├── long-content.html\n    │   │           │   ├── long-content.html.snap\n    │   │           │   ├── long-inline-elements.html\n    │   │           │   ├── long-inline-elements.html.snap\n    │   │           │   ├── many-children.html\n    │   │           │   ├── many-children.html.snap\n    │   │           │   ├── self-closing.html\n    │   │           │   ├── self-closing.html.snap\n    │   │           │   ├── attributes/\n    │   │           │   │   ├── break.html\n    │   │           │   │   ├── break.html.snap\n    │   │           │   │   ├── no-break.html\n    │   │           │   │   ├── no-break.html.snap\n    │   │           │   │   ├── normalize-attr-casing.html\n    │   │           │   │   ├── normalize-attr-casing.html.snap\n    │   │           │   │   ├── self-closing.html\n    │   │           │   │   ├── self-closing.html.snap\n    │   │           │   │   ├── single-quotes.html\n    │   │           │   │   ├── single-quotes.html.snap\n    │   │           │   │   └── multiline/\n    │   │           │   │       ├── break.html\n    │   │           │   │       ├── break.html.snap\n    │   │           │   │       ├── no-break.html\n    │   │           │   │       ├── no-break.html.snap\n    │   │           │   │       └── options.json\n    │   │           │   ├── comments/\n    │   │           │   │   ├── after-text-inside-div.html\n    │   │           │   │   ├── after-text-inside-div.html.snap\n    │   │           │   │   ├── after-text.html\n    │   │           │   │   ├── after-text.html.snap\n    │   │           │   │   ├── before-text-2.html\n    │   │           │   │   ├── before-text-2.html.snap\n    │   │           │   │   ├── before-text-inside-div.html\n    │   │           │   │   ├── before-text-inside-div.html.snap\n    │   │           │   │   ├── before-text.html\n    │   │           │   │   ├── before-text.html.snap\n    │   │           │   │   ├── inline-with-block-element.html\n    │   │           │   │   ├── inline-with-block-element.html.snap\n    │   │           │   │   ├── inline.html\n    │   │           │   │   ├── inline.html.snap\n    │   │           │   │   ├── inside-text.html\n    │   │           │   │   └── inside-text.html.snap\n    │   │           │   ├── directive/\n    │   │           │   │   ├── lowercase.html\n    │   │           │   │   ├── lowercase.html.snap\n    │   │           │   │   ├── uppercase.html\n    │   │           │   │   ├── uppercase.html.snap\n    │   │           │   │   ├── uppercase2.html\n    │   │           │   │   └── uppercase2.html.snap\n    │   │           │   ├── elements/\n    │   │           │   │   ├── empty-extra-lines.html\n    │   │           │   │   ├── empty-extra-lines.html.snap\n    │   │           │   │   ├── normalize-tag-casing.html\n    │   │           │   │   ├── normalize-tag-casing.html.snap\n    │   │           │   │   ├── pre-with-brackets.html\n    │   │           │   │   ├── pre-with-brackets.html.snap\n    │   │           │   │   ├── pre-with-braille.html\n    │   │           │   │   ├── pre-with-braille.html.snap\n    │   │           │   │   ├── pre.html\n    │   │           │   │   ├── pre.html.snap\n    │   │           │   │   ├── bracket-same-line/\n    │   │           │   │   │   ├── element.html\n    │   │           │   │   │   ├── element.html.snap\n    │   │           │   │   │   ├── options.json\n    │   │           │   │   │   ├── self-closing.html\n    │   │           │   │   │   └── self-closing.html.snap\n    │   │           │   │   ├── inline/\n    │   │           │   │   │   ├── mixed-block-inline.html\n    │   │           │   │   │   ├── mixed-block-inline.html.snap\n    │   │           │   │   │   ├── tags-dont-hug-content-2.html\n    │   │           │   │   │   ├── tags-dont-hug-content-2.html.snap\n    │   │           │   │   │   ├── tags-dont-hug-content.html\n    │   │           │   │   │   ├── tags-dont-hug-content.html.snap\n    │   │           │   │   │   ├── tags-hug-content-longer-w-attr.html\n    │   │           │   │   │   ├── tags-hug-content-longer-w-attr.html.snap\n    │   │           │   │   │   ├── tags-hug-content-w-attr.html\n    │   │           │   │   │   ├── tags-hug-content-w-attr.html.snap\n    │   │           │   │   │   ├── tags-hug-content.html\n    │   │           │   │   │   └── tags-hug-content.html.snap\n    │   │           │   │   ├── spacing/\n    │   │           │   │   │   ├── case0.html\n    │   │           │   │   │   ├── case0.html.snap\n    │   │           │   │   │   ├── case1.html\n    │   │           │   │   │   ├── case1.html.snap\n    │   │           │   │   │   ├── case2.html\n    │   │           │   │   │   ├── case2.html.snap\n    │   │           │   │   │   ├── case3.html\n    │   │           │   │   │   ├── case3.html.snap\n    │   │           │   │   │   ├── case4.html\n    │   │           │   │   │   └── case4.html.snap\n    │   │           │   │   └── whitespace/\n    │   │           │   │       └── ignore/\n    │   │           │   │           ├── long-content.html\n    │   │           │   │           ├── long-content.html.snap\n    │   │           │   │           └── options.json\n    │   │           │   ├── embedded/\n    │   │           │   │   └── strict-whitespace-sensitivity/\n    │   │           │   │       ├── options.json\n    │   │           │   │       ├── sensitive-style.html\n    │   │           │   │       └── sensitive-style.html.snap\n    │   │           │   ├── self-closing/\n    │   │           │   │   ├── always.html\n    │   │           │   │   ├── always.html.snap\n    │   │           │   │   ├── never.html\n    │   │           │   │   ├── never.html.snap\n    │   │           │   │   └── options.json\n    │   │           │   ├── suppressions/\n    │   │           │   │   ├── basic-suppression-2.html\n    │   │           │   │   ├── basic-suppression-2.html.snap\n    │   │           │   │   ├── basic-suppression.html\n    │   │           │   │   ├── basic-suppression.html.snap\n    │   │           │   │   ├── inline-content.html\n    │   │           │   │   ├── inline-content.html.snap\n    │   │           │   │   ├── inline-elements.html\n    │   │           │   │   ├── inline-elements.html.snap\n    │   │           │   │   ├── suppress-inside-element.html\n    │   │           │   │   └── suppress-inside-element.html.snap\n    │   │           │   └── text_expressions/\n    │   │           │       ├── expressions.vue\n    │   │           │       └── expressions.vue.snap\n    │   │           └── prettier/\n    │   │               ├── prepare_tests.js\n    │   │               └── html/\n    │   │                   ├── attributes/\n    │   │                   │   ├── attributes.html\n    │   │                   │   ├── attributes.html.prettier-snap\n    │   │                   │   ├── attributes.html.snap\n    │   │                   │   ├── boolean.html\n    │   │                   │   ├── boolean.html.prettier-snap\n    │   │                   │   ├── case-sensitive.html\n    │   │                   │   ├── case-sensitive.html.prettier-snap\n    │   │                   │   ├── class-bem1.html\n    │   │                   │   ├── class-bem1.html.prettier-snap\n    │   │                   │   ├── class-bem1.html.snap\n    │   │                   │   ├── class-bem2.html\n    │   │                   │   ├── class-bem2.html.prettier-snap\n    │   │                   │   ├── class-colon.html\n    │   │                   │   ├── class-colon.html.prettier-snap\n    │   │                   │   ├── class-leading-dashes.html\n    │   │                   │   ├── class-leading-dashes.html.prettier-snap\n    │   │                   │   ├── class-many-short-names.html\n    │   │                   │   ├── class-many-short-names.html.prettier-snap\n    │   │                   │   ├── class-names.html\n    │   │                   │   ├── class-names.html.prettier-snap\n    │   │                   │   ├── class-names.html.snap\n    │   │                   │   ├── class-print-width-edge.html\n    │   │                   │   ├── class-print-width-edge.html.prettier-snap\n    │   │                   │   ├── dobule-quotes.html\n    │   │                   │   ├── dobule-quotes.html.prettier-snap\n    │   │                   │   ├── duplicate.html\n    │   │                   │   ├── duplicate.html.prettier-snap\n    │   │                   │   ├── single-quotes.html\n    │   │                   │   ├── single-quotes.html.prettier-snap\n    │   │                   │   ├── smart-quotes.html\n    │   │                   │   ├── smart-quotes.html.prettier-snap\n    │   │                   │   ├── smart-quotes.html.snap\n    │   │                   │   ├── srcset.html\n    │   │                   │   ├── srcset.html.prettier-snap\n    │   │                   │   ├── srcset.html.snap\n    │   │                   │   ├── style.html\n    │   │                   │   ├── style.html.prettier-snap\n    │   │                   │   ├── style.html.snap\n    │   │                   │   ├── without-quotes.html\n    │   │                   │   └── without-quotes.html.prettier-snap\n    │   │                   ├── aurelia/\n    │   │                   │   ├── basic.html\n    │   │                   │   └── basic.html.prettier-snap\n    │   │                   ├── basics/\n    │   │                   │   ├── comment.html\n    │   │                   │   ├── comment.html.prettier-snap\n    │   │                   │   ├── comment.html.snap\n    │   │                   │   ├── empty-doc.html\n    │   │                   │   ├── empty-doc.html.prettier-snap\n    │   │                   │   ├── empty.html\n    │   │                   │   ├── empty.html.prettier-snap\n    │   │                   │   ├── form.html\n    │   │                   │   ├── form.html.prettier-snap\n    │   │                   │   ├── hello-world.html\n    │   │                   │   ├── hello-world.html.prettier-snap\n    │   │                   │   ├── hello-world.html.snap\n    │   │                   │   ├── html-comments.html\n    │   │                   │   ├── html-comments.html.prettier-snap\n    │   │                   │   ├── html5-boilerplate.html\n    │   │                   │   ├── html5-boilerplate.html.prettier-snap\n    │   │                   │   ├── html5-boilerplate.html.snap\n    │   │                   │   ├── issue-9368-2.html\n    │   │                   │   ├── issue-9368-2.html.prettier-snap\n    │   │                   │   ├── issue-9368-3.html\n    │   │                   │   ├── issue-9368-3.html.prettier-snap\n    │   │                   │   ├── issue-9368.html\n    │   │                   │   ├── issue-9368.html.prettier-snap\n    │   │                   │   ├── more-html.html\n    │   │                   │   ├── more-html.html.prettier-snap\n    │   │                   │   ├── void-elements-2.html\n    │   │                   │   ├── void-elements-2.html.prettier-snap\n    │   │                   │   ├── void-elements-2.html.snap\n    │   │                   │   ├── void-elements.html\n    │   │                   │   └── void-elements.html.prettier-snap\n    │   │                   ├── bracket-same-line/\n    │   │                   │   ├── block.html\n    │   │                   │   ├── block.html.prettier-snap\n    │   │                   │   ├── embed.html\n    │   │                   │   ├── embed.html.prettier-snap\n    │   │                   │   ├── embed.html.snap\n    │   │                   │   ├── inline.html\n    │   │                   │   ├── inline.html.prettier-snap\n    │   │                   │   ├── inline.html.snap\n    │   │                   │   ├── void-elements.html\n    │   │                   │   ├── void-elements.html.prettier-snap\n    │   │                   │   └── void-elements.html.snap\n    │   │                   ├── case/\n    │   │                   │   ├── case.html\n    │   │                   │   ├── case.html.prettier-snap\n    │   │                   │   └── case.html.snap\n    │   │                   ├── cdata/\n    │   │                   │   ├── example.html\n    │   │                   │   ├── example.html.prettier-snap\n    │   │                   │   └── example.html.snap\n    │   │                   ├── comments/\n    │   │                   │   ├── before-text.html\n    │   │                   │   ├── before-text.html.prettier-snap\n    │   │                   │   ├── bogus.html\n    │   │                   │   ├── bogus.html.prettier-snap\n    │   │                   │   ├── bogus.html.snap\n    │   │                   │   ├── conditional.html\n    │   │                   │   ├── conditional.html.prettier-snap\n    │   │                   │   ├── conditional.html.snap\n    │   │                   │   ├── for_debugging.html\n    │   │                   │   ├── for_debugging.html.prettier-snap\n    │   │                   │   ├── for_debugging.html.snap\n    │   │                   │   ├── hidden.html\n    │   │                   │   ├── hidden.html.prettier-snap\n    │   │                   │   ├── hidden.html.snap\n    │   │                   │   ├── surrounding-empty-line.html.ignored\n    │   │                   │   ├── surrounding-empty-line.html.prettier-snap\n    │   │                   │   └── surrounding-empty-line.html.snap\n    │   │                   ├── css/\n    │   │                   │   ├── empty.html\n    │   │                   │   ├── empty.html.prettier-snap\n    │   │                   │   ├── less.html\n    │   │                   │   ├── less.html.prettier-snap\n    │   │                   │   ├── less.html.snap\n    │   │                   │   ├── postcss.html\n    │   │                   │   ├── postcss.html.prettier-snap\n    │   │                   │   ├── postcss.html.snap\n    │   │                   │   ├── scss.html\n    │   │                   │   ├── scss.html.prettier-snap\n    │   │                   │   ├── scss.html.snap\n    │   │                   │   ├── simple.html\n    │   │                   │   ├── simple.html.prettier-snap\n    │   │                   │   ├── simple.html.snap\n    │   │                   │   ├── single-style.html\n    │   │                   │   ├── single-style.html.prettier-snap\n    │   │                   │   └── single-style.html.snap\n    │   │                   ├── doctype_declarations/\n    │   │                   │   ├── html4.01_frameset.html\n    │   │                   │   ├── html4.01_frameset.html.prettier-snap\n    │   │                   │   ├── html4.01_strict.html\n    │   │                   │   ├── html4.01_strict.html.prettier-snap\n    │   │                   │   ├── html4.01_transitional.html\n    │   │                   │   ├── html4.01_transitional.html.prettier-snap\n    │   │                   │   ├── html5.html\n    │   │                   │   ├── html5.html.prettier-snap\n    │   │                   │   ├── html5.html.snap\n    │   │                   │   ├── ibm_system.html\n    │   │                   │   ├── ibm_system.html.prettier-snap\n    │   │                   │   ├── legacy_string.html\n    │   │                   │   ├── legacy_string.html.prettier-snap\n    │   │                   │   ├── xhtml1.0_frameset.html\n    │   │                   │   ├── xhtml1.0_frameset.html.prettier-snap\n    │   │                   │   ├── xhtml1.0_strict.html\n    │   │                   │   ├── xhtml1.0_strict.html.prettier-snap\n    │   │                   │   ├── xhtml1.0_transitional.html\n    │   │                   │   ├── xhtml1.0_transitional.html.prettier-snap\n    │   │                   │   ├── xhtml1.1.html\n    │   │                   │   ├── xhtml1.1.html.prettier-snap\n    │   │                   │   └── xhtml1.1.html.snap\n    │   │                   ├── front-matter/\n    │   │                   │   ├── custom-parser.html\n    │   │                   │   ├── custom-parser.html.prettier-snap\n    │   │                   │   ├── custom-parser.html.snap\n    │   │                   │   ├── empty.html\n    │   │                   │   ├── empty.html.prettier-snap\n    │   │                   │   ├── empty.html.snap\n    │   │                   │   ├── empty2.html\n    │   │                   │   ├── empty2.html.prettier-snap\n    │   │                   │   ├── empty2.html.snap\n    │   │                   │   ├── issue-9042-no-empty-line.html\n    │   │                   │   ├── issue-9042-no-empty-line.html.prettier-snap\n    │   │                   │   ├── issue-9042-no-empty-line.html.snap\n    │   │                   │   ├── issue-9042.html\n    │   │                   │   ├── issue-9042.html.prettier-snap\n    │   │                   │   └── issue-9042.html.snap\n    │   │                   ├── handlebars-venerable/\n    │   │                   │   ├── template.html\n    │   │                   │   ├── template.html.prettier-snap\n    │   │                   │   └── template.html.snap\n    │   │                   ├── interpolation/\n    │   │                   │   ├── example.html\n    │   │                   │   ├── example.html.prettier-snap\n    │   │                   │   └── example.html.snap\n    │   │                   ├── js/\n    │   │                   │   ├── empty.html\n    │   │                   │   ├── empty.html.prettier-snap\n    │   │                   │   ├── js.html\n    │   │                   │   ├── js.html.prettier-snap\n    │   │                   │   ├── js.html.snap\n    │   │                   │   ├── simple.html\n    │   │                   │   ├── simple.html.prettier-snap\n    │   │                   │   ├── simple.html.snap\n    │   │                   │   ├── single-script.html\n    │   │                   │   ├── single-script.html.prettier-snap\n    │   │                   │   ├── single-script.html.snap\n    │   │                   │   ├── something-else.html\n    │   │                   │   ├── something-else.html.prettier-snap\n    │   │                   │   ├── something-else.html.snap\n    │   │                   │   ├── template-literal.html\n    │   │                   │   ├── template-literal.html.prettier-snap\n    │   │                   │   ├── template-literal.html.snap\n    │   │                   │   ├── typescript.html\n    │   │                   │   ├── typescript.html.prettier-snap\n    │   │                   │   └── typescript.html.snap\n    │   │                   ├── magic_comments/\n    │   │                   │   ├── display.html\n    │   │                   │   ├── display.html.prettier-snap\n    │   │                   │   └── display.html.snap\n    │   │                   ├── multiparser/\n    │   │                   │   ├── css/\n    │   │                   │   │   ├── html-with-css-style.html\n    │   │                   │   │   ├── html-with-css-style.html.prettier-snap\n    │   │                   │   │   └── html-with-css-style.html.snap\n    │   │                   │   ├── js/\n    │   │                   │   │   ├── html-with-js-script.html\n    │   │                   │   │   ├── html-with-js-script.html.prettier-snap\n    │   │                   │   │   ├── html-with-js-script.html.snap\n    │   │                   │   │   ├── script-tag-escaping.html\n    │   │                   │   │   ├── script-tag-escaping.html.prettier-snap\n    │   │                   │   │   └── script-tag-escaping.html.snap\n    │   │                   │   ├── markdown/\n    │   │                   │   │   ├── html-with-markdown-script.html\n    │   │                   │   │   ├── html-with-markdown-script.html.prettier-snap\n    │   │                   │   │   └── html-with-markdown-script.html.snap\n    │   │                   │   ├── ts/\n    │   │                   │   │   ├── html-with-ts-script.html\n    │   │                   │   │   ├── html-with-ts-script.html.prettier-snap\n    │   │                   │   │   └── html-with-ts-script.html.snap\n    │   │                   │   └── unknown/\n    │   │                   │       ├── unknown-lang.html\n    │   │                   │       ├── unknown-lang.html.prettier-snap\n    │   │                   │       └── unknown-lang.html.snap\n    │   │                   ├── next_empty_line/\n    │   │                   │   ├── standalone-end-marker.html\n    │   │                   │   ├── standalone-end-marker.html.prettier-snap\n    │   │                   │   └── standalone-end-marker.html.snap\n    │   │                   ├── pragma/\n    │   │                   │   ├── no-pragma.html\n    │   │                   │   ├── no-pragma.html.prettier-snap\n    │   │                   │   ├── with-pragma-2.html\n    │   │                   │   ├── with-pragma-2.html.prettier-snap\n    │   │                   │   ├── with-pragma.html\n    │   │                   │   └── with-pragma.html.prettier-snap\n    │   │                   ├── prettier_ignore/\n    │   │                   │   ├── cases.html\n    │   │                   │   ├── cases.html.prettier-snap\n    │   │                   │   ├── cases.html.snap\n    │   │                   │   ├── document.html\n    │   │                   │   ├── document.html.prettier-snap\n    │   │                   │   ├── long_lines.html\n    │   │                   │   ├── long_lines.html.prettier-snap\n    │   │                   │   └── long_lines.html.snap\n    │   │                   ├── script/\n    │   │                   │   ├── babel.html\n    │   │                   │   ├── babel.html.prettier-snap\n    │   │                   │   ├── babel.html.snap\n    │   │                   │   ├── legacy.html\n    │   │                   │   ├── legacy.html.prettier-snap\n    │   │                   │   ├── legacy.html.snap\n    │   │                   │   ├── module-attributes.html\n    │   │                   │   ├── module-attributes.html.prettier-snap\n    │   │                   │   ├── module.html\n    │   │                   │   ├── module.html.prettier-snap\n    │   │                   │   ├── module.html.snap\n    │   │                   │   ├── script.html\n    │   │                   │   ├── script.html.prettier-snap\n    │   │                   │   └── script.html.snap\n    │   │                   ├── single-attribute-per-line/\n    │   │                   │   ├── single-attribute-per-line.html\n    │   │                   │   └── single-attribute-per-line.html.prettier-snap\n    │   │                   ├── srcset/\n    │   │                   │   ├── invalid.html\n    │   │                   │   └── invalid.html.prettier-snap\n    │   │                   ├── svg/\n    │   │                   │   ├── svg.html\n    │   │                   │   ├── svg.html.prettier-snap\n    │   │                   │   ├── svg.html.snap\n    │   │                   │   └── embeded/\n    │   │                   │       ├── svg.html\n    │   │                   │       ├── svg.html.prettier-snap\n    │   │                   │       ├── svg.html.snap\n    │   │                   │       └── svg.svg.prettier-snap\n    │   │                   ├── symbol_entities/\n    │   │                   │   ├── symbol_entitites.html\n    │   │                   │   └── symbol_entitites.html.prettier-snap\n    │   │                   ├── tags/\n    │   │                   │   ├── case-sensitive.html\n    │   │                   │   ├── case-sensitive.html.prettier-snap\n    │   │                   │   ├── closing-at-start.html\n    │   │                   │   ├── closing-at-start.html.prettier-snap\n    │   │                   │   ├── custom-element.html\n    │   │                   │   ├── custom-element.html.prettier-snap\n    │   │                   │   ├── marquee.html\n    │   │                   │   ├── marquee.html.prettier-snap\n    │   │                   │   ├── marquee.html.snap\n    │   │                   │   ├── menu.html\n    │   │                   │   ├── menu.html.prettier-snap\n    │   │                   │   ├── menu.html.snap\n    │   │                   │   ├── openging-at-end.html\n    │   │                   │   ├── openging-at-end.html.prettier-snap\n    │   │                   │   ├── openging-at-end.html.snap\n    │   │                   │   ├── option.html\n    │   │                   │   ├── option.html.prettier-snap\n    │   │                   │   ├── pre.html\n    │   │                   │   ├── pre.html.prettier-snap\n    │   │                   │   ├── pre.html.snap\n    │   │                   │   ├── seach.html\n    │   │                   │   ├── seach.html.prettier-snap\n    │   │                   │   ├── seach.html.snap\n    │   │                   │   ├── tags.html\n    │   │                   │   ├── tags.html.prettier-snap\n    │   │                   │   ├── tags.html.snap\n    │   │                   │   ├── tags2.html\n    │   │                   │   ├── tags2.html.prettier-snap\n    │   │                   │   ├── tags2.html.snap\n    │   │                   │   ├── textarea.html\n    │   │                   │   ├── textarea.html.prettier-snap\n    │   │                   │   ├── textarea.html.snap\n    │   │                   │   ├── unsupported.html\n    │   │                   │   └── unsupported.html.prettier-snap\n    │   │                   ├── text/\n    │   │                   │   ├── tag-should-in-fill.html\n    │   │                   │   ├── tag-should-in-fill.html.prettier-snap\n    │   │                   │   └── tag-should-in-fill.html.snap\n    │   │                   ├── whitespace/\n    │   │                   │   ├── break-tags.html\n    │   │                   │   ├── break-tags.html.prettier-snap\n    │   │                   │   ├── break-tags.html.snap\n    │   │                   │   ├── display-inline-block.html\n    │   │                   │   ├── display-inline-block.html.prettier-snap\n    │   │                   │   ├── display-inline-block.html.snap\n    │   │                   │   ├── display-none.html\n    │   │                   │   ├── display-none.html.prettier-snap\n    │   │                   │   ├── display-none.html.snap\n    │   │                   │   ├── fill.html\n    │   │                   │   ├── fill.html.prettier-snap\n    │   │                   │   ├── fill.html.snap\n    │   │                   │   ├── inline-leading-trailing-spaces.html\n    │   │                   │   ├── inline-leading-trailing-spaces.html.prettier-snap\n    │   │                   │   ├── inline-leading-trailing-spaces.html.snap\n    │   │                   │   ├── inline-nodes.html\n    │   │                   │   ├── inline-nodes.html.prettier-snap\n    │   │                   │   ├── inline-nodes.html.snap\n    │   │                   │   ├── nested-inline-without-whitespace.html\n    │   │                   │   ├── nested-inline-without-whitespace.html.prettier-snap\n    │   │                   │   ├── nested-inline-without-whitespace.html.snap\n    │   │                   │   ├── non-breaking-whitespace.html\n    │   │                   │   ├── non-breaking-whitespace.html.prettier-snap\n    │   │                   │   ├── surrounding-linebreak.html\n    │   │                   │   ├── surrounding-linebreak.html.prettier-snap\n    │   │                   │   ├── table.html\n    │   │                   │   ├── table.html.prettier-snap\n    │   │                   │   ├── table.html.snap\n    │   │                   │   ├── template.html\n    │   │                   │   ├── template.html.prettier-snap\n    │   │                   │   └── template.html.snap\n    │   │                   └── yaml/\n    │   │                       ├── invalid.html\n    │   │                       ├── invalid.html.prettier-snap\n    │   │                       ├── invalid.html.snap\n    │   │                       ├── yaml.html\n    │   │                       ├── yaml.html.prettier-snap\n    │   │                       └── yaml.html.snap\n    │   ├── biome_html_parser/\n    │   │   ├── Cargo.toml\n    │   │   ├── benches/\n    │   │   │   ├── html_parser.rs\n    │   │   │   └── libs-html.txt\n    │   │   ├── src/\n    │   │   │   ├── lib.rs\n    │   │   │   ├── parser.rs\n    │   │   │   ├── token_source.rs\n    │   │   │   ├── lexer/\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   └── tests.rs\n    │   │   │   └── syntax/\n    │   │   │       ├── astro.rs\n    │   │   │       ├── mod.rs\n    │   │   │       └── parse_error.rs\n    │   │   └── tests/\n    │   │       ├── spec_test.rs\n    │   │       ├── spec_tests.rs\n    │   │       └── html_specs/\n    │   │           ├── error/\n    │   │           │   ├── frontmatter.html\n    │   │           │   ├── frontmatter.html.snap\n    │   │           │   ├── frontmatter_bogus.html\n    │   │           │   ├── frontmatter_bogus.html.snap\n    │   │           │   ├── interpolation.html\n    │   │           │   ├── interpolation.html.snap\n    │   │           │   ├── missing_fence.astro\n    │   │           │   ├── missing_fence.astro.snap\n    │   │           │   ├── vue_unclosed_expression.vue\n    │   │           │   ├── vue_unclosed_expression.vue.snap\n    │   │           │   ├── astro/\n    │   │           │   │   ├── attribute_expression.astro\n    │   │           │   │   └── attribute_expression.astro.snap\n    │   │           │   ├── attributes/\n    │   │           │   │   ├── invalid-unquoted-value1.html\n    │   │           │   │   ├── invalid-unquoted-value1.html.snap\n    │   │           │   │   ├── invalid-unquoted-value2.html\n    │   │           │   │   ├── invalid-unquoted-value2.html.snap\n    │   │           │   │   ├── missing-initializer.html\n    │   │           │   │   └── missing-initializer.html.snap\n    │   │           │   ├── element/\n    │   │           │   │   ├── br-with-end.html\n    │   │           │   │   ├── br-with-end.html.snap\n    │   │           │   │   ├── child-no-tag-name.html\n    │   │           │   │   ├── child-no-tag-name.html.snap\n    │   │           │   │   ├── missing-close-tag-2.html\n    │   │           │   │   ├── missing-close-tag-2.html.snap\n    │   │           │   │   ├── missing-close-tag.html\n    │   │           │   │   ├── missing-close-tag.html.snap\n    │   │           │   │   ├── missing-element-name.html\n    │   │           │   │   ├── missing-element-name.html.snap\n    │   │           │   │   ├── solo-no-tag-name.html\n    │   │           │   │   └── solo-no-tag-name.html.snap\n    │   │           │   └── template-langs/\n    │   │           │       └── django/\n    │   │           │           ├── issue-5450.html\n    │   │           │           └── issue-5450.html.snap\n    │   │           └── ok/\n    │   │               ├── cdata.html\n    │   │               ├── cdata.html.snap\n    │   │               ├── comment-inline.html\n    │   │               ├── comment-inline.html.snap\n    │   │               ├── comment.html\n    │   │               ├── comment.html.snap\n    │   │               ├── comment2.html\n    │   │               ├── comment2.html.snap\n    │   │               ├── content-blocks.html\n    │   │               ├── content-blocks.html.snap\n    │   │               ├── element.html\n    │   │               ├── element.html.snap\n    │   │               ├── element_list.html\n    │   │               ├── element_list.html.snap\n    │   │               ├── element_list2.html\n    │   │               ├── element_list2.html.snap\n    │   │               ├── hello-world.html\n    │   │               ├── hello-world.html.snap\n    │   │               ├── interpolation.vue\n    │   │               ├── interpolation.vue.snap\n    │   │               ├── multiple_expressions.vue\n    │   │               ├── multiple_expressions.vue.snap\n    │   │               ├── no_fence.astro\n    │   │               ├── no_fence.astro.snap\n    │   │               ├── ok.html\n    │   │               ├── ok.html.snap\n    │   │               ├── ok2.html\n    │   │               ├── ok2.html.snap\n    │   │               ├── quote-in-child.html\n    │   │               ├── quote-in-child.html.snap\n    │   │               ├── special-chars.html\n    │   │               ├── special-chars.html.snap\n    │   │               ├── svelte_expressions.svelte\n    │   │               ├── svelte_expressions.svelte.snap\n    │   │               ├── vue_expressions.vue\n    │   │               ├── vue_expressions.vue.snap\n    │   │               ├── vue_expressions_escaped.vue\n    │   │               ├── vue_expressions_escaped.vue.snap\n    │   │               ├── with_fence.astro\n    │   │               ├── with_fence.astro.snap\n    │   │               ├── astro/\n    │   │               │   ├── attribute_expression.astro\n    │   │               │   └── attribute_expression.astro.snap\n    │   │               ├── attributes/\n    │   │               │   ├── attributes-unquoted.html\n    │   │               │   ├── attributes-unquoted.html.snap\n    │   │               │   ├── attributes.html\n    │   │               │   ├── attributes.html.snap\n    │   │               │   ├── multiline-attribute-value.html\n    │   │               │   ├── multiline-attribute-value.html.snap\n    │   │               │   ├── multiline-attributes.html\n    │   │               │   └── multiline-attributes.html.snap\n    │   │               ├── compat/\n    │   │               │   ├── non-spec-compliant-tag-name.html\n    │   │               │   └── non-spec-compliant-tag-name.html.snap\n    │   │               ├── doctype/\n    │   │               │   ├── basic.html\n    │   │               │   ├── basic.html.snap\n    │   │               │   ├── long-legacy1.html\n    │   │               │   ├── long-legacy1.html.snap\n    │   │               │   ├── long-legacy2.html\n    │   │               │   ├── long-legacy2.html.snap\n    │   │               │   ├── long-legacy3.html\n    │   │               │   ├── long-legacy3.html.snap\n    │   │               │   ├── minimal.html\n    │   │               │   └── minimal.html.snap\n    │   │               ├── embedded-languages/\n    │   │               │   ├── script-basic.html\n    │   │               │   ├── script-basic.html.snap\n    │   │               │   ├── script-empty.html\n    │   │               │   ├── script-empty.html.snap\n    │   │               │   ├── script-in-string.html\n    │   │               │   ├── script-in-string.html.snap\n    │   │               │   ├── script-less-than.html\n    │   │               │   └── script-less-than.html.snap\n    │   │               └── no-end-tags/\n    │   │                   ├── br-in-span.html\n    │   │                   ├── br-in-span.html.snap\n    │   │                   ├── br.html\n    │   │                   ├── br.html.snap\n    │   │                   ├── casing.html\n    │   │                   ├── casing.html.snap\n    │   │                   ├── meta.html\n    │   │                   ├── meta.html.snap\n    │   │                   ├── param.html\n    │   │                   ├── param.html.snap\n    │   │                   ├── wbr.html\n    │   │                   └── wbr.html.snap\n    │   ├── biome_html_syntax/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── element_ext.rs\n    │   │       ├── file_source.rs\n    │   │       ├── generated.rs\n    │   │       ├── lib.rs\n    │   │       ├── syntax_node.rs\n    │   │       └── generated/\n    │   │           ├── kind.rs\n    │   │           ├── macros.rs\n    │   │           ├── nodes.rs\n    │   │           └── nodes_mut.rs\n    │   ├── biome_js_analyze/\n    │   │   ├── Cargo.toml\n    │   │   ├── benches/\n    │   │   │   ├── analyzer-libs-js.txt\n    │   │   │   ├── analyzer-libs-ts.txt\n    │   │   │   └── js_analyzer.rs\n    │   │   ├── src/\n    │   │   │   ├── a11y.rs\n    │   │   │   ├── assist.rs\n    │   │   │   ├── assists.rs\n    │   │   │   ├── ast_utils.rs\n    │   │   │   ├── lib.rs\n    │   │   │   ├── lint.rs\n    │   │   │   ├── nextjs.rs\n    │   │   │   ├── options.rs\n    │   │   │   ├── react.rs\n    │   │   │   ├── registry.rs\n    │   │   │   ├── suppression_action.rs\n    │   │   │   ├── suppressions.tests.rs\n    │   │   │   ├── syntax.rs\n    │   │   │   ├── utils.rs\n    │   │   │   ├── assist/\n    │   │   │   │   ├── source.rs\n    │   │   │   │   └── source/\n    │   │   │   │       ├── organize_imports.rs\n    │   │   │   │       ├── use_sorted_attributes.rs\n    │   │   │   │       ├── use_sorted_keys.rs\n    │   │   │   │       └── organize_imports/\n    │   │   │   │           ├── import_key.rs\n    │   │   │   │           ├── specifiers_attributes.rs\n    │   │   │   │           └── util.rs\n    │   │   │   ├── frameworks/\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   └── vue/\n    │   │   │   │       ├── mod.rs\n    │   │   │   │       ├── vue_call.rs\n    │   │   │   │       └── vue_component.rs\n    │   │   │   ├── globals/\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   ├── javascript/\n    │   │   │   │   │   ├── language.rs\n    │   │   │   │   │   ├── mod.rs\n    │   │   │   │   │   ├── node.rs\n    │   │   │   │   │   └── web.rs\n    │   │   │   │   └── typescript/\n    │   │   │   │       ├── language.rs\n    │   │   │   │       ├── mod.rs\n    │   │   │   │       ├── node.rs\n    │   │   │   │       └── web.rs\n    │   │   │   ├── lint/\n    │   │   │   │   ├── a11y.rs\n    │   │   │   │   ├── complexity.rs\n    │   │   │   │   ├── correctness.rs\n    │   │   │   │   ├── nursery.rs\n    │   │   │   │   ├── performance.rs\n    │   │   │   │   ├── security.rs\n    │   │   │   │   ├── style.rs\n    │   │   │   │   ├── suspicious.rs\n    │   │   │   │   ├── a11y/\n    │   │   │   │   │   ├── no_access_key.rs\n    │   │   │   │   │   ├── no_aria_hidden_on_focusable.rs\n    │   │   │   │   │   ├── no_aria_unsupported_elements.rs\n    │   │   │   │   │   ├── no_autofocus.rs\n    │   │   │   │   │   ├── no_distracting_elements.rs\n    │   │   │   │   │   ├── no_header_scope.rs\n    │   │   │   │   │   ├── no_interactive_element_to_noninteractive_role.rs\n    │   │   │   │   │   ├── no_label_without_control.rs\n    │   │   │   │   │   ├── no_noninteractive_element_interactions.rs\n    │   │   │   │   │   ├── no_noninteractive_element_to_interactive_role.rs\n    │   │   │   │   │   ├── no_noninteractive_tabindex.rs\n    │   │   │   │   │   ├── no_positive_tabindex.rs\n    │   │   │   │   │   ├── no_redundant_alt.rs\n    │   │   │   │   │   ├── no_redundant_roles.rs\n    │   │   │   │   │   ├── no_static_element_interactions.rs\n    │   │   │   │   │   ├── no_svg_without_title.rs\n    │   │   │   │   │   ├── use_alt_text.rs\n    │   │   │   │   │   ├── use_anchor_content.rs\n    │   │   │   │   │   ├── use_aria_activedescendant_with_tabindex.rs\n    │   │   │   │   │   ├── use_aria_props_for_role.rs\n    │   │   │   │   │   ├── use_aria_props_supported_by_role.rs\n    │   │   │   │   │   ├── use_button_type.rs\n    │   │   │   │   │   ├── use_focusable_interactive.rs\n    │   │   │   │   │   ├── use_heading_content.rs\n    │   │   │   │   │   ├── use_html_lang.rs\n    │   │   │   │   │   ├── use_iframe_title.rs\n    │   │   │   │   │   ├── use_key_with_click_events.rs\n    │   │   │   │   │   ├── use_key_with_mouse_events.rs\n    │   │   │   │   │   ├── use_media_caption.rs\n    │   │   │   │   │   ├── use_semantic_elements.rs\n    │   │   │   │   │   ├── use_valid_anchor.rs\n    │   │   │   │   │   ├── use_valid_aria_props.rs\n    │   │   │   │   │   ├── use_valid_aria_role.rs\n    │   │   │   │   │   ├── use_valid_aria_values.rs\n    │   │   │   │   │   ├── use_valid_autocomplete.rs\n    │   │   │   │   │   └── use_valid_lang.rs\n    │   │   │   │   ├── complexity/\n    │   │   │   │   │   ├── no_adjacent_spaces_in_regex.rs\n    │   │   │   │   │   ├── no_arguments.rs\n    │   │   │   │   │   ├── no_banned_types.rs\n    │   │   │   │   │   ├── no_comma_operator.rs\n    │   │   │   │   │   ├── no_empty_type_parameters.rs\n    │   │   │   │   │   ├── no_excessive_cognitive_complexity.rs\n    │   │   │   │   │   ├── no_excessive_lines_per_function.rs\n    │   │   │   │   │   ├── no_excessive_nested_test_suites.rs\n    │   │   │   │   │   ├── no_extra_boolean_cast.rs\n    │   │   │   │   │   ├── no_flat_map_identity.rs\n    │   │   │   │   │   ├── no_for_each.rs\n    │   │   │   │   │   ├── no_implicit_coercions.rs\n    │   │   │   │   │   ├── no_static_only_class.rs\n    │   │   │   │   │   ├── no_this_in_static.rs\n    │   │   │   │   │   ├── no_useless_catch.rs\n    │   │   │   │   │   ├── no_useless_constructor.rs\n    │   │   │   │   │   ├── no_useless_continue.rs\n    │   │   │   │   │   ├── no_useless_empty_export.rs\n    │   │   │   │   │   ├── no_useless_escape_in_regex.rs\n    │   │   │   │   │   ├── no_useless_fragments.rs\n    │   │   │   │   │   ├── no_useless_label.rs\n    │   │   │   │   │   ├── no_useless_lone_block_statements.rs\n    │   │   │   │   │   ├── no_useless_rename.rs\n    │   │   │   │   │   ├── no_useless_string_concat.rs\n    │   │   │   │   │   ├── no_useless_string_raw.rs\n    │   │   │   │   │   ├── no_useless_switch_case.rs\n    │   │   │   │   │   ├── no_useless_ternary.rs\n    │   │   │   │   │   ├── no_useless_this_alias.rs\n    │   │   │   │   │   ├── no_useless_type_constraint.rs\n    │   │   │   │   │   ├── no_useless_undefined_initialization.rs\n    │   │   │   │   │   ├── no_void.rs\n    │   │   │   │   │   ├── use_arrow_function.rs\n    │   │   │   │   │   ├── use_date_now.rs\n    │   │   │   │   │   ├── use_flat_map.rs\n    │   │   │   │   │   ├── use_index_of.rs\n    │   │   │   │   │   ├── use_literal_keys.rs\n    │   │   │   │   │   ├── use_numeric_literals.rs\n    │   │   │   │   │   ├── use_optional_chain.rs\n    │   │   │   │   │   ├── use_regex_literals.rs\n    │   │   │   │   │   ├── use_simple_number_keys.rs\n    │   │   │   │   │   ├── use_simplified_logic_expression.rs\n    │   │   │   │   │   └── use_while.rs\n    │   │   │   │   ├── correctness/\n    │   │   │   │   │   ├── no_children_prop.rs\n    │   │   │   │   │   ├── no_const_assign.rs\n    │   │   │   │   │   ├── no_constant_condition.rs\n    │   │   │   │   │   ├── no_constant_math_min_max_clamp.rs\n    │   │   │   │   │   ├── no_constructor_return.rs\n    │   │   │   │   │   ├── no_empty_character_class_in_regex.rs\n    │   │   │   │   │   ├── no_empty_pattern.rs\n    │   │   │   │   │   ├── no_global_dirname_filename.rs\n    │   │   │   │   │   ├── no_global_object_calls.rs\n    │   │   │   │   │   ├── no_inner_declarations.rs\n    │   │   │   │   │   ├── no_invalid_builtin_instantiation.rs\n    │   │   │   │   │   ├── no_invalid_constructor_super.rs\n    │   │   │   │   │   ├── no_invalid_use_before_declaration.rs\n    │   │   │   │   │   ├── no_nested_component_definitions.rs\n    │   │   │   │   │   ├── no_nodejs_modules.rs\n    │   │   │   │   │   ├── no_nonoctal_decimal_escape.rs\n    │   │   │   │   │   ├── no_precision_loss.rs\n    │   │   │   │   │   ├── no_private_imports.rs\n    │   │   │   │   │   ├── no_process_global.rs\n    │   │   │   │   │   ├── no_react_prop_assignments.rs\n    │   │   │   │   │   ├── no_render_return_value.rs\n    │   │   │   │   │   ├── no_restricted_elements.rs\n    │   │   │   │   │   ├── no_self_assign.rs\n    │   │   │   │   │   ├── no_setter_return.rs\n    │   │   │   │   │   ├── no_solid_destructured_props.rs\n    │   │   │   │   │   ├── no_string_case_mismatch.rs\n    │   │   │   │   │   ├── no_switch_declarations.rs\n    │   │   │   │   │   ├── no_undeclared_dependencies.rs\n    │   │   │   │   │   ├── no_undeclared_variables.rs\n    │   │   │   │   │   ├── no_unreachable.rs\n    │   │   │   │   │   ├── no_unreachable_super.rs\n    │   │   │   │   │   ├── no_unsafe_finally.rs\n    │   │   │   │   │   ├── no_unsafe_optional_chaining.rs\n    │   │   │   │   │   ├── no_unused_function_parameters.rs\n    │   │   │   │   │   ├── no_unused_imports.rs\n    │   │   │   │   │   ├── no_unused_labels.rs\n    │   │   │   │   │   ├── no_unused_private_class_members.rs\n    │   │   │   │   │   ├── no_unused_variables.rs\n    │   │   │   │   │   ├── no_void_elements_with_children.rs\n    │   │   │   │   │   ├── no_void_type_return.rs\n    │   │   │   │   │   ├── use_exhaustive_dependencies.rs\n    │   │   │   │   │   ├── use_hook_at_top_level.rs\n    │   │   │   │   │   ├── use_import_extensions.rs\n    │   │   │   │   │   ├── use_is_nan.rs\n    │   │   │   │   │   ├── use_json_import_attributes.rs\n    │   │   │   │   │   ├── use_jsx_key_in_iterable.rs\n    │   │   │   │   │   ├── use_parse_int_radix.rs\n    │   │   │   │   │   ├── use_single_js_doc_asterisk.rs\n    │   │   │   │   │   ├── use_unique_element_ids.rs\n    │   │   │   │   │   ├── use_valid_for_direction.rs\n    │   │   │   │   │   ├── use_valid_typeof.rs\n    │   │   │   │   │   └── use_yield.rs\n    │   │   │   │   ├── nursery/\n    │   │   │   │   │   ├── no_floating_promises.rs\n    │   │   │   │   │   ├── no_import_cycles.rs\n    │   │   │   │   │   ├── no_misused_promises.rs\n    │   │   │   │   │   ├── no_next_async_client_component.rs\n    │   │   │   │   │   ├── no_non_null_asserted_optional_chain.rs\n    │   │   │   │   │   ├── no_qwik_use_visible_task.rs\n    │   │   │   │   │   ├── no_secrets.rs\n    │   │   │   │   │   ├── no_shadow.rs\n    │   │   │   │   │   ├── no_unnecessary_conditions.rs\n    │   │   │   │   │   ├── no_unresolved_imports.rs\n    │   │   │   │   │   ├── no_useless_undefined.rs\n    │   │   │   │   │   ├── no_vue_data_object_declaration.rs\n    │   │   │   │   │   ├── no_vue_reserved_keys.rs\n    │   │   │   │   │   ├── no_vue_reserved_props.rs\n    │   │   │   │   │   ├── use_anchor_href.rs\n    │   │   │   │   │   ├── use_consistent_type_definitions.rs\n    │   │   │   │   │   ├── use_exhaustive_switch_cases.rs\n    │   │   │   │   │   ├── use_explicit_type.rs\n    │   │   │   │   │   ├── use_image_size.rs\n    │   │   │   │   │   ├── use_max_params.rs\n    │   │   │   │   │   ├── use_qwik_classlist.rs\n    │   │   │   │   │   ├── use_react_function_components.rs\n    │   │   │   │   │   ├── use_sorted_classes.rs\n    │   │   │   │   │   └── use_sorted_classes/\n    │   │   │   │   │       ├── any_class_string_like.rs\n    │   │   │   │   │       ├── class_info.rs\n    │   │   │   │   │       ├── class_lexer.rs\n    │   │   │   │   │       ├── presets.rs\n    │   │   │   │   │       ├── sort.rs\n    │   │   │   │   │       ├── sort_config.rs\n    │   │   │   │   │       └── tailwind_preset.rs\n    │   │   │   │   ├── performance/\n    │   │   │   │   │   ├── no_accumulating_spread.rs\n    │   │   │   │   │   ├── no_await_in_loops.rs\n    │   │   │   │   │   ├── no_barrel_file.rs\n    │   │   │   │   │   ├── no_delete.rs\n    │   │   │   │   │   ├── no_dynamic_namespace_import_access.rs\n    │   │   │   │   │   ├── no_img_element.rs\n    │   │   │   │   │   ├── no_namespace_import.rs\n    │   │   │   │   │   ├── no_re_export_all.rs\n    │   │   │   │   │   ├── no_unwanted_polyfillio.rs\n    │   │   │   │   │   ├── use_google_font_preconnect.rs\n    │   │   │   │   │   ├── use_solid_for_component.rs\n    │   │   │   │   │   └── use_top_level_regex.rs\n    │   │   │   │   ├── security/\n    │   │   │   │   │   ├── no_blank_target.rs\n    │   │   │   │   │   ├── no_dangerously_set_inner_html.rs\n    │   │   │   │   │   ├── no_dangerously_set_inner_html_with_children.rs\n    │   │   │   │   │   └── no_global_eval.rs\n    │   │   │   │   ├── style/\n    │   │   │   │   │   ├── no_common_js.rs\n    │   │   │   │   │   ├── no_default_export.rs\n    │   │   │   │   │   ├── no_done_callback.rs\n    │   │   │   │   │   ├── no_enum.rs\n    │   │   │   │   │   ├── no_exported_imports.rs\n    │   │   │   │   │   ├── no_head_element.rs\n    │   │   │   │   │   ├── no_implicit_boolean.rs\n    │   │   │   │   │   ├── no_inferrable_types.rs\n    │   │   │   │   │   ├── no_magic_numbers.rs\n    │   │   │   │   │   ├── no_namespace.rs\n    │   │   │   │   │   ├── no_negation_else.rs\n    │   │   │   │   │   ├── no_nested_ternary.rs\n    │   │   │   │   │   ├── no_non_null_assertion.rs\n    │   │   │   │   │   ├── no_parameter_assign.rs\n    │   │   │   │   │   ├── no_parameter_properties.rs\n    │   │   │   │   │   ├── no_process_env.rs\n    │   │   │   │   │   ├── no_restricted_globals.rs\n    │   │   │   │   │   ├── no_restricted_imports.rs\n    │   │   │   │   │   ├── no_restricted_types.rs\n    │   │   │   │   │   ├── no_shouty_constants.rs\n    │   │   │   │   │   ├── no_substr.rs\n    │   │   │   │   │   ├── no_unused_template_literal.rs\n    │   │   │   │   │   ├── no_useless_else.rs\n    │   │   │   │   │   ├── no_yoda_expression.rs\n    │   │   │   │   │   ├── use_array_literals.rs\n    │   │   │   │   │   ├── use_as_const_assertion.rs\n    │   │   │   │   │   ├── use_at_index.rs\n    │   │   │   │   │   ├── use_block_statements.rs\n    │   │   │   │   │   ├── use_collapsed_else_if.rs\n    │   │   │   │   │   ├── use_collapsed_if.rs\n    │   │   │   │   │   ├── use_component_export_only_modules.rs\n    │   │   │   │   │   ├── use_consistent_array_type.rs\n    │   │   │   │   │   ├── use_consistent_builtin_instantiation.rs\n    │   │   │   │   │   ├── use_consistent_curly_braces.rs\n    │   │   │   │   │   ├── use_consistent_member_accessibility.rs\n    │   │   │   │   │   ├── use_consistent_object_definitions.rs\n    │   │   │   │   │   ├── use_const.rs\n    │   │   │   │   │   ├── use_default_parameter_last.rs\n    │   │   │   │   │   ├── use_default_switch_clause.rs\n    │   │   │   │   │   ├── use_enum_initializers.rs\n    │   │   │   │   │   ├── use_explicit_length_check.rs\n    │   │   │   │   │   ├── use_exponentiation_operator.rs\n    │   │   │   │   │   ├── use_export_type.rs\n    │   │   │   │   │   ├── use_exports_last.rs\n    │   │   │   │   │   ├── use_filenaming_convention.rs\n    │   │   │   │   │   ├── use_for_of.rs\n    │   │   │   │   │   ├── use_fragment_syntax.rs\n    │   │   │   │   │   ├── use_grouped_accessor_pairs.rs\n    │   │   │   │   │   ├── use_import_type.rs\n    │   │   │   │   │   ├── use_literal_enum_members.rs\n    │   │   │   │   │   ├── use_naming_convention.rs\n    │   │   │   │   │   ├── use_node_assert_strict.rs\n    │   │   │   │   │   ├── use_nodejs_import_protocol.rs\n    │   │   │   │   │   ├── use_number_namespace.rs\n    │   │   │   │   │   ├── use_numeric_separators.rs\n    │   │   │   │   │   ├── use_object_spread.rs\n    │   │   │   │   │   ├── use_readonly_class_properties.rs\n    │   │   │   │   │   ├── use_self_closing_elements.rs\n    │   │   │   │   │   ├── use_shorthand_assign.rs\n    │   │   │   │   │   ├── use_shorthand_function_type.rs\n    │   │   │   │   │   ├── use_single_var_declarator.rs\n    │   │   │   │   │   ├── use_symbol_description.rs\n    │   │   │   │   │   ├── use_template.rs\n    │   │   │   │   │   ├── use_throw_new_error.rs\n    │   │   │   │   │   ├── use_throw_only_error.rs\n    │   │   │   │   │   ├── use_trim_start_end.rs\n    │   │   │   │   │   └── use_unified_type_signatures.rs\n    │   │   │   │   └── suspicious/\n    │   │   │   │       ├── no_alert.rs\n    │   │   │   │       ├── no_approximative_numeric_constant.rs\n    │   │   │   │       ├── no_array_index_key.rs\n    │   │   │   │       ├── no_assign_in_expressions.rs\n    │   │   │   │       ├── no_async_promise_executor.rs\n    │   │   │   │       ├── no_bitwise_operators.rs\n    │   │   │   │       ├── no_catch_assign.rs\n    │   │   │   │       ├── no_class_assign.rs\n    │   │   │   │       ├── no_comment_text.rs\n    │   │   │   │       ├── no_compare_neg_zero.rs\n    │   │   │   │       ├── no_confusing_labels.rs\n    │   │   │   │       ├── no_confusing_void_type.rs\n    │   │   │   │       ├── no_console.rs\n    │   │   │   │       ├── no_const_enum.rs\n    │   │   │   │       ├── no_constant_binary_expressions.rs\n    │   │   │   │       ├── no_control_characters_in_regex.rs\n    │   │   │   │       ├── no_debugger.rs\n    │   │   │   │       ├── no_document_cookie.rs\n    │   │   │   │       ├── no_document_import_in_page.rs\n    │   │   │   │       ├── no_double_equals.rs\n    │   │   │   │       ├── no_duplicate_case.rs\n    │   │   │   │       ├── no_duplicate_class_members.rs\n    │   │   │   │       ├── no_duplicate_else_if.rs\n    │   │   │   │       ├── no_duplicate_jsx_props.rs\n    │   │   │   │       ├── no_duplicate_object_keys.rs\n    │   │   │   │       ├── no_duplicate_parameters.rs\n    │   │   │   │       ├── no_duplicate_test_hooks.rs\n    │   │   │   │       ├── no_empty_block_statements.rs\n    │   │   │   │       ├── no_empty_interface.rs\n    │   │   │   │       ├── no_evolving_types.rs\n    │   │   │   │       ├── no_explicit_any.rs\n    │   │   │   │       ├── no_exports_in_test.rs\n    │   │   │   │       ├── no_extra_non_null_assertion.rs\n    │   │   │   │       ├── no_fallthrough_switch_clause.rs\n    │   │   │   │       ├── no_focused_tests.rs\n    │   │   │   │       ├── no_function_assign.rs\n    │   │   │   │       ├── no_global_assign.rs\n    │   │   │   │       ├── no_global_is_finite.rs\n    │   │   │   │       ├── no_global_is_nan.rs\n    │   │   │   │       ├── no_head_import_in_document.rs\n    │   │   │   │       ├── no_implicit_any_let.rs\n    │   │   │   │       ├── no_import_assign.rs\n    │   │   │   │       ├── no_irregular_whitespace.rs\n    │   │   │   │       ├── no_label_var.rs\n    │   │   │   │       ├── no_misleading_character_class.rs\n    │   │   │   │       ├── no_misleading_instantiator.rs\n    │   │   │   │       ├── no_misplaced_assertion.rs\n    │   │   │   │       ├── no_misrefactored_shorthand_assign.rs\n    │   │   │   │       ├── no_octal_escape.rs\n    │   │   │   │       ├── no_prototype_builtins.rs\n    │   │   │   │       ├── no_react_specific_props.rs\n    │   │   │   │       ├── no_redeclare.rs\n    │   │   │   │       ├── no_redundant_use_strict.rs\n    │   │   │   │       ├── no_self_compare.rs\n    │   │   │   │       ├── no_shadow_restricted_names.rs\n    │   │   │   │       ├── no_skipped_tests.rs\n    │   │   │   │       ├── no_sparse_array.rs\n    │   │   │   │       ├── no_suspicious_semicolon_in_jsx.rs\n    │   │   │   │       ├── no_template_curly_in_string.rs\n    │   │   │   │       ├── no_then_property.rs\n    │   │   │   │       ├── no_ts_ignore.rs\n    │   │   │   │       ├── no_unassigned_variables.rs\n    │   │   │   │       ├── no_unsafe_declaration_merging.rs\n    │   │   │   │       ├── no_unsafe_negation.rs\n    │   │   │   │       ├── no_useless_escape_in_string.rs\n    │   │   │   │       ├── no_useless_regex_backrefs.rs\n    │   │   │   │       ├── no_var.rs\n    │   │   │   │       ├── no_with.rs\n    │   │   │   │       ├── use_adjacent_overload_signatures.rs\n    │   │   │   │       ├── use_await.rs\n    │   │   │   │       ├── use_default_switch_clause_last.rs\n    │   │   │   │       ├── use_error_message.rs\n    │   │   │   │       ├── use_getter_return.rs\n    │   │   │   │       ├── use_google_font_display.rs\n    │   │   │   │       ├── use_guard_for_in.rs\n    │   │   │   │       ├── use_is_array.rs\n    │   │   │   │       ├── use_iterable_callback_return.rs\n    │   │   │   │       ├── use_namespace_keyword.rs\n    │   │   │   │       ├── use_number_to_fixed_digits_argument.rs\n    │   │   │   │       ├── use_static_response_methods.rs\n    │   │   │   │       └── use_strict_mode.rs\n    │   │   │   ├── react/\n    │   │   │   │   ├── components.rs\n    │   │   │   │   └── hooks.rs\n    │   │   │   ├── services/\n    │   │   │   │   ├── aria.rs\n    │   │   │   │   ├── control_flow.rs\n    │   │   │   │   ├── manifest.rs\n    │   │   │   │   ├── mod.rs\n    │   │   │   │   ├── module_graph.rs\n    │   │   │   │   ├── semantic.rs\n    │   │   │   │   ├── typed.rs\n    │   │   │   │   └── control_flow/\n    │   │   │   │       ├── nodes.rs\n    │   │   │   │       ├── visitor.rs\n    │   │   │   │       └── nodes/\n    │   │   │   │           ├── block.rs\n    │   │   │   │           ├── bogus.rs\n    │   │   │   │           ├── break_stmt.rs\n    │   │   │   │           ├── continue_stmt.rs\n    │   │   │   │           ├── do_while.rs\n    │   │   │   │           ├── for_in.rs\n    │   │   │   │           ├── for_of.rs\n    │   │   │   │           ├── for_stmt.rs\n    │   │   │   │           ├── if_stmt.rs\n    │   │   │   │           ├── return_stmt.rs\n    │   │   │   │           ├── statement.rs\n    │   │   │   │           ├── switch_stmt.rs\n    │   │   │   │           ├── throw_stmt.rs\n    │   │   │   │           ├── try_catch.rs\n    │   │   │   │           ├── variable.rs\n    │   │   │   │           └── while_stmt.rs\n    │   │   │   ├── syntax/\n    │   │   │   │   ├── correctness.rs\n    │   │   │   │   └── correctness/\n    │   │   │   │       ├── no_duplicate_private_class_members.rs\n    │   │   │   │       ├── no_initializer_with_definite.rs\n    │   │   │   │       ├── no_super_without_extends.rs\n    │   │   │   │       └── no_type_only_import_attributes.rs\n    │   │   │   └── utils/\n    │   │   │       ├── batch.rs\n    │   │   │       ├── rename.rs\n    │   │   │       ├── tests.rs\n    │   │   │       └── snapshots/\n    │   │   │           ├── cannot_be_renamed.snap\n    │   │   │           └── cannot_find_declaration.snap\n    │   │   └── tests/\n    │   │       ├── quick_test.rs\n    │   │       ├── spec_tests.rs\n    │   │       ├── multiple_rules/\n    │   │       │   ├── suppressions.jsx\n    │   │       │   ├── suppressions.jsx.snap\n    │   │       │   ├── suppressions.ts\n    │   │       │   └── suppressions.ts.snap\n    │   │       ├── plugin/\n    │   │       │   ├── preferObjectSpread.grit\n    │   │       │   ├── preferObjectSpread.grit.snap\n    │   │       │   ├── preferObjectSpread.js\n    │   │       │   ├── preferObjectSpreadSuppression.grit\n    │   │       │   ├── preferObjectSpreadSuppression.grit.snap\n    │   │       │   ├── preferObjectSpreadSuppression.js\n    │   │       │   ├── preferObjectSpreadSuppressionAll.grit\n    │   │       │   ├── preferObjectSpreadSuppressionAll.grit.snap\n    │   │       │   └── preferObjectSpreadSuppressionAll.js\n    │   │       ├── specs/\n    │   │       │   ├── a11y/\n    │   │       │   │   ├── noAccessKey/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noAriaHiddenOnFocusable/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noAriaUnsupportedElements/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noAutofocus/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noDistractingElements/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   └── invalid.jsx.snap\n    │   │       │   │   ├── noHeaderScope/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noInteractiveElementToNoninteractiveRole/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noLabelWithoutControl/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── invalidCustomInputComponents.jsx\n    │   │       │   │   │   ├── invalidCustomInputComponents.jsx.snap\n    │   │       │   │   │   ├── invalidCustomInputComponents.options.json\n    │   │       │   │   │   ├── invalidCustomLabelAttributes.jsx\n    │   │       │   │   │   ├── invalidCustomLabelAttributes.jsx.snap\n    │   │       │   │   │   ├── invalidCustomLabelAttributes.options.json\n    │   │       │   │   │   ├── invalidCustomLabelComponents.jsx\n    │   │       │   │   │   ├── invalidCustomLabelComponents.jsx.snap\n    │   │       │   │   │   ├── invalidCustomLabelComponents.options.json\n    │   │       │   │   │   ├── invalidCustomOptions.jsx\n    │   │       │   │   │   ├── invalidCustomOptions.jsx.snap\n    │   │       │   │   │   ├── invalidCustomOptions.options.json\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   ├── valid.jsx.snap\n    │   │       │   │   │   ├── validCustomControlComponents.jsx\n    │   │       │   │   │   ├── validCustomControlComponents.jsx.snap\n    │   │       │   │   │   ├── validCustomControlComponents.options.json\n    │   │       │   │   │   ├── validCustomLabelAttributes.jsx\n    │   │       │   │   │   ├── validCustomLabelAttributes.jsx.snap\n    │   │       │   │   │   ├── validCustomLabelAttributes.options.json\n    │   │       │   │   │   ├── validCustomLabelComponents.jsx\n    │   │       │   │   │   ├── validCustomLabelComponents.jsx.snap\n    │   │       │   │   │   ├── validCustomLabelComponents.options.json\n    │   │       │   │   │   ├── validCustomOptions.jsx\n    │   │       │   │   │   ├── validCustomOptions.jsx.snap\n    │   │       │   │   │   └── validCustomOptions.options.json\n    │   │       │   │   ├── noNoninteractiveElementInteractions/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noNoninteractiveElementToInteractiveRole/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noNoninteractiveTabindex/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noPositiveTabindex/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── reactCreateElementInvalid.js\n    │   │       │   │   │   ├── reactCreateElementInvalid.js.snap\n    │   │       │   │   │   ├── reactCreateElementValid.js\n    │   │       │   │   │   ├── reactCreateElementValid.js.snap\n    │   │       │   │   │   ├── validJsx.jsx\n    │   │       │   │   │   └── validJsx.jsx.snap\n    │   │       │   │   ├── noRedundantAlt/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noRedundantRoles/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noStaticElementInteractions/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noSvgWithoutTitle/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useAltText/\n    │   │       │   │   │   ├── area.jsx\n    │   │       │   │   │   ├── area.jsx.snap\n    │   │       │   │   │   ├── img.jsx\n    │   │       │   │   │   ├── img.jsx.snap\n    │   │       │   │   │   ├── input.jsx\n    │   │       │   │   │   ├── input.jsx.snap\n    │   │       │   │   │   ├── invalid_issue_6384.tsx\n    │   │       │   │   │   ├── invalid_issue_6384.tsx.snap\n    │   │       │   │   │   ├── object.jsx\n    │   │       │   │   │   ├── object.jsx.snap\n    │   │       │   │   │   ├── valid_issue_6384.tsx\n    │   │       │   │   │   └── valid_issue_6384.tsx.snap\n    │   │       │   │   ├── useAnchorContent/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useAriaActivedescendantWithTabindex/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useAriaPropsForRole/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useAriaPropsSupportedByRole/\n    │   │       │   │   │   ├── deprecated.jsx\n    │   │       │   │   │   ├── deprecated.jsx.snap\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useButtonType/\n    │   │       │   │   │   ├── inJsx.jsx\n    │   │       │   │   │   ├── inJsx.jsx.snap\n    │   │       │   │   │   ├── inObject.js\n    │   │       │   │   │   ├── inObject.js.snap\n    │   │       │   │   │   ├── withBindingInvalid.js\n    │   │       │   │   │   ├── withBindingInvalid.js.snap\n    │   │       │   │   │   ├── withBindingValid.js\n    │   │       │   │   │   ├── withBindingValid.js.snap\n    │   │       │   │   │   ├── withDefaultNamespaceInvalid.js\n    │   │       │   │   │   ├── withDefaultNamespaceInvalid.js.snap\n    │   │       │   │   │   ├── withRenamedImportInvalid.js\n    │   │       │   │   │   └── withRenamedImportInvalid.js.snap\n    │   │       │   │   ├── useFocusableInteractive/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useHeadingContent/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useHtmlLang/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useIframeTitle/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useKeyWithClickEvents/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useKeyWithMouseEvents/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useMediaCaption/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useSemanticElements/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── invalid_self_closing.jsx\n    │   │       │   │   │   ├── invalid_self_closing.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   ├── valid.jsx.snap\n    │   │       │   │   │   ├── valid_issue_6384.tsx\n    │   │       │   │   │   └── valid_issue_6384.tsx.snap\n    │   │       │   │   ├── useValidAnchor/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useValidAriaProps/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useValidAriaRole/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useValidAriaValues/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useValidAutocomplete/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── invalid.options.json\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   ├── valid.jsx.snap\n    │   │       │   │   │   └── valid.options.json\n    │   │       │   │   └── useValidLang/\n    │   │       │   │       ├── invalid.jsx\n    │   │       │   │       ├── invalid.jsx.snap\n    │   │       │   │       ├── valid.jsx\n    │   │       │   │       └── valid.jsx.snap\n    │   │       │   ├── complexity/\n    │   │       │   │   ├── noAdjacentSpacesInRegex/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── noArguments/\n    │   │       │   │   │   ├── invalid.cjs\n    │   │       │   │   │   └── invalid.cjs.snap\n    │   │       │   │   ├── noBannedTypes/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noCommaOperator/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── noEmptyTypeParameters/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noExcessiveCognitiveComplexity/\n    │   │       │   │   │   ├── booleanOperators.js\n    │   │       │   │   │   ├── booleanOperators.js.snap\n    │   │       │   │   │   ├── booleanOperators.options.json\n    │   │       │   │   │   ├── booleanOperators2.js\n    │   │       │   │   │   ├── booleanOperators2.js.snap\n    │   │       │   │   │   ├── booleanOperators2.options.json\n    │   │       │   │   │   ├── complexEventHandler.ts\n    │   │       │   │   │   ├── complexEventHandler.ts.snap\n    │   │       │   │   │   ├── excessiveNesting.js\n    │   │       │   │   │   ├── excessiveNesting.js.snap\n    │   │       │   │   │   ├── functionalChain.js\n    │   │       │   │   │   ├── functionalChain.js.snap\n    │   │       │   │   │   ├── functionalChain.options.json\n    │   │       │   │   │   ├── getWords.js\n    │   │       │   │   │   ├── getWords.js.snap\n    │   │       │   │   │   ├── getWords.options.json\n    │   │       │   │   │   ├── invalidConfig.js\n    │   │       │   │   │   ├── invalidConfig.js.snap\n    │   │       │   │   │   ├── invalidConfig.options.json\n    │   │       │   │   │   ├── lambdas.js\n    │   │       │   │   │   ├── lambdas.js.snap\n    │   │       │   │   │   ├── lambdas.options.json\n    │   │       │   │   │   ├── nestedControlFlowStructures.js\n    │   │       │   │   │   ├── nestedControlFlowStructures.js.snap\n    │   │       │   │   │   ├── nestedControlFlowStructures.options.json\n    │   │       │   │   │   ├── simpleBranches.js\n    │   │       │   │   │   ├── simpleBranches.js.snap\n    │   │       │   │   │   ├── simpleBranches.options.json\n    │   │       │   │   │   ├── simpleBranches2.js\n    │   │       │   │   │   ├── simpleBranches2.js.snap\n    │   │       │   │   │   ├── simpleBranches2.options.json\n    │   │       │   │   │   ├── sumOfPrimes.js\n    │   │       │   │   │   ├── sumOfPrimes.js.snap\n    │   │       │   │   │   ├── sumOfPrimes.options.json\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noExcessiveLinesPerFunction/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.options.json\n    │   │       │   │   │   ├── invalidSkipBlankLines.js\n    │   │       │   │   │   ├── invalidSkipBlankLines.js.snap\n    │   │       │   │   │   ├── invalidSkipBlankLines.options.json\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.options.json\n    │   │       │   │   │   ├── validSkipBlankLines.js\n    │   │       │   │   │   ├── validSkipBlankLines.js.snap\n    │   │       │   │   │   ├── validSkipBlankLines.options.json\n    │   │       │   │   │   ├── validSkipIiefs.options.json\n    │   │       │   │   │   ├── validSkipIifes.js\n    │   │       │   │   │   └── validSkipIifes.js.snap\n    │   │       │   │   ├── noExcessiveNestedTestSuites/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noExtraBooleanCast/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noFlatMapIdentity/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noForEach/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalidConfig.js\n    │   │       │   │   │   ├── invalidConfig.js.snap\n    │   │       │   │   │   ├── invalidConfig.options.json\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── validIdentifiers.js\n    │   │       │   │   │   ├── validIdentifiers.js.snap\n    │   │       │   │   │   └── validIdentifiers.options.json\n    │   │       │   │   ├── noImplicitCoercions/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noStaticOnlyClass/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noThisInStatic/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUselessCatch/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUselessConstructor/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   ├── valid.jsonc.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   ├── valid.ts.snap\n    │   │       │   │   │   ├── validDecorator.js\n    │   │       │   │   │   ├── validDecorator.js.snap\n    │   │       │   │   │   └── validDecorator.options.json\n    │   │       │   │   ├── noUselessContinue/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUselessEmptyExport/\n    │   │       │   │   │   ├── invalid_with_default_export.js\n    │   │       │   │   │   ├── invalid_with_default_export.js.snap\n    │   │       │   │   │   ├── invalid_with_empty_export.js\n    │   │       │   │   │   ├── invalid_with_empty_export.js.snap\n    │   │       │   │   │   ├── invalid_with_export.js\n    │   │       │   │   │   ├── invalid_with_export.js.snap\n    │   │       │   │   │   ├── invalid_with_export_from.js\n    │   │       │   │   │   ├── invalid_with_export_from.js.snap\n    │   │       │   │   │   ├── invalid_with_import.js\n    │   │       │   │   │   ├── invalid_with_import.js.snap\n    │   │       │   │   │   ├── invalid_with_sideeffect_import.js\n    │   │       │   │   │   ├── invalid_with_sideeffect_import.js.snap\n    │   │       │   │   │   ├── valid_empty_export.js\n    │   │       │   │   │   ├── valid_empty_export.js.snap\n    │   │       │   │   │   ├── valid_export.js\n    │   │       │   │   │   └── valid_export.js.snap\n    │   │       │   │   ├── noUselessEscapeInRegex/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUselessFragments/\n    │   │       │   │   │   ├── assignments.jsx\n    │   │       │   │   │   ├── assignments.jsx.snap\n    │   │       │   │   │   ├── componentFragment.jsx\n    │   │       │   │   │   ├── componentFragment.jsx.snap\n    │   │       │   │   │   ├── fromImportInvalid.jsx\n    │   │       │   │   │   ├── fromImportInvalid.jsx.snap\n    │   │       │   │   │   ├── fromImportNamespaceInvalid.jsx\n    │   │       │   │   │   ├── fromImportNamespaceInvalid.jsx.snap\n    │   │       │   │   │   ├── fromImportRenameInvalid.jsx\n    │   │       │   │   │   ├── fromImportRenameInvalid.jsx.snap\n    │   │       │   │   │   ├── fromImportRenameValid.jsx\n    │   │       │   │   │   ├── fromImportRenameValid.jsx.snap\n    │   │       │   │   │   ├── fromImportValid.jsx\n    │   │       │   │   │   ├── fromImportValid.jsx.snap\n    │   │       │   │   │   ├── ignore.jsx\n    │   │       │   │   │   ├── ignore.jsx.snap\n    │   │       │   │   │   ├── issue_1514.jsx\n    │   │       │   │   │   ├── issue_1514.jsx.snap\n    │   │       │   │   │   ├── issue_1926.jsx\n    │   │       │   │   │   ├── issue_1926.jsx.snap\n    │   │       │   │   │   ├── issue_2460.jsx\n    │   │       │   │   │   ├── issue_2460.jsx.snap\n    │   │       │   │   │   ├── issue_3149.jsx\n    │   │       │   │   │   ├── issue_3149.jsx.snap\n    │   │       │   │   │   ├── issue_3545.jsx\n    │   │       │   │   │   ├── issue_3545.jsx.snap\n    │   │       │   │   │   ├── issue_3668.jsx\n    │   │       │   │   │   ├── issue_3668.jsx.snap\n    │   │       │   │   │   ├── issue_3926.jsx\n    │   │       │   │   │   ├── issue_3926.jsx.snap\n    │   │       │   │   │   ├── issue_4059.jsx\n    │   │       │   │   │   ├── issue_4059.jsx.snap\n    │   │       │   │   │   ├── issue_4208.jsx\n    │   │       │   │   │   ├── issue_4208.jsx.snap\n    │   │       │   │   │   ├── issue_4553.jsx\n    │   │       │   │   │   ├── issue_4553.jsx.snap\n    │   │       │   │   │   ├── issue_459.jsx\n    │   │       │   │   │   ├── issue_459.jsx.snap\n    │   │       │   │   │   ├── issue_4639.jsx\n    │   │       │   │   │   ├── issue_4639.jsx.snap\n    │   │       │   │   │   ├── issue_4751.jsx\n    │   │       │   │   │   ├── issue_4751.jsx.snap\n    │   │       │   │   │   ├── issue_5484.tsx\n    │   │       │   │   │   ├── issue_5484.tsx.snap\n    │   │       │   │   │   ├── issue_6391.jsx\n    │   │       │   │   │   ├── issue_6391.jsx.snap\n    │   │       │   │   │   ├── issue_6508.jsx\n    │   │       │   │   │   ├── issue_6508.jsx.snap\n    │   │       │   │   │   ├── noChildren.jsx\n    │   │       │   │   │   ├── noChildren.jsx.snap\n    │   │       │   │   │   ├── notFragmentValid.jsx\n    │   │       │   │   │   ├── notFragmentValid.jsx.snap\n    │   │       │   │   │   ├── userDefinedValid.jsx\n    │   │       │   │   │   ├── userDefinedValid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   ├── valid.jsx.snap\n    │   │       │   │   │   ├── withChildren.jsx\n    │   │       │   │   │   ├── withChildren.jsx.snap\n    │   │       │   │   │   ├── withCommentsInvalid.jsx\n    │   │       │   │   │   ├── withCommentsInvalid.jsx.snap\n    │   │       │   │   │   ├── withJsxElementInvalid.jsx\n    │   │       │   │   │   ├── withJsxElementInvalid.jsx.snap\n    │   │       │   │   │   ├── withJsxExpressionChildValid.jsx\n    │   │       │   │   │   ├── withJsxExpressionChildValid.jsx.snap\n    │   │       │   │   │   ├── withJsxTextInvalid.jsx\n    │   │       │   │   │   └── withJsxTextInvalid.jsx.snap\n    │   │       │   │   ├── noUselessLabel/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── noUselessLoneBlockStatements/\n    │   │       │   │   │   ├── invalid.cjs\n    │   │       │   │   │   ├── invalid.cjs.snap\n    │   │       │   │   │   ├── invalidModule.js\n    │   │       │   │   │   ├── invalidModule.js.snap\n    │   │       │   │   │   ├── valid.cjs\n    │   │       │   │   │   ├── valid.cjs.snap\n    │   │       │   │   │   ├── validModule.js\n    │   │       │   │   │   └── validModule.js.snap\n    │   │       │   │   ├── noUselessRename/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUselessStringConcat/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUselessStringRaw/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUselessSwitchCase/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUselessTernary/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid_without_trivia.js\n    │   │       │   │   │   ├── invalid_without_trivia.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUselessThisAlias/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUselessTypeConstraint/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalid.tsx\n    │   │       │   │   │   ├── invalid.tsx.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noUselessUndefinedInitialization/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noVoid/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useArrowFunction/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalid.tsx\n    │   │       │   │   │   ├── invalid.tsx.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useDateNow/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useFlatMap/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── useIndexOf/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useLiteralKeys/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useNumericLiterals/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── overridden.js\n    │   │       │   │   │   ├── overridden.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useOptionalChain/\n    │   │       │   │   │   ├── complexLogicalAndCases.ts\n    │   │       │   │   │   ├── complexLogicalAndCases.ts.snap\n    │   │       │   │   │   ├── logicalAndCases1.js\n    │   │       │   │   │   ├── logicalAndCases1.js.snap\n    │   │       │   │   │   ├── logicalAndCases2.js\n    │   │       │   │   │   ├── logicalAndCases2.js.snap\n    │   │       │   │   │   ├── logicalAndCases3.js\n    │   │       │   │   │   ├── logicalAndCases3.js.snap\n    │   │       │   │   │   ├── logicalAndCases4.js\n    │   │       │   │   │   ├── logicalAndCases4.js.snap\n    │   │       │   │   │   ├── logicalAndCases5.js\n    │   │       │   │   │   ├── logicalAndCases5.js.snap\n    │   │       │   │   │   ├── logicalAndCases6.jsx\n    │   │       │   │   │   ├── logicalAndCases6.jsx.snap\n    │   │       │   │   │   ├── nullishAndLogicalOr1.ts\n    │   │       │   │   │   ├── nullishAndLogicalOr1.ts.snap\n    │   │       │   │   │   ├── nullishAndLogicalOr2.ts\n    │   │       │   │   │   ├── nullishAndLogicalOr2.ts.snap\n    │   │       │   │   │   ├── validCases.ts\n    │   │       │   │   │   └── validCases.ts.snap\n    │   │       │   │   ├── useRegexLiterals/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── useSimpleNumberKeys/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useSimplifiedLogicExpression/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   └── useWhile/\n    │   │       │   │       ├── invalid.js\n    │   │       │   │       ├── invalid.js.snap\n    │   │       │   │       ├── valid.js\n    │   │       │   │       └── valid.js.snap\n    │   │       │   ├── correctness/\n    │   │       │   │   ├── noChildrenProp/\n    │   │       │   │   │   ├── noChildrenPropInvalid.jsx\n    │   │       │   │   │   ├── noChildrenPropInvalid.jsx.snap\n    │   │       │   │   │   ├── noChildrenPropValid.jsx\n    │   │       │   │   │   └── noChildrenPropValid.jsx.snap\n    │   │       │   │   ├── noConstantCondition/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── noConstantMathMinMaxClamp/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid-shadowing.js\n    │   │       │   │   │   ├── valid-shadowing.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noConstAssign/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   └── invalid.js.snap\n    │   │       │   │   ├── noConstructorReturn/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noDuplicatePrivateClassMembers/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noEmptyCharacterClassInRegex/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noEmptyPattern/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── noGlobalDirnameFilename/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.cjs\n    │   │       │   │   │   ├── valid.cjs.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noGlobalObjectCalls/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid_import.js\n    │   │       │   │   │   └── valid_import.js.snap\n    │   │       │   │   ├── noInitializerWithDefinite/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noInnerDeclarations/\n    │   │       │   │   │   ├── invalid-module.cjs\n    │   │       │   │   │   ├── invalid-module.cjs.snap\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid-block-scoped-func-decl.js\n    │   │       │   │   │   ├── valid-block-scoped-func-decl.js.snap\n    │   │       │   │   │   ├── valid-moduke.ts\n    │   │       │   │   │   ├── valid-moduke.ts.snap\n    │   │       │   │   │   ├── valid-module.js\n    │   │       │   │   │   ├── valid-module.js.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── noInvalidBuiltinInstantiation/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noInvalidConstructorSuper/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noInvalidUseBeforeDeclaration/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalidBindingPattern.js\n    │   │       │   │   │   ├── invalidBindingPattern.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   ├── valid.ts.snap\n    │   │       │   │   │   ├── validBindingPattern.js\n    │   │       │   │   │   └── validBindingPattern.js.snap\n    │   │       │   │   ├── noNestedComponentDefinitions/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalidDefaultExpression.js\n    │   │       │   │   │   ├── invalidDefaultExpression.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noNodejsModules/\n    │   │       │   │   │   ├── invalid-cjs.cjs\n    │   │       │   │   │   ├── invalid-cjs.cjs.snap\n    │   │       │   │   │   ├── invalid-esm.js\n    │   │       │   │   │   ├── invalid-esm.js.snap\n    │   │       │   │   │   ├── valid-with-dep.js\n    │   │       │   │   │   ├── valid-with-dep.js.snap\n    │   │       │   │   │   ├── valid-with-dep.package.json\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noNonoctalDecimalEscape/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noPrecisionLoss/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noPrivateImports/\n    │   │       │   │   │   ├── default_package.js\n    │   │       │   │   │   ├── default_package.js.snap\n    │   │       │   │   │   ├── default_package.options.json\n    │   │       │   │   │   ├── foo.js\n    │   │       │   │   │   ├── foo.js.snap\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── package.json\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── sub/\n    │   │       │   │   │   │   ├── foo.js\n    │   │       │   │   │   │   ├── foo.js.snap\n    │   │       │   │   │   │   ├── importPrivate.js\n    │   │       │   │   │   │   ├── importPrivate.js.snap\n    │   │       │   │   │   │   ├── index.js\n    │   │       │   │   │   │   └── index.js.snap\n    │   │       │   │   │   └── sub2/\n    │   │       │   │   │       ├── default_package_nested.js\n    │   │       │   │   │       ├── default_package_nested.js.snap\n    │   │       │   │   │       └── default_package_nested.options.json\n    │   │       │   │   ├── noProcessGlobal/\n    │   │       │   │   │   ├── declare_process.js\n    │   │       │   │   │   ├── declare_process.js.snap\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid_with_import.js\n    │   │       │   │   │   ├── invalid_with_import.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noReactPropAssignments/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noRenderReturnValue/\n    │   │       │   │   │   ├── invalidGlobal.tsx\n    │   │       │   │   │   ├── invalidGlobal.tsx.snap\n    │   │       │   │   │   ├── invalidImport.tsx\n    │   │       │   │   │   ├── invalidImport.tsx.snap\n    │   │       │   │   │   ├── validGlobal.tsx\n    │   │       │   │   │   ├── validGlobal.tsx.snap\n    │   │       │   │   │   ├── validImport.tsx\n    │   │       │   │   │   ├── validImport.tsx.snap\n    │   │       │   │   │   ├── validLocal.tsx\n    │   │       │   │   │   └── validLocal.tsx.snap\n    │   │       │   │   ├── noRestrictedElements/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── invalid.options.json\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   ├── valid.jsx.snap\n    │   │       │   │   │   └── valid.options.json\n    │   │       │   │   ├── noSelfAssign/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── issue548.js\n    │   │       │   │   │   ├── issue548.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noSetterReturn/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noSolidDestructuredProps/\n    │   │       │   │   │   ├── invalid.tsx\n    │   │       │   │   │   ├── invalid.tsx.snap\n    │   │       │   │   │   ├── issue_5449_valid.tsx\n    │   │       │   │   │   ├── issue_5449_valid.tsx.snap\n    │   │       │   │   │   ├── valid.tsx\n    │   │       │   │   │   └── valid.tsx.snap\n    │   │       │   │   ├── noStringCaseMismatch/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noSuperWithoutExtends/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noSwitchDeclarations/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── noTypeOnlyImportAttributes/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.cts\n    │   │       │   │   │   ├── valid.cts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   ├── valid.ts.snap\n    │   │       │   │   │   ├── valid_cjs.package.json\n    │   │       │   │   │   ├── valid_cjs.ts\n    │   │       │   │   │   └── valid_cjs.ts.snap\n    │   │       │   │   ├── noUndeclaredDependencies/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.options.json\n    │   │       │   │   │   ├── invalid.package.json\n    │   │       │   │   │   ├── invalid.test.js\n    │   │       │   │   │   ├── invalid.test.js.snap\n    │   │       │   │   │   ├── invalid.test.options.json\n    │   │       │   │   │   ├── invalid.test.package.json\n    │   │       │   │   │   ├── valid.d.ts\n    │   │       │   │   │   ├── valid.d.ts.snap\n    │   │       │   │   │   ├── valid.package.json\n    │   │       │   │   │   ├── valid.test.js\n    │   │       │   │   │   ├── valid.test.js.snap\n    │   │       │   │   │   ├── valid.test.options.json\n    │   │       │   │   │   ├── valid.test.package.json\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noUndeclaredVariables/\n    │   │       │   │   │   ├── arguments-object.js\n    │   │       │   │   │   ├── arguments-object.js.snap\n    │   │       │   │   │   ├── ignore-types.ts\n    │   │       │   │   │   ├── ignore-types.ts.snap\n    │   │       │   │   │   ├── infer.ts\n    │   │       │   │   │   ├── infer.ts.snap\n    │   │       │   │   │   ├── infer_incorrect.options.json\n    │   │       │   │   │   ├── infer_incorrect.ts\n    │   │       │   │   │   ├── infer_incorrect.ts.snap\n    │   │       │   │   │   ├── invalid.svelte.ts\n    │   │       │   │   │   ├── invalid.svelte.ts.snap\n    │   │       │   │   │   ├── invalidNamespaceReference.options.json\n    │   │       │   │   │   ├── invalidNamespaceReference.ts\n    │   │       │   │   │   ├── invalidNamespaceReference.ts.snap\n    │   │       │   │   │   ├── invalidTsInJs.js\n    │   │       │   │   │   ├── invalidTsInJs.js.snap\n    │   │       │   │   │   ├── issue_2886.ts\n    │   │       │   │   │   ├── issue_2886.ts.snap\n    │   │       │   │   │   ├── noUndeclaredVariables.js\n    │   │       │   │   │   ├── noUndeclaredVariables.js.snap\n    │   │       │   │   │   ├── noUndeclaredVariables.options.json\n    │   │       │   │   │   ├── noUndeclaredVariablesTypes.options.json\n    │   │       │   │   │   ├── noUndeclaredVariablesTypes.ts\n    │   │       │   │   │   ├── noUndeclaredVariablesTypes.ts.snap\n    │   │       │   │   │   ├── typeParameters.ts\n    │   │       │   │   │   ├── typeParameters.ts.snap\n    │   │       │   │   │   ├── valid-issue-2975.ts\n    │   │       │   │   │   ├── valid-issue-2975.ts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.options.json\n    │   │       │   │   │   ├── validAmbientRead.d.ts\n    │   │       │   │   │   ├── validAmbientRead.d.ts.snap\n    │   │       │   │   │   ├── validAmbientRead.ts\n    │   │       │   │   │   ├── validAmbientRead.ts.snap\n    │   │       │   │   │   ├── validEnumMemberRef.ts\n    │   │       │   │   │   ├── validEnumMemberRef.ts.snap\n    │   │       │   │   │   ├── validExportDefaultInAmbientModule.ts\n    │   │       │   │   │   ├── validExportDefaultInAmbientModule.ts.snap\n    │   │       │   │   │   ├── validThis.tsx\n    │   │       │   │   │   ├── validThis.tsx.snap\n    │   │       │   │   │   ├── validTsGlobals.ts\n    │   │       │   │   │   ├── validTsGlobals.ts.snap\n    │   │       │   │   │   ├── validWorkerGlobals.ts\n    │   │       │   │   │   └── validWorkerGlobals.ts.snap\n    │   │       │   │   ├── noUnreachable/\n    │   │       │   │   │   ├── HighComplexity.js\n    │   │       │   │   │   ├── HighComplexity.js.snap\n    │   │       │   │   │   ├── issue-3654.js\n    │   │       │   │   │   ├── issue-3654.js.snap\n    │   │       │   │   │   ├── JsBreakStatement.js\n    │   │       │   │   │   ├── JsBreakStatement.js.snap\n    │   │       │   │   │   ├── JsContinueStatement.js\n    │   │       │   │   │   ├── JsContinueStatement.js.snap\n    │   │       │   │   │   ├── JsDoWhileStatement.js\n    │   │       │   │   │   ├── JsDoWhileStatement.js.snap\n    │   │       │   │   │   ├── JsForInStatement.js\n    │   │       │   │   │   ├── JsForInStatement.js.snap\n    │   │       │   │   │   ├── JsForOfStatement.js\n    │   │       │   │   │   ├── JsForOfStatement.js.snap\n    │   │       │   │   │   ├── JsForStatement.js\n    │   │       │   │   │   ├── JsForStatement.js.snap\n    │   │       │   │   │   ├── JsIfStatement.js\n    │   │       │   │   │   ├── JsIfStatement.js.snap\n    │   │       │   │   │   ├── JsLabeledStatement.js\n    │   │       │   │   │   ├── JsLabeledStatement.js.snap\n    │   │       │   │   │   ├── JsNestedTryFinallyStatement.js\n    │   │       │   │   │   ├── JsNestedTryFinallyStatement.js.snap\n    │   │       │   │   │   ├── JsReturnStatement.js\n    │   │       │   │   │   ├── JsReturnStatement.js.snap\n    │   │       │   │   │   ├── JsSwitchStatement.js\n    │   │       │   │   │   ├── JsSwitchStatement.js.snap\n    │   │       │   │   │   ├── JsThrowStatement.js\n    │   │       │   │   │   ├── JsThrowStatement.js.snap\n    │   │       │   │   │   ├── JsTryFinallyStatement.js\n    │   │       │   │   │   ├── JsTryFinallyStatement.js.snap\n    │   │       │   │   │   ├── JsTryStatement.js\n    │   │       │   │   │   ├── JsTryStatement.js.snap\n    │   │       │   │   │   ├── JsVariableStatement.js\n    │   │       │   │   │   ├── JsVariableStatement.js.snap\n    │   │       │   │   │   ├── JsWhileStatement.js\n    │   │       │   │   │   ├── JsWhileStatement.js.snap\n    │   │       │   │   │   ├── MergeRanges.js\n    │   │       │   │   │   ├── MergeRanges.js.snap\n    │   │       │   │   │   ├── NestedBlocks.js\n    │   │       │   │   │   ├── NestedBlocks.js.snap\n    │   │       │   │   │   ├── NestedFunctions.js\n    │   │       │   │   │   ├── NestedFunctions.js.snap\n    │   │       │   │   │   ├── SuppressionComments.js\n    │   │       │   │   │   ├── SuppressionComments.js.snap\n    │   │       │   │   │   ├── TerminatorsPlurals.js\n    │   │       │   │   │   └── TerminatorsPlurals.js.snap\n    │   │       │   │   ├── noUnreachableSuper/\n    │   │       │   │   │   ├── duplicateSuper.js\n    │   │       │   │   │   ├── duplicateSuper.js.snap\n    │   │       │   │   │   ├── missingSuper.js\n    │   │       │   │   │   ├── missingSuper.js.snap\n    │   │       │   │   │   ├── thisBeforeSuper.js\n    │   │       │   │   │   ├── thisBeforeSuper.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUnsafeFinally/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUnsafeOptionalChaining/\n    │   │       │   │   │   ├── invalid.cjs\n    │   │       │   │   │   ├── invalid.cjs.snap\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── validArithmetic.js\n    │   │       │   │   │   └── validArithmetic.js.snap\n    │   │       │   │   ├── noUnusedFunctionParameters/\n    │   │       │   │   │   ├── invalid.ignoreRestSiblingsFalse.options.json\n    │   │       │   │   │   ├── invalid.ignoreRestSiblingsFalse.ts\n    │   │       │   │   │   ├── invalid.ignoreRestSiblingsFalse.ts.snap\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── issue4227.ts\n    │   │       │   │   │   ├── issue4227.ts.snap\n    │   │       │   │   │   ├── issue6692.js\n    │   │       │   │   │   ├── issue6692.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noUnusedImports/\n    │   │       │   │   │   ├── invalid-import-namespace.ts\n    │   │       │   │   │   ├── invalid-import-namespace.ts.snap\n    │   │       │   │   │   ├── invalid-unused-react.jsx\n    │   │       │   │   │   ├── invalid-unused-react.jsx.snap\n    │   │       │   │   │   ├── invalid-unused-react.options.json\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalid_issue_6229.ts\n    │   │       │   │   │   ├── invalid_issue_6229.ts.snap\n    │   │       │   │   │   ├── issue557.ts\n    │   │       │   │   │   ├── issue557.ts.snap\n    │   │       │   │   │   ├── issue6144.ts\n    │   │       │   │   │   ├── issue6144.ts.snap\n    │   │       │   │   │   ├── issue_4677_jsdoc.js\n    │   │       │   │   │   ├── issue_4677_jsdoc.js.snap\n    │   │       │   │   │   ├── issue_4677_jsdoc_syntax.js\n    │   │       │   │   │   ├── issue_4677_jsdoc_syntax.js.snap\n    │   │       │   │   │   ├── issue_4677_tsdoc.ts\n    │   │       │   │   │   ├── issue_4677_tsdoc.ts.snap\n    │   │       │   │   │   ├── issue_4677_tsdoc_syntax.ts\n    │   │       │   │   │   ├── issue_4677_tsdoc_syntax.ts.snap\n    │   │       │   │   │   ├── issue_5407_lone_comment.js\n    │   │       │   │   │   ├── issue_5407_lone_comment.js.snap\n    │   │       │   │   │   ├── valid-inner-imports.ts\n    │   │       │   │   │   ├── valid-inner-imports.ts.snap\n    │   │       │   │   │   ├── valid-type-augmentation.ts\n    │   │       │   │   │   ├── valid-type-augmentation.ts.snap\n    │   │       │   │   │   ├── valid-unused-react.jsx\n    │   │       │   │   │   ├── valid-unused-react.jsx.snap\n    │   │       │   │   │   ├── valid-unused-react.options.json\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUnusedLabels/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.svelte\n    │   │       │   │   │   └── valid.svelte.snap\n    │   │       │   │   ├── noUnusedPrivateClassMembers/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalid_issue_7101.ts\n    │   │       │   │   │   ├── invalid_issue_7101.ts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUnusedVariables/\n    │   │       │   │   │   ├── definitionfile.d.ts\n    │   │       │   │   │   ├── definitionfile.d.ts.snap\n    │   │       │   │   │   ├── invalid.d.ts\n    │   │       │   │   │   ├── invalid.d.ts.snap\n    │   │       │   │   │   ├── invalidEnum.ts\n    │   │       │   │   │   ├── invalidEnum.ts.snap\n    │   │       │   │   │   ├── invalidFixNone.js\n    │   │       │   │   │   ├── invalidFixNone.js.snap\n    │   │       │   │   │   ├── invalidFixNone.options.json\n    │   │       │   │   │   ├── invalidFunction.ts\n    │   │       │   │   │   ├── invalidFunction.ts.snap\n    │   │       │   │   │   ├── invalidInterface.ts\n    │   │       │   │   │   ├── invalidInterface.ts.snap\n    │   │       │   │   │   ├── invalidRecursiveFunctions.js\n    │   │       │   │   │   ├── invalidRecursiveFunctions.js.snap\n    │   │       │   │   │   ├── invalidRestSiblings.js\n    │   │       │   │   │   ├── invalidRestSiblings.js.snap\n    │   │       │   │   │   ├── invalidSelfWrite.js\n    │   │       │   │   │   ├── invalidSelfWrite.js.snap\n    │   │       │   │   │   ├── invalidType.ts\n    │   │       │   │   │   ├── invalidType.ts.snap\n    │   │       │   │   │   ├── invalidtypeof.ts\n    │   │       │   │   │   ├── invalidtypeof.ts.snap\n    │   │       │   │   │   ├── invalidTypeParam.ts\n    │   │       │   │   │   ├── invalidTypeParam.ts.snap\n    │   │       │   │   │   ├── invalidTypeValueSameNames.ts\n    │   │       │   │   │   ├── invalidTypeValueSameNames.ts.snap\n    │   │       │   │   │   ├── invalidVariables.ts\n    │   │       │   │   │   ├── invalidVariables.ts.snap\n    │   │       │   │   │   ├── issue104.ts\n    │   │       │   │   │   ├── issue104.ts.snap\n    │   │       │   │   │   ├── issue4114.js\n    │   │       │   │   │   ├── issue4114.js.snap\n    │   │       │   │   │   ├── issue6692.js\n    │   │       │   │   │   ├── issue6692.js.snap\n    │   │       │   │   │   ├── unusedInferBogusConditional.ts\n    │   │       │   │   │   ├── unusedInferBogusConditional.ts.snap\n    │   │       │   │   │   ├── validAbstractClass.ts\n    │   │       │   │   │   ├── validAbstractClass.ts.snap\n    │   │       │   │   │   ├── validClass.ts\n    │   │       │   │   │   ├── validClass.ts.snap\n    │   │       │   │   │   ├── validClassAndInterfaceExport.ts\n    │   │       │   │   │   ├── validClassAndInterfaceExport.ts.snap\n    │   │       │   │   │   ├── validDeclare.ts\n    │   │       │   │   │   ├── validDeclare.ts.snap\n    │   │       │   │   │   ├── validEnum.ts\n    │   │       │   │   │   ├── validEnum.ts.snap\n    │   │       │   │   │   ├── validExport.ts\n    │   │       │   │   │   ├── validExport.ts.snap\n    │   │       │   │   │   ├── validForStatement.js\n    │   │       │   │   │   ├── validForStatement.js.snap\n    │   │       │   │   │   ├── validFunctions.ts\n    │   │       │   │   │   ├── validFunctions.ts.snap\n    │   │       │   │   │   ├── validFunctionType.ts\n    │   │       │   │   │   ├── validFunctionType.ts.snap\n    │   │       │   │   │   ├── validImport.ts\n    │   │       │   │   │   ├── validImport.ts.snap\n    │   │       │   │   │   ├── validInnerUsed.js\n    │   │       │   │   │   ├── validInnerUsed.js.snap\n    │   │       │   │   │   ├── validInterface.ts\n    │   │       │   │   │   ├── validInterface.ts.snap\n    │   │       │   │   │   ├── validIssue861.js\n    │   │       │   │   │   ├── validIssue861.js.snap\n    │   │       │   │   │   ├── validNamespaceExportType.ts\n    │   │       │   │   │   ├── validNamespaceExportType.ts.snap\n    │   │       │   │   │   ├── validPrefixedRestSiblings.js\n    │   │       │   │   │   ├── validPrefixedRestSiblings.js.snap\n    │   │       │   │   │   ├── validPrefixedRestSiblings.options.json\n    │   │       │   │   │   ├── validRestSiblings.js\n    │   │       │   │   │   ├── validRestSiblings.js.snap\n    │   │       │   │   │   ├── validRestSiblings.options.json\n    │   │       │   │   │   ├── validType.ts\n    │   │       │   │   │   ├── validType.ts.snap\n    │   │       │   │   │   ├── validTypeParam.ts\n    │   │       │   │   │   ├── validTypeParam.ts.snap\n    │   │       │   │   │   ├── validUsedBindingPattern.js\n    │   │       │   │   │   ├── validUsedBindingPattern.js.snap\n    │   │       │   │   │   ├── validValueExportType.ts\n    │   │       │   │   │   ├── validValueExportType.ts.snap\n    │   │       │   │   │   ├── validVariableAndExport.ts\n    │   │       │   │   │   ├── validVariableAndExport.ts.snap\n    │   │       │   │   │   ├── validVariables.ts.snap\n    │   │       │   │   │   ├── validVariables.tsx\n    │   │       │   │   │   ├── validVariables.tsx.snap\n    │   │       │   │   │   ├── validWithSelfAssign.js\n    │   │       │   │   │   └── validWithSelfAssign.js.snap\n    │   │       │   │   ├── noVoidElementsWithChildren/\n    │   │       │   │   │   ├── createElement.js\n    │   │       │   │   │   ├── createElement.js.snap\n    │   │       │   │   │   ├── inJsx.jsx\n    │   │       │   │   │   └── inJsx.jsx.snap\n    │   │       │   │   ├── noVoidTypeReturn/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useExhaustiveDependencies/\n    │   │       │   │   │   ├── checkHooksImportedFromReact.js\n    │   │       │   │   │   ├── checkHooksImportedFromReact.js.snap\n    │   │       │   │   │   ├── customHook.js\n    │   │       │   │   │   ├── customHook.js.snap\n    │   │       │   │   │   ├── customHook.options.json\n    │   │       │   │   │   ├── duplicateDependencies.js\n    │   │       │   │   │   ├── duplicateDependencies.js.snap\n    │   │       │   │   │   ├── emptyHookNameInOptions.js\n    │   │       │   │   │   ├── emptyHookNameInOptions.js.snap\n    │   │       │   │   │   ├── emptyHookNameInOptions.options.json\n    │   │       │   │   │   ├── exportDefaultClass.js\n    │   │       │   │   │   ├── exportDefaultClass.js.snap\n    │   │       │   │   │   ├── extraDependenciesInvalid.js\n    │   │       │   │   │   ├── extraDependenciesInvalid.js.snap\n    │   │       │   │   │   ├── ignoredDependencies.js\n    │   │       │   │   │   ├── ignoredDependencies.js.snap\n    │   │       │   │   │   ├── invalidIndices.js\n    │   │       │   │   │   ├── invalidIndices.js.snap\n    │   │       │   │   │   ├── invalidIndices.options.json\n    │   │       │   │   │   ├── invalidSuppressions.jsx\n    │   │       │   │   │   ├── invalidSuppressions.jsx.snap\n    │   │       │   │   │   ├── issue1194.ts\n    │   │       │   │   │   ├── issue1194.ts.snap\n    │   │       │   │   │   ├── issue1781.js\n    │   │       │   │   │   ├── issue1781.js.snap\n    │   │       │   │   │   ├── issue1931.js\n    │   │       │   │   │   ├── issue1931.js.snap\n    │   │       │   │   │   ├── issue1931.options.json\n    │   │       │   │   │   ├── issue4567.js\n    │   │       │   │   │   ├── issue4567.js.snap\n    │   │       │   │   │   ├── issue4568.js\n    │   │       │   │   │   ├── issue4568.js.snap\n    │   │       │   │   │   ├── issue6278.js\n    │   │       │   │   │   ├── issue6278.js.snap\n    │   │       │   │   │   ├── missingDependenciesInvalid.js.snap\n    │   │       │   │   │   ├── missingDependenciesInvalid.jsx\n    │   │       │   │   │   ├── missingDependenciesInvalid.jsx.snap\n    │   │       │   │   │   ├── newline.js\n    │   │       │   │   │   ├── newline.js.snap\n    │   │       │   │   │   ├── nonLiteralDependenciesArray.js\n    │   │       │   │   │   ├── nonLiteralDependenciesArray.js.snap\n    │   │       │   │   │   ├── preactHooks.js\n    │   │       │   │   │   ├── preactHooks.js.snap\n    │   │       │   │   │   ├── recursiveComponents.js\n    │   │       │   │   │   ├── recursiveComponents.js.snap\n    │   │       │   │   │   ├── reportMissingDependenciesArray.js\n    │   │       │   │   │   ├── reportMissingDependenciesArray.js.snap\n    │   │       │   │   │   ├── reportMissingDependenciesArray.options.json\n    │   │       │   │   │   ├── reportUnnecessaryDependencies.js\n    │   │       │   │   │   ├── reportUnnecessaryDependencies.js.snap\n    │   │       │   │   │   ├── reportUnnecessaryDependencies.options.json\n    │   │       │   │   │   ├── stableResult.js\n    │   │       │   │   │   ├── stableResult.js.snap\n    │   │       │   │   │   ├── stableResult.options.json\n    │   │       │   │   │   ├── stableResultInvalid.js\n    │   │       │   │   │   ├── stableResultInvalid.js.snap\n    │   │       │   │   │   ├── stableResultInvalid.options.json\n    │   │       │   │   │   ├── stableResultInvalidKeysIndices.js\n    │   │       │   │   │   ├── stableResultInvalidKeysIndices.js.snap\n    │   │       │   │   │   ├── stableResultInvalidKeysIndices.options.json\n    │   │       │   │   │   ├── stableResultKeys.js\n    │   │       │   │   │   ├── stableResultKeys.js.snap\n    │   │       │   │   │   ├── stableResultKeys.options.json\n    │   │       │   │   │   ├── unstableDependency.jsx\n    │   │       │   │   │   ├── unstableDependency.jsx.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   ├── valid.ts.snap\n    │   │       │   │   │   ├── validSuppressions.jsx\n    │   │       │   │   │   └── validSuppressions.jsx.snap\n    │   │       │   │   ├── useHookAtTopLevel/\n    │   │       │   │   │   ├── customHook.js\n    │   │       │   │   │   ├── customHook.js.snap\n    │   │       │   │   │   ├── deprecatedConfig.js\n    │   │       │   │   │   ├── deprecatedConfig.js.snap\n    │   │       │   │   │   ├── deprecatedConfig.options.json\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalidWrapped.js\n    │   │       │   │   │   ├── invalidWrapped.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   ├── valid.ts.snap\n    │   │       │   │   │   ├── validNestedObjectProp.js\n    │   │       │   │   │   └── validNestedObjectProp.js.snap\n    │   │       │   │   ├── useImportExtensions/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalidWithForcedJsExtensions.options.json\n    │   │       │   │   │   ├── invalidWithForcedJsExtensions.ts\n    │   │       │   │   │   ├── invalidWithForcedJsExtensions.ts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   └── sub/\n    │   │       │   │   │       ├── component.svg.svelte.ts\n    │   │       │   │   │       ├── component.svg.svelte.ts.snap\n    │   │       │   │   │       ├── foo.ts\n    │   │       │   │   │       ├── foo.ts.snap\n    │   │       │   │   │       ├── index.js\n    │   │       │   │   │       ├── index.js.snap\n    │   │       │   │   │       ├── styles.css.ts\n    │   │       │   │   │       ├── styles.css.ts.snap\n    │   │       │   │   │       ├── bar/\n    │   │       │   │   │       │   ├── index.ts\n    │   │       │   │   │       │   └── index.ts.snap\n    │   │       │   │   │       └── generated/\n    │   │       │   │   │           ├── index.d.ts\n    │   │       │   │   │           ├── index.d.ts.snap\n    │   │       │   │   │           ├── index.js\n    │   │       │   │   │           └── index.js.snap\n    │   │       │   │   ├── useIsNan/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useJsonImportAttributes/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useJsxKeyInIterable/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── invalidShorthand.jsx\n    │   │       │   │   │   ├── invalidShorthand.jsx.snap\n    │   │       │   │   │   ├── invalidShorthand.options.json\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useParseIntRadix/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useSingleJsDocAsterisk/\n    │   │       │   │   │   ├── invalid-crlf.js\n    │   │       │   │   │   ├── invalid-crlf.js.snap\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useUniqueElementIds/\n    │   │       │   │   │   ├── allowlist.jsx\n    │   │       │   │   │   ├── allowlist.jsx.snap\n    │   │       │   │   │   ├── allowlist.options.json\n    │   │       │   │   │   ├── badAllowlist.jsx\n    │   │       │   │   │   ├── badAllowlist.jsx.snap\n    │   │       │   │   │   ├── badAllowlist.options.json\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useValidForDirection/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── useValidTypeof/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   └── useYield/\n    │   │       │   │       ├── invalid.js\n    │   │       │   │       ├── invalid.js.snap\n    │   │       │   │       ├── valid.js\n    │   │       │   │       └── valid.js.snap\n    │   │       │   ├── nursery/\n    │   │       │   │   ├── noFloatingPromises/\n    │   │       │   │   │   ├── 01_invalid.ts\n    │   │       │   │   │   ├── 01_invalid.ts.snap\n    │   │       │   │   │   ├── 04_invalid.ts\n    │   │       │   │   │   ├── 04_invalid.ts.snap\n    │   │       │   │   │   ├── 09_invalid.ts\n    │   │       │   │   │   ├── 09_invalid.ts.snap\n    │   │       │   │   │   ├── 11_invalid.ts\n    │   │       │   │   │   ├── 11_invalid.ts.snap\n    │   │       │   │   │   ├── 12_invalid.ts\n    │   │       │   │   │   ├── 12_invalid.ts.snap\n    │   │       │   │   │   ├── 13_invalid.ts\n    │   │       │   │   │   ├── 13_invalid.ts.snap\n    │   │       │   │   │   ├── 13_valid.ts\n    │   │       │   │   │   ├── 13_valid.ts.snap\n    │   │       │   │   │   ├── 14_invalid.ts\n    │   │       │   │   │   ├── 14_invalid.ts.snap\n    │   │       │   │   │   ├── 14_valid.ts\n    │   │       │   │   │   ├── 14_valid.ts.snap\n    │   │       │   │   │   ├── 18_invalid.js\n    │   │       │   │   │   ├── 18_invalid.js.snap\n    │   │       │   │   │   ├── 19_invalid.ts\n    │   │       │   │   │   ├── 19_invalid.ts.snap\n    │   │       │   │   │   ├── 19_valid.ts\n    │   │       │   │   │   ├── 19_valid.ts.snap\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalidSyncCallbackInsideAsyncFn.ts\n    │   │       │   │   │   ├── invalidSyncCallbackInsideAsyncFn.ts.snap\n    │   │       │   │   │   ├── issue6985Valid.ts\n    │   │       │   │   │   ├── issue6985Valid.ts.snap\n    │   │       │   │   │   ├── panicBar.ts\n    │   │       │   │   │   ├── panicBar.ts.snap\n    │   │       │   │   │   ├── panicFoo.ts\n    │   │       │   │   │   ├── panicFoo.ts.snap\n    │   │       │   │   │   ├── promisedResult.ts\n    │   │       │   │   │   ├── promisedResult.ts.snap\n    │   │       │   │   │   ├── returnPromiseResult.ts\n    │   │       │   │   │   ├── returnPromiseResult.ts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   ├── valid.ts.snap\n    │   │       │   │   │   ├── validSyncCallbackInsideAsyncFn.ts\n    │   │       │   │   │   └── validSyncCallbackInsideAsyncFn.ts.snap\n    │   │       │   │   ├── noImportCycles/\n    │   │       │   │   │   ├── includeTypes.options.json\n    │   │       │   │   │   ├── includeTypes.ts\n    │   │       │   │   │   ├── includeTypes.ts.snap\n    │   │       │   │   │   ├── invalidBaz.js\n    │   │       │   │   │   ├── invalidBaz.js.snap\n    │   │       │   │   │   ├── invalidFoobar.js\n    │   │       │   │   │   ├── invalidFoobar.js.snap\n    │   │       │   │   │   ├── types.ts\n    │   │       │   │   │   ├── types.ts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   └── ignoreTypes/\n    │   │       │   │   │       ├── a.ts\n    │   │       │   │   │       ├── a.ts.snap\n    │   │       │   │   │       ├── b.ts\n    │   │       │   │   │       ├── b.ts.snap\n    │   │       │   │   │       ├── c.ts\n    │   │       │   │   │       └── c.ts.snap\n    │   │       │   │   ├── noMisusedPromises/\n    │   │       │   │   │   ├── checksConditionalsInvalid.ts\n    │   │       │   │   │   ├── checksConditionalsInvalid.ts.snap\n    │   │       │   │   │   ├── checksConditionalsValid.ts\n    │   │       │   │   │   ├── checksConditionalsValid.ts.snap\n    │   │       │   │   │   ├── checksSpreadsInvalid.ts\n    │   │       │   │   │   ├── checksSpreadsInvalid.ts.snap\n    │   │       │   │   │   ├── checksSpreadsValid.ts\n    │   │       │   │   │   ├── checksSpreadsValid.ts.snap\n    │   │       │   │   │   ├── checksVoidReturnInvalid.ts\n    │   │       │   │   │   ├── checksVoidReturnInvalid.ts.snap\n    │   │       │   │   │   ├── checksVoidReturnValid.ts\n    │   │       │   │   │   ├── checksVoidReturnValid.ts.snap\n    │   │       │   │   │   ├── issue6777Valid.ts\n    │   │       │   │   │   └── issue6777Valid.ts.snap\n    │   │       │   │   ├── noNextAsyncClientComponent/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   ├── valid.jsx.snap\n    │   │       │   │   │   ├── validClient.jsx\n    │   │       │   │   │   └── validClient.jsx.snap\n    │   │       │   │   ├── noNonNullAssertedOptionalChain/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noQwikUseVisibleTask/\n    │   │       │   │   │   └── noQwikUseVisibleTask/\n    │   │       │   │   │       ├── invalid.js\n    │   │       │   │   │       ├── invalid.js.snap\n    │   │       │   │   │       ├── valid.js\n    │   │       │   │   │       └── valid.js.snap\n    │   │       │   │   ├── noSecrets/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid_entropy_high.js\n    │   │       │   │   │   ├── invalid_entropy_high.js.snap\n    │   │       │   │   │   ├── invalid_entropy_high.options.json\n    │   │       │   │   │   ├── invalid_entropy_low.js\n    │   │       │   │   │   ├── invalid_entropy_low.js.snap\n    │   │       │   │   │   ├── invalid_entropy_low.options.json\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noShadow/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid-func-in-type.ts\n    │   │       │   │   │   ├── valid-func-in-type.ts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── eslint/\n    │   │       │   │   │   │   ├── invalid-01.js\n    │   │       │   │   │   │   ├── invalid-01.js.snap\n    │   │       │   │   │   │   ├── invalid-02.js\n    │   │       │   │   │   │   ├── invalid-02.js.snap\n    │   │       │   │   │   │   ├── invalid-03.js\n    │   │       │   │   │   │   ├── invalid-03.js.snap\n    │   │       │   │   │   │   ├── invalid-04.js\n    │   │       │   │   │   │   ├── invalid-04.js.snap\n    │   │       │   │   │   │   ├── invalid-05.js\n    │   │       │   │   │   │   ├── invalid-05.js.snap\n    │   │       │   │   │   │   ├── invalid-06.js\n    │   │       │   │   │   │   ├── invalid-06.js.snap\n    │   │       │   │   │   │   ├── invalid-07.js\n    │   │       │   │   │   │   ├── invalid-07.js.snap\n    │   │       │   │   │   │   ├── invalid-08.js\n    │   │       │   │   │   │   ├── invalid-08.js.snap\n    │   │       │   │   │   │   ├── invalid-10.js\n    │   │       │   │   │   │   ├── invalid-10.js.snap\n    │   │       │   │   │   │   ├── invalid-11.js\n    │   │       │   │   │   │   ├── invalid-11.js.snap\n    │   │       │   │   │   │   ├── invalid-12.js\n    │   │       │   │   │   │   ├── invalid-12.js.snap\n    │   │       │   │   │   │   ├── invalid-13.js\n    │   │       │   │   │   │   ├── invalid-13.js.snap\n    │   │       │   │   │   │   ├── invalid-14.js\n    │   │       │   │   │   │   ├── invalid-14.js.snap\n    │   │       │   │   │   │   ├── invalid-15.js\n    │   │       │   │   │   │   ├── invalid-15.js.snap\n    │   │       │   │   │   │   ├── invalid-16.js\n    │   │       │   │   │   │   ├── invalid-16.js.snap\n    │   │       │   │   │   │   ├── invalid-17.js\n    │   │       │   │   │   │   ├── invalid-17.js.snap\n    │   │       │   │   │   │   ├── invalid-18.js\n    │   │       │   │   │   │   ├── invalid-18.js.snap\n    │   │       │   │   │   │   ├── invalid-19.js\n    │   │       │   │   │   │   ├── invalid-19.js.snap\n    │   │       │   │   │   │   ├── invalid-20.js\n    │   │       │   │   │   │   ├── invalid-20.js.snap\n    │   │       │   │   │   │   ├── invalid-21.js\n    │   │       │   │   │   │   ├── invalid-21.js.snap\n    │   │       │   │   │   │   ├── invalid-22.js\n    │   │       │   │   │   │   ├── invalid-22.js.snap\n    │   │       │   │   │   │   ├── invalid-23.js\n    │   │       │   │   │   │   ├── invalid-23.js.snap\n    │   │       │   │   │   │   ├── invalid-24.js\n    │   │       │   │   │   │   ├── invalid-24.js.snap\n    │   │       │   │   │   │   ├── invalid-25.js\n    │   │       │   │   │   │   ├── invalid-25.js.snap\n    │   │       │   │   │   │   ├── invalid-26.js\n    │   │       │   │   │   │   ├── invalid-26.js.snap\n    │   │       │   │   │   │   ├── invalid-27.js\n    │   │       │   │   │   │   ├── invalid-27.js.snap\n    │   │       │   │   │   │   ├── invalid-28.js\n    │   │       │   │   │   │   ├── invalid-28.js.snap\n    │   │       │   │   │   │   ├── invalid-29.js\n    │   │       │   │   │   │   ├── invalid-29.js.snap\n    │   │       │   │   │   │   ├── invalid-30.js\n    │   │       │   │   │   │   ├── invalid-30.js.snap\n    │   │       │   │   │   │   ├── invalid-31.js\n    │   │       │   │   │   │   ├── invalid-31.js.snap\n    │   │       │   │   │   │   ├── invalid-32.js\n    │   │       │   │   │   │   ├── invalid-32.js.snap\n    │   │       │   │   │   │   ├── valid-01.js\n    │   │       │   │   │   │   ├── valid-01.js.snap\n    │   │       │   │   │   │   ├── valid-02.js\n    │   │       │   │   │   │   ├── valid-02.js.snap\n    │   │       │   │   │   │   ├── valid-03.js\n    │   │       │   │   │   │   ├── valid-03.js.snap\n    │   │       │   │   │   │   ├── valid-04.js\n    │   │       │   │   │   │   ├── valid-04.js.snap\n    │   │       │   │   │   │   ├── valid-05.js\n    │   │       │   │   │   │   ├── valid-05.js.snap\n    │   │       │   │   │   │   ├── valid-06.js\n    │   │       │   │   │   │   ├── valid-06.js.snap\n    │   │       │   │   │   │   ├── valid-07.js\n    │   │       │   │   │   │   ├── valid-07.js.snap\n    │   │       │   │   │   │   ├── valid-08.js\n    │   │       │   │   │   │   ├── valid-08.js.snap\n    │   │       │   │   │   │   ├── valid-09.js\n    │   │       │   │   │   │   ├── valid-09.js.snap\n    │   │       │   │   │   │   ├── valid-10.js\n    │   │       │   │   │   │   ├── valid-10.js.snap\n    │   │       │   │   │   │   ├── valid-11.js\n    │   │       │   │   │   │   ├── valid-11.js.snap\n    │   │       │   │   │   │   ├── valid-12.js\n    │   │       │   │   │   │   ├── valid-12.js.snap\n    │   │       │   │   │   │   ├── valid-13.js\n    │   │       │   │   │   │   ├── valid-13.js.snap\n    │   │       │   │   │   │   ├── valid-14.js\n    │   │       │   │   │   │   ├── valid-14.js.snap\n    │   │       │   │   │   │   ├── valid-15.js\n    │   │       │   │   │   │   ├── valid-15.js.snap\n    │   │       │   │   │   │   ├── valid-16.js\n    │   │       │   │   │   │   ├── valid-16.js.snap\n    │   │       │   │   │   │   ├── valid-17.js\n    │   │       │   │   │   │   ├── valid-17.js.snap\n    │   │       │   │   │   │   ├── valid-18.js\n    │   │       │   │   │   │   └── valid-18.js.snap\n    │   │       │   │   │   └── typescript-eslint/\n    │   │       │   │   │       ├── invalid-01.ts\n    │   │       │   │   │       ├── invalid-01.ts.snap\n    │   │       │   │   │       ├── invalid-02.ts\n    │   │       │   │   │       ├── invalid-02.ts.snap\n    │   │       │   │   │       ├── invalid-03.ts\n    │   │       │   │   │       ├── invalid-03.ts.snap\n    │   │       │   │   │       ├── invalid-04.ts\n    │   │       │   │   │       ├── invalid-04.ts.snap\n    │   │       │   │   │       ├── invalid-05.ts\n    │   │       │   │   │       ├── invalid-05.ts.snap\n    │   │       │   │   │       ├── invalid-06.ts\n    │   │       │   │   │       ├── invalid-06.ts.snap\n    │   │       │   │   │       ├── invalid-07.ts\n    │   │       │   │   │       ├── invalid-07.ts.snap\n    │   │       │   │   │       ├── invalid-08.ts\n    │   │       │   │   │       ├── invalid-08.ts.snap\n    │   │       │   │   │       ├── valid-01.ts\n    │   │       │   │   │       ├── valid-01.ts.snap\n    │   │       │   │   │       ├── valid-02.ts\n    │   │       │   │   │       ├── valid-02.ts.snap\n    │   │       │   │   │       ├── valid-03.ts\n    │   │       │   │   │       ├── valid-03.ts.snap\n    │   │       │   │   │       ├── valid-04.ts\n    │   │       │   │   │       └── valid-04.ts.snap\n    │   │       │   │   ├── noUnnecessaryConditions/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noUnresolvedImports/\n    │   │       │   │   │   ├── bar.ts\n    │   │       │   │   │   ├── bar.ts.snap\n    │   │       │   │   │   ├── foo.js\n    │   │       │   │   │   ├── foo.js.snap\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUselessUndefined/\n    │   │       │   │   │   ├── invalid.json\n    │   │       │   │   │   ├── invalid.json.snap\n    │   │       │   │   │   ├── valid.json\n    │   │       │   │   │   └── valid.json.snap\n    │   │       │   │   ├── noVueDataObjectDeclaration/\n    │   │       │   │   │   ├── invalid-createapp-mount-object-data.vue\n    │   │       │   │   │   ├── invalid-createapp-mount-object-data.vue.snap\n    │   │       │   │   │   ├── invalid-createapp-object-data.vue\n    │   │       │   │   │   ├── invalid-createapp-object-data.vue.snap\n    │   │       │   │   │   ├── invalid-export-default-object-data.vue\n    │   │       │   │   │   ├── invalid-export-default-object-data.vue.snap\n    │   │       │   │   │   ├── invalid-export-default-parenthesized-object-data.vue\n    │   │       │   │   │   ├── invalid-export-default-parenthesized-object-data.vue.snap\n    │   │       │   │   │   ├── valid-createapp-component-function-data.vue\n    │   │       │   │   │   ├── valid-createapp-component-function-data.vue.snap\n    │   │       │   │   │   ├── valid-createapp-function-data-mount.vue\n    │   │       │   │   │   ├── valid-createapp-function-data-mount.vue.snap\n    │   │       │   │   │   ├── valid-createapp-spread-method-data.vue\n    │   │       │   │   │   ├── valid-createapp-spread-method-data.vue.snap\n    │   │       │   │   │   ├── valid-export-default-arrow-data.vue\n    │   │       │   │   │   ├── valid-export-default-arrow-data.vue.snap\n    │   │       │   │   │   ├── valid-export-default-data-in-methods.vue\n    │   │       │   │   │   ├── valid-export-default-data-in-methods.vue.snap\n    │   │       │   │   │   ├── valid-export-default-function-data.vue\n    │   │       │   │   │   ├── valid-export-default-function-data.vue.snap\n    │   │       │   │   │   ├── valid-export-default-method-data-with-methods.vue\n    │   │       │   │   │   ├── valid-export-default-method-data-with-methods.vue.snap\n    │   │       │   │   │   ├── valid-new-vue-function-data.js\n    │   │       │   │   │   ├── valid-new-vue-function-data.js.snap\n    │   │       │   │   │   ├── valid-new-vue-method-shorthand-data.vue\n    │   │       │   │   │   └── valid-new-vue-method-shorthand-data.vue.snap\n    │   │       │   │   ├── noVueReservedKeys/\n    │   │       │   │   │   ├── invalid-async-data.vue\n    │   │       │   │   │   ├── invalid-async-data.vue.snap\n    │   │       │   │   │   ├── invalid-computed.vue\n    │   │       │   │   │   ├── invalid-computed.vue.snap\n    │   │       │   │   │   ├── invalid-data-arrow-function.vue\n    │   │       │   │   │   ├── invalid-data-arrow-function.vue.snap\n    │   │       │   │   │   ├── invalid-data-function.vue\n    │   │       │   │   │   ├── invalid-data-function.vue.snap\n    │   │       │   │   │   ├── invalid-data-method.vue\n    │   │       │   │   │   ├── invalid-data-method.vue.snap\n    │   │       │   │   │   ├── invalid-data-object.vue\n    │   │       │   │   │   ├── invalid-data-object.vue.snap\n    │   │       │   │   │   ├── invalid-data-short-arrow-function.vue\n    │   │       │   │   │   ├── invalid-data-short-arrow-function.vue.snap\n    │   │       │   │   │   ├── invalid-define-props-object.vue\n    │   │       │   │   │   ├── invalid-define-props-object.vue.snap\n    │   │       │   │   │   ├── invalid-methods.vue\n    │   │       │   │   │   ├── invalid-methods.vue.snap\n    │   │       │   │   │   ├── invalid-props-array.vue\n    │   │       │   │   │   ├── invalid-props-array.vue.snap\n    │   │       │   │   │   ├── invalid-props-object.vue\n    │   │       │   │   │   ├── invalid-props-object.vue.snap\n    │   │       │   │   │   ├── invalid-setup-interface.vue\n    │   │       │   │   │   ├── invalid-setup-interface.vue.snap\n    │   │       │   │   │   ├── invalid-setup-type-alias.vue\n    │   │       │   │   │   ├── invalid-setup-type-alias.vue.snap\n    │   │       │   │   │   ├── invalid-type-inline.vue\n    │   │       │   │   │   ├── invalid-type-inline.vue.snap\n    │   │       │   │   │   ├── valid-data-arrow-function.vue\n    │   │       │   │   │   ├── valid-data-arrow-function.vue.snap\n    │   │       │   │   │   ├── valid-data-method.vue\n    │   │       │   │   │   ├── valid-data-method.vue.snap\n    │   │       │   │   │   ├── valid-data-short-arrow-function.vue\n    │   │       │   │   │   ├── valid-data-short-arrow-function.vue.snap\n    │   │       │   │   │   ├── valid-props-object.vue\n    │   │       │   │   │   ├── valid-props-object.vue.snap\n    │   │       │   │   │   ├── valid-setup-data.vue\n    │   │       │   │   │   └── valid-setup-data.vue.snap\n    │   │       │   │   ├── noVueReservedProps/\n    │   │       │   │   │   ├── invalid-create-app.vue\n    │   │       │   │   │   ├── invalid-create-app.vue.snap\n    │   │       │   │   │   ├── invalid-define-component-setup.js\n    │   │       │   │   │   ├── invalid-define-component-setup.js.snap\n    │   │       │   │   │   ├── invalid-define-component.js\n    │   │       │   │   │   ├── invalid-define-component.js.snap\n    │   │       │   │   │   ├── invalid-define-props-array.vue\n    │   │       │   │   │   ├── invalid-define-props-array.vue.snap\n    │   │       │   │   │   ├── invalid-define-props-interface.vue\n    │   │       │   │   │   ├── invalid-define-props-interface.vue.snap\n    │   │       │   │   │   ├── invalid-define-props-object.vue\n    │   │       │   │   │   ├── invalid-define-props-object.vue.snap\n    │   │       │   │   │   ├── invalid-define-props-type-alias.vue\n    │   │       │   │   │   ├── invalid-define-props-type-alias.vue.snap\n    │   │       │   │   │   ├── invalid-define-props-type-inline.vue\n    │   │       │   │   │   ├── invalid-define-props-type-inline.vue.snap\n    │   │       │   │   │   ├── invalid-export-default-array.vue\n    │   │       │   │   │   ├── invalid-export-default-array.vue.snap\n    │   │       │   │   │   ├── invalid-export-default-object.vue\n    │   │       │   │   │   ├── invalid-export-default-object.vue.snap\n    │   │       │   │   │   ├── valid-create-app.js\n    │   │       │   │   │   ├── valid-create-app.js.snap\n    │   │       │   │   │   ├── valid-define-component-setup.js.snap\n    │   │       │   │   │   ├── valid-define-component.js\n    │   │       │   │   │   ├── valid-define-component.js.snap\n    │   │       │   │   │   ├── valid-define-props-array.vue\n    │   │       │   │   │   ├── valid-define-props-array.vue.snap\n    │   │       │   │   │   ├── valid-define-props-interface.vue\n    │   │       │   │   │   ├── valid-define-props-interface.vue.snap\n    │   │       │   │   │   ├── valid-define-props-object.vue\n    │   │       │   │   │   ├── valid-define-props-object.vue.snap\n    │   │       │   │   │   ├── valid-define-props-type-alias.vue\n    │   │       │   │   │   ├── valid-define-props-type-alias.vue.snap\n    │   │       │   │   │   ├── valid-define-props-type-inline.vue\n    │   │       │   │   │   ├── valid-define-props-type-inline.vue.snap\n    │   │       │   │   │   ├── valid-export-default-non-props.vue\n    │   │       │   │   │   ├── valid-export-default-non-props.vue.snap\n    │   │       │   │   │   ├── valid-export-default-props-array.vue\n    │   │       │   │   │   ├── valid-export-default-props-array.vue.snap\n    │   │       │   │   │   ├── valid-export-default-props-object.vue\n    │   │       │   │   │   └── valid-export-default-props-object.vue.snap\n    │   │       │   │   ├── useAnchorHref/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid-2.jsx\n    │   │       │   │   │   ├── valid-2.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useConsistentTypeDefinitions/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalidType.options.json\n    │   │       │   │   │   ├── invalidType.ts\n    │   │       │   │   │   ├── invalidType.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   ├── valid.ts.snap\n    │   │       │   │   │   ├── validType.options.json\n    │   │       │   │   │   ├── validType.ts\n    │   │       │   │   │   └── validType.ts.snap\n    │   │       │   │   ├── useExhaustiveSwitchCases/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalidIssue6891.ts\n    │   │       │   │   │   ├── invalidIssue6891.ts.snap\n    │   │       │   │   │   ├── invalidIssue6939.ts\n    │   │       │   │   │   ├── invalidIssue6939.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useExplicitType/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalidArguments.ts\n    │   │       │   │   │   ├── invalidArguments.ts.snap\n    │   │       │   │   │   ├── valid.d.ts\n    │   │       │   │   │   ├── valid.d.ts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   ├── valid.ts.snap\n    │   │       │   │   │   ├── validInferrable.ts\n    │   │       │   │   │   └── validInferrable.ts.snap\n    │   │       │   │   ├── useImageSize/\n    │   │       │   │   │   ├── invalid-2.jsx\n    │   │       │   │   │   ├── invalid-2.jsx.snap\n    │   │       │   │   │   ├── invalid-3.jsx\n    │   │       │   │   │   ├── invalid-3.jsx.snap\n    │   │       │   │   │   ├── invalid-4.jsx\n    │   │       │   │   │   ├── invalid-4.jsx.snap\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid-2.jsx\n    │   │       │   │   │   ├── valid-2.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useMaxParams/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalidCustomMax.js\n    │   │       │   │   │   ├── invalidCustomMax.js.snap\n    │   │       │   │   │   ├── invalidCustomMax.options.json\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useQwikClasslist/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useReactFunctionComponents/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   └── useSortedClasses/\n    │   │       │   │       ├── codeOptionsSorted.jsx\n    │   │       │   │       ├── codeOptionsSorted.jsx.snap\n    │   │       │   │       ├── codeOptionsSorted.options.json\n    │   │       │   │       ├── codeOptionsUnsorted.jsx\n    │   │       │   │       ├── codeOptionsUnsorted.jsx.snap\n    │   │       │   │       ├── codeOptionsUnsorted.options.json\n    │   │       │   │       ├── issue_3394.jsx\n    │   │       │   │       ├── issue_3394.jsx.snap\n    │   │       │   │       ├── issue_4041.jsx\n    │   │       │   │       ├── issue_4041.jsx.snap\n    │   │       │   │       ├── issue_4855.jsx\n    │   │       │   │       ├── issue_4855.jsx.snap\n    │   │       │   │       ├── issue_4855.options.json\n    │   │       │   │       ├── issue_5601.jsx\n    │   │       │   │       ├── issue_5601.jsx.snap\n    │   │       │   │       ├── quoteStyleInFunction.jsx\n    │   │       │   │       ├── quoteStyleInFunction.jsx.snap\n    │   │       │   │       ├── quoteStyleInFunction.options.json\n    │   │       │   │       ├── sorted.jsx\n    │   │       │   │       ├── sorted.jsx.snap\n    │   │       │   │       ├── templateLiteralSpace.jsx\n    │   │       │   │       ├── templateLiteralSpace.jsx.snap\n    │   │       │   │       ├── unsorted.jsx\n    │   │       │   │       ├── unsorted.jsx.snap\n    │   │       │   │       ├── whitespace.jsx\n    │   │       │   │       └── whitespace.jsx.snap\n    │   │       │   ├── performance/\n    │   │       │   │   ├── noAccumulatingSpread/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── noAwaitInLoops/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noBarrelFile/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalid_default_named_alias_reexport.ts\n    │   │       │   │   │   ├── invalid_default_named_alias_reexport.ts.snap\n    │   │       │   │   │   ├── invalid_named_alias_reexport.ts\n    │   │       │   │   │   ├── invalid_named_alias_reexport.ts.snap\n    │   │       │   │   │   ├── invalid_named_reexprt.ts\n    │   │       │   │   │   ├── invalid_named_reexprt.ts.snap\n    │   │       │   │   │   ├── invalid_wild_alias_reexport.ts\n    │   │       │   │   │   ├── invalid_wild_alias_reexport.ts.snap\n    │   │       │   │   │   ├── invalid_wild_reexport.ts\n    │   │       │   │   │   ├── invalid_wild_reexport.ts.snap\n    │   │       │   │   │   ├── valid.d.ts\n    │   │       │   │   │   ├── valid.d.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noDelete/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── noDynamicNamespaceImportAccess/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noImgElement/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noNamespaceImport/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noReExportAll/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noUnwantedPolyfillio/\n    │   │       │   │   │   ├── invalid-next-script.jsx\n    │   │       │   │   │   ├── invalid-next-script.jsx.snap\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useGoogleFontPreconnect/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useSolidForComponent/\n    │   │       │   │   │   ├── invalid.tsx\n    │   │       │   │   │   ├── invalid.tsx.snap\n    │   │       │   │   │   ├── valid.tsx\n    │   │       │   │   │   └── valid.tsx.snap\n    │   │       │   │   └── useTopLevelRegex/\n    │   │       │   │       ├── invalid.js\n    │   │       │   │       ├── invalid.js.snap\n    │   │       │   │       ├── valid.js\n    │   │       │   │       └── valid.js.snap\n    │   │       │   ├── security/\n    │   │       │   │   ├── noBlankTarget/\n    │   │       │   │   │   ├── allowDomains.jsx\n    │   │       │   │   │   ├── allowDomains.jsx.snap\n    │   │       │   │   │   ├── allowDomains.options.json\n    │   │       │   │   │   ├── disallowNoReferrer.jsx\n    │   │       │   │   │   ├── disallowNoReferrer.jsx.snap\n    │   │       │   │   │   ├── disallowNoReferrer.options.json\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noDangerouslySetInnerHtml/\n    │   │       │   │   │   ├── createElementBindingInvalid.js\n    │   │       │   │   │   ├── createElementBindingInvalid.js.snap\n    │   │       │   │   │   ├── createElementBindingValid.js\n    │   │       │   │   │   ├── createElementBindingValid.js.snap\n    │   │       │   │   │   ├── insideJsx.jsx\n    │   │       │   │   │   ├── insideJsx.jsx.snap\n    │   │       │   │   │   ├── reactCreateElement.js\n    │   │       │   │   │   └── reactCreateElement.js.snap\n    │   │       │   │   ├── noDangerouslySetInnerHtmlWithChildren/\n    │   │       │   │   │   ├── createElement.js\n    │   │       │   │   │   ├── createElement.js.snap\n    │   │       │   │   │   ├── inJsx.jsx\n    │   │       │   │   │   └── inJsx.jsx.snap\n    │   │       │   │   └── noGlobalEval/\n    │   │       │   │       ├── invalid.js\n    │   │       │   │       ├── invalid.js.snap\n    │   │       │   │       ├── valid.js\n    │   │       │   │       ├── valid.js.snap\n    │   │       │   │       ├── validtest.cjs\n    │   │       │   │       └── validtest.cjs.snap\n    │   │       │   ├── source/\n    │   │       │   │   ├── organizeImports/\n    │   │       │   │   │   ├── chunk_newline.js\n    │   │       │   │   │   ├── chunk_newline.js.snap\n    │   │       │   │   │   ├── chunks.js\n    │   │       │   │   │   ├── chunks.js.snap\n    │   │       │   │   │   ├── custom-order-mixed-glob-groups.js\n    │   │       │   │   │   ├── custom-order-mixed-glob-groups.js.snap\n    │   │       │   │   │   ├── custom-order-mixed-glob-groups.options.json\n    │   │       │   │   │   ├── custom-order-sorted-imports-missing-blank-lines.js\n    │   │       │   │   │   ├── custom-order-sorted-imports-missing-blank-lines.js.snap\n    │   │       │   │   │   ├── custom-order-sorted-imports-missing-blank-lines.options.json\n    │   │       │   │   │   ├── custom-order-unsorted-imports-missing-blank-lines.js\n    │   │       │   │   │   ├── custom-order-unsorted-imports-missing-blank-lines.js.snap\n    │   │       │   │   │   ├── custom-order-unsorted-imports-missing-blank-lines.options.json\n    │   │       │   │   │   ├── custom-order.js\n    │   │       │   │   │   ├── custom-order.js.snap\n    │   │       │   │   │   ├── custom-order.options.json\n    │   │       │   │   │   ├── custom-sort-lexicographic.js\n    │   │       │   │   │   ├── custom-sort-lexicographic.js.snap\n    │   │       │   │   │   ├── custom-sort-lexicographic.options.json\n    │   │       │   │   │   ├── custom-sort-natural.js\n    │   │       │   │   │   ├── custom-sort-natural.js.snap\n    │   │       │   │   │   ├── custom-sort-natural.options.json\n    │   │       │   │   │   ├── issue-5710.js\n    │   │       │   │   │   ├── issue-5710.js.snap\n    │   │       │   │   │   ├── issue5985.js\n    │   │       │   │   │   ├── issue5985.js.snap\n    │   │       │   │   │   ├── issue6211.js\n    │   │       │   │   │   ├── issue6211.js.snap\n    │   │       │   │   │   ├── issue6492.js\n    │   │       │   │   │   ├── issue6492.js.snap\n    │   │       │   │   │   ├── issue6492.options.json\n    │   │       │   │   │   ├── mergeable-with_header.js\n    │   │       │   │   │   ├── mergeable-with_header.js.snap\n    │   │       │   │   │   ├── mergeable-with_leading_newline.js\n    │   │       │   │   │   ├── mergeable-with_leading_newline.js.snap\n    │   │       │   │   │   ├── mergeable_export.ts\n    │   │       │   │   │   ├── mergeable_export.ts.snap\n    │   │       │   │   │   ├── mergeable_imports.ts\n    │   │       │   │   │   ├── mergeable_imports.ts.snap\n    │   │       │   │   │   ├── mergeable_unsorted_imports.ts\n    │   │       │   │   │   ├── mergeable_unsorted_imports.ts.snap\n    │   │       │   │   │   ├── one-liner.js\n    │   │       │   │   │   ├── one-liner.js.snap\n    │   │       │   │   │   ├── single-chunk-imports.js\n    │   │       │   │   │   ├── single-chunk-imports.js.snap\n    │   │       │   │   │   ├── suppressed-unsorted.js\n    │   │       │   │   │   ├── suppressed-unsorted.js.snap\n    │   │       │   │   │   ├── type-first-groups.options.json\n    │   │       │   │   │   ├── type-first-groups.ts\n    │   │       │   │   │   ├── type-first-groups.ts.snap\n    │   │       │   │   │   ├── type-last-groups.options.json\n    │   │       │   │   │   ├── type-last-groups.ts\n    │   │       │   │   │   ├── type-last-groups.ts.snap\n    │   │       │   │   │   ├── unorganized-export-attributes.js\n    │   │       │   │   │   ├── unorganized-export-attributes.js.snap\n    │   │       │   │   │   ├── unorganized-export-specifiers.js\n    │   │       │   │   │   ├── unorganized-export-specifiers.js.snap\n    │   │       │   │   │   ├── unorganized-import-attributes.js\n    │   │       │   │   │   ├── unorganized-import-attributes.js.snap\n    │   │       │   │   │   ├── unorganized-import-specifiers.js\n    │   │       │   │   │   ├── unorganized-import-specifiers.js.snap\n    │   │       │   │   │   ├── unsorted-alias.js\n    │   │       │   │   │   ├── unsorted-alias.js.snap\n    │   │       │   │   │   ├── unsorted-imports-empty-header.js\n    │   │       │   │   │   ├── unsorted-imports-empty-header.js.snap\n    │   │       │   │   │   ├── unsorted-same-source.ts\n    │   │       │   │   │   ├── unsorted-same-source.ts.snap\n    │   │       │   │   │   ├── unsorted-starts-with-blank-line.js\n    │   │       │   │   │   ├── unsorted-starts-with-blank-line.js.snap\n    │   │       │   │   │   ├── unsorted_export_chunk.js\n    │   │       │   │   │   └── unsorted_export_chunk.js.snap\n    │   │       │   │   ├── useSortedAttributes/\n    │   │       │   │   │   ├── sorted-lexicographic.jsx\n    │   │       │   │   │   ├── sorted-lexicographic.jsx.snap\n    │   │       │   │   │   ├── sorted-lexicographic.options.json\n    │   │       │   │   │   ├── sorted-natural.jsx\n    │   │       │   │   │   ├── sorted-natural.jsx.snap\n    │   │       │   │   │   ├── sorted-natural.options.json\n    │   │       │   │   │   ├── sorted.jsx\n    │   │       │   │   │   ├── sorted.jsx.snap\n    │   │       │   │   │   ├── unsorted.jsx\n    │   │       │   │   │   └── unsorted.jsx.snap\n    │   │       │   │   └── useSortedKeys/\n    │   │       │   │       ├── inline-comment.js\n    │   │       │   │       ├── inline-comment.js.snap\n    │   │       │   │       ├── issue6536.js\n    │   │       │   │       ├── issue6536.js.snap\n    │   │       │   │       ├── sorted-lexicographic.js\n    │   │       │   │       ├── sorted-lexicographic.js.snap\n    │   │       │   │       ├── sorted-lexicographic.options.json\n    │   │       │   │       ├── sorted-natural.js\n    │   │       │   │       ├── sorted-natural.js.snap\n    │   │       │   │       ├── sorted-natural.options.json\n    │   │       │   │       ├── sorted.js\n    │   │       │   │       ├── sorted.js.snap\n    │   │       │   │       ├── unsorted.js\n    │   │       │   │       └── unsorted.js.snap\n    │   │       │   ├── style/\n    │   │       │   │   ├── noCommonJs/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noDefaultExport/\n    │   │       │   │   │   ├── invalid.json\n    │   │       │   │   │   ├── invalid.json.snap\n    │   │       │   │   │   ├── valid.cjs\n    │   │       │   │   │   ├── valid.cjs.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noDoneCallback/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noEnum/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noExportedImports/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noHeadElement/\n    │   │       │   │   │   ├── app/\n    │   │       │   │   │   │   ├── valid.jsx\n    │   │       │   │   │   │   └── valid.jsx.snap\n    │   │       │   │   │   └── pages/\n    │   │       │   │   │       ├── invalid.jsx\n    │   │       │   │   │       ├── invalid.jsx.snap\n    │   │       │   │   │       ├── valid.jsx\n    │   │       │   │   │       └── valid.jsx.snap\n    │   │       │   │   ├── noImplicitBoolean/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── noInferrableTypes/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noMagicNumbers/\n    │   │       │   │   │   ├── invalid.tsx\n    │   │       │   │   │   ├── invalid.tsx.snap\n    │   │       │   │   │   ├── valid.tsx\n    │   │       │   │   │   └── valid.tsx.snap\n    │   │       │   │   ├── noNamespace/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noNegationElse/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noNestedTernary/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noNonNullAssertion/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noParameterAssign/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── invalidFixUnsafe.js.snap\n    │   │       │   │   │   ├── parameterMutationDenyInvalid.js\n    │   │       │   │   │   ├── parameterMutationDenyInvalid.js.snap\n    │   │       │   │   │   ├── parameterMutationDenyInvalid.options.json\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── noParameterProperties/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noProcessEnv/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noRestrictedGlobals/\n    │   │       │   │   │   ├── additionalGlobal.js\n    │   │       │   │   │   ├── additionalGlobal.js.snap\n    │   │       │   │   │   ├── additionalGlobal.options.json\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noRestrictedImports/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.options.json\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.options.json\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── noRestrictedTypes/\n    │   │       │   │   │   ├── invalidCustom.options.json\n    │   │       │   │   │   ├── invalidCustom.ts\n    │   │       │   │   │   ├── invalidCustom.ts.snap\n    │   │       │   │   │   ├── validCustom.options.json\n    │   │       │   │   │   ├── validCustom.ts\n    │   │       │   │   │   └── validCustom.ts.snap\n    │   │       │   │   ├── noShoutyConstants/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noSubstr/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUnusedTemplateLiteral/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalidFixSafe.js\n    │   │       │   │   │   ├── invalidFixSafe.js.snap\n    │   │       │   │   │   ├── invalidFixSafe.options.json\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noUselessElse/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── missed.js\n    │   │       │   │   │   ├── missed.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── noYodaExpression/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalidRange.js\n    │   │       │   │   │   ├── invalidRange.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── validRange.js\n    │   │       │   │   │   └── validRange.js.snap\n    │   │       │   │   ├── useArrayLiterals/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useAsConstAssertion/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useAtIndex/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   └── valid.jsonc.snap\n    │   │       │   │   ├── useBlockStatements/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   └── invalid.js.snap\n    │   │       │   │   ├── useCollapsedElseIf/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useCollapsedIf/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useComponentExportOnlyModules/\n    │   │       │   │   │   ├── ignore_jsfile.js\n    │   │       │   │   │   ├── ignore_jsfile.js.snap\n    │   │       │   │   │   ├── invalid_component_and_constant.jsx\n    │   │       │   │   │   ├── invalid_component_and_constant.jsx.snap\n    │   │       │   │   │   ├── invalid_component_and_default_class.jsx\n    │   │       │   │   │   ├── invalid_component_and_default_class.jsx.snap\n    │   │       │   │   │   ├── invalid_component_and_default_function.jsx\n    │   │       │   │   │   ├── invalid_component_and_default_function.jsx.snap\n    │   │       │   │   │   ├── invalid_component_and_default_variable.jsx\n    │   │       │   │   │   ├── invalid_component_and_default_variable.jsx.snap\n    │   │       │   │   │   ├── invalid_component_and_enum.tsx\n    │   │       │   │   │   ├── invalid_component_and_enum.tsx.snap\n    │   │       │   │   │   ├── invalid_component_and_export_non_in_ignore_export_names.jsx\n    │   │       │   │   │   ├── invalid_component_and_export_non_in_ignore_export_names.jsx.snap\n    │   │       │   │   │   ├── invalid_component_and_export_non_in_ignore_export_names.options.json\n    │   │       │   │   │   ├── invalid_component_and_function.jsx\n    │   │       │   │   │   ├── invalid_component_and_function.jsx.snap\n    │   │       │   │   │   ├── invalid_component_and_function_with_ignore_constant_export.jsx\n    │   │       │   │   │   ├── invalid_component_and_function_with_ignore_constant_export.jsx.snap\n    │   │       │   │   │   ├── invalid_component_and_function_with_ignore_constant_export.options.json\n    │   │       │   │   │   ├── invalid_component_and_variable_clause.jsx\n    │   │       │   │   │   ├── invalid_component_and_variable_clause.jsx.snap\n    │   │       │   │   │   ├── invalid_hooked_component.jsx\n    │   │       │   │   │   ├── invalid_hooked_component.jsx.snap\n    │   │       │   │   │   ├── invalid_unexported_component.jsx\n    │   │       │   │   │   ├── invalid_unexported_component.jsx.snap\n    │   │       │   │   │   ├── valid_component_and_constant_with_ignored_constant_export.jsx\n    │   │       │   │   │   ├── valid_component_and_constant_with_ignored_constant_export.jsx.snap\n    │   │       │   │   │   ├── valid_component_and_constant_with_ignored_constant_export.options.json\n    │   │       │   │   │   ├── valid_component_and_ignore_export.jsx\n    │   │       │   │   │   ├── valid_component_and_ignore_export.jsx.snap\n    │   │       │   │   │   ├── valid_component_and_ignore_export.options.json\n    │   │       │   │   │   ├── valid_component_and_ignored_function_export.jsx\n    │   │       │   │   │   ├── valid_component_and_ignored_function_export.jsx.snap\n    │   │       │   │   │   ├── valid_component_and_ignored_function_export.options.json\n    │   │       │   │   │   ├── valid_component_and_number_constant_with_ignored_constant_export.jsx.snap\n    │   │       │   │   │   ├── valid_component_and_number_constant_with_ignored_constant_export.options.json\n    │   │       │   │   │   ├── valid_component_and_ts_type.tsx\n    │   │       │   │   │   ├── valid_component_and_ts_type.tsx.snap\n    │   │       │   │   │   ├── valid_component_with_interface.tsx\n    │   │       │   │   │   ├── valid_component_with_interface.tsx.snap\n    │   │       │   │   │   ├── valid_components.jsx\n    │   │       │   │   │   ├── valid_components.jsx.snap\n    │   │       │   │   │   ├── valid_components_clause.jsx\n    │   │       │   │   │   ├── valid_components_clause.jsx.snap\n    │   │       │   │   │   ├── valid_default_class_component.jsx\n    │   │       │   │   │   ├── valid_default_class_component.jsx.snap\n    │   │       │   │   │   ├── valid_default_component.jsx\n    │   │       │   │   │   ├── valid_default_component.jsx.snap\n    │   │       │   │   │   ├── valid_default_component_as_default.jsx\n    │   │       │   │   │   ├── valid_default_component_as_default.jsx.snap\n    │   │       │   │   │   ├── valid_default_function_component.jsx\n    │   │       │   │   │   ├── valid_default_function_component.jsx.snap\n    │   │       │   │   │   ├── valid_hooked_component.jsx\n    │   │       │   │   │   ├── valid_hooked_component.jsx.snap\n    │   │       │   │   │   ├── valid_ignored_function_export.jsx\n    │   │       │   │   │   ├── valid_ignored_function_export.jsx.snap\n    │   │       │   │   │   ├── valid_ignored_function_export.options.json\n    │   │       │   │   │   ├── valid_non_components_only.jsx\n    │   │       │   │   │   ├── valid_non_components_only.jsx.snap\n    │   │       │   │   │   ├── valid_ts_type_and_non_component.tsx\n    │   │       │   │   │   └── valid_ts_type_and_non_component.tsx.snap\n    │   │       │   │   ├── useConsistentArrayType/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalidShorthand.options.json\n    │   │       │   │   │   ├── invalidShorthand.ts\n    │   │       │   │   │   ├── invalidShorthand.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   ├── valid.ts.snap\n    │   │       │   │   │   ├── validGeneric.options.json\n    │   │       │   │   │   ├── validGeneric.ts\n    │   │       │   │   │   └── validGeneric.ts.snap\n    │   │       │   │   ├── useConsistentBuiltinInstantiation/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useConsistentCurlyBraces/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useConsistentMemberAccessibility/\n    │   │       │   │   │   ├── invalidExplicit.options.json\n    │   │       │   │   │   ├── invalidExplicit.ts\n    │   │       │   │   │   ├── invalidExplicit.ts.snap\n    │   │       │   │   │   ├── invalidNone.options.json\n    │   │       │   │   │   ├── invalidNone.ts\n    │   │       │   │   │   ├── invalidNone.ts.snap\n    │   │       │   │   │   ├── invalidNoPublic.options.json\n    │   │       │   │   │   ├── invalidNoPublic.ts\n    │   │       │   │   │   ├── invalidNoPublic.ts.snap\n    │   │       │   │   │   ├── validExplicit.options.json\n    │   │       │   │   │   ├── validExplicit.ts\n    │   │       │   │   │   ├── validExplicit.ts.snap\n    │   │       │   │   │   ├── validNone.options.json\n    │   │       │   │   │   ├── validNone.ts\n    │   │       │   │   │   ├── validNone.ts.snap\n    │   │       │   │   │   ├── validNoPublic.options.json\n    │   │       │   │   │   ├── validNoPublic.ts\n    │   │       │   │   │   └── validNoPublic.ts.snap\n    │   │       │   │   ├── useConsistentObjectDefinitions/\n    │   │       │   │   │   ├── invalidExplicit.js\n    │   │       │   │   │   ├── invalidExplicit.js.snap\n    │   │       │   │   │   ├── invalidExplicit.options.json\n    │   │       │   │   │   ├── invalidShorthand.js\n    │   │       │   │   │   ├── invalidShorthand.js.snap\n    │   │       │   │   │   ├── invalidShorthand.options.json\n    │   │       │   │   │   ├── validExplicit.js\n    │   │       │   │   │   ├── validExplicit.js.snap\n    │   │       │   │   │   ├── validExplicit.options.json\n    │   │       │   │   │   ├── validShorthand.js\n    │   │       │   │   │   ├── validShorthand.js.snap\n    │   │       │   │   │   └── validShorthand.options.json\n    │   │       │   │   ├── useConst/\n    │   │       │   │   │   ├── invalid.jsonc\n    │   │       │   │   │   ├── invalid.jsonc.snap\n    │   │       │   │   │   ├── invalidFixUnsafe.js\n    │   │       │   │   │   ├── invalidFixUnsafe.js.snap\n    │   │       │   │   │   ├── invalidFixUnsafe.options.json\n    │   │       │   │   │   ├── valid.jsonc\n    │   │       │   │   │   ├── valid.jsonc.snap\n    │   │       │   │   │   ├── validPartial.js\n    │   │       │   │   │   └── validPartial.js.snap\n    │   │       │   │   ├── useDefaultParameterLast/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useDefaultSwitchClause/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useEnumInitializers/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalid2.options.json\n    │   │       │   │   │   ├── invalid2.ts\n    │   │       │   │   │   ├── invalid2.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useExplicitLengthCheck/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useExponentiationOperator/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalidAdjacentTokens.js\n    │   │       │   │   │   ├── invalidAdjacentTokens.js.snap\n    │   │       │   │   │   ├── invalidBaseExponentHigherPrecedence.js\n    │   │       │   │   │   ├── invalidBaseExponentHigherPrecedence.js.snap\n    │   │       │   │   │   ├── invalidBaseExponentLowerPrecedence.js\n    │   │       │   │   │   ├── invalidBaseExponentLowerPrecedence.js.snap\n    │   │       │   │   │   ├── invalidClass.ts\n    │   │       │   │   │   ├── invalidClass.ts.snap\n    │   │       │   │   │   ├── invalidParentsWithHigherPrecedence.js\n    │   │       │   │   │   ├── invalidParentsWithHigherPrecedence.js.snap\n    │   │       │   │   │   ├── invalidParentsWithLowerPrecedence.js\n    │   │       │   │   │   ├── invalidParentsWithLowerPrecedence.js.snap\n    │   │       │   │   │   ├── invalidUnaryExpression.js\n    │   │       │   │   │   ├── invalidUnaryExpression.js.snap\n    │   │       │   │   │   ├── invalidWithComments.js\n    │   │       │   │   │   ├── invalidWithComments.js.snap\n    │   │       │   │   │   ├── invalidWithoutAutofix.js\n    │   │       │   │   │   ├── invalidWithoutAutofix.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── validLocalMath.js\n    │   │       │   │   │   └── validLocalMath.js.snap\n    │   │       │   │   ├── useExportsLast/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid_multiline_export.js\n    │   │       │   │   │   ├── invalid_multiline_export.js.snap\n    │   │       │   │   │   ├── invalid_multiple_separate_exports.js\n    │   │       │   │   │   ├── invalid_multiple_separate_exports.js.snap\n    │   │       │   │   │   ├── invalid_named_export.js\n    │   │       │   │   │   ├── invalid_named_export.js.snap\n    │   │       │   │   │   ├── invalid_re-export.js\n    │   │       │   │   │   ├── invalid_re-export.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid_empty_file.js\n    │   │       │   │   │   ├── valid_empty_file.js.snap\n    │   │       │   │   │   ├── valid_group_named_export.js\n    │   │       │   │   │   ├── valid_group_named_export.js.snap\n    │   │       │   │   │   ├── valid_multiline_export.js\n    │   │       │   │   │   ├── valid_multiline_export.js.snap\n    │   │       │   │   │   ├── valid_multiple_separate_exports.js\n    │   │       │   │   │   ├── valid_multiple_separate_exports.js.snap\n    │   │       │   │   │   ├── valid_named_export.js\n    │   │       │   │   │   ├── valid_named_export.js.snap\n    │   │       │   │   │   ├── valid_no_exports.js\n    │   │       │   │   │   ├── valid_no_exports.js.snap\n    │   │       │   │   │   ├── valid_only_exports.js\n    │   │       │   │   │   ├── valid_only_exports.js.snap\n    │   │       │   │   │   ├── valid_re-export.js\n    │   │       │   │   │   └── valid_re-export.js.snap\n    │   │       │   │   ├── useExportType/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── issue5382.ts\n    │   │       │   │   │   ├── issue5382.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useFilenamingConvention/\n    │   │       │   │   │   ├── %validMatch.options.json\n    │   │       │   │   │   ├── %validMatch.ts\n    │   │       │   │   │   ├── %validMatch.ts.snap\n    │   │       │   │   │   ├── (slug1).js\n    │   │       │   │   │   ├── (slug1).js.snap\n    │   │       │   │   │   ├── +in+valid.js\n    │   │       │   │   │   ├── +in+valid.js.snap\n    │   │       │   │   │   ├── +val_id.js\n    │   │       │   │   │   ├── +val_id.js.snap\n    │   │       │   │   │   ├── 0_start_with_digit.ts\n    │   │       │   │   │   ├── 0_start_with_digit.ts.snap\n    │   │       │   │   │   ├── [...slug2].js\n    │   │       │   │   │   ├── [...slug2].js.snap\n    │   │       │   │   │   ├── [[...slug3]].js\n    │   │       │   │   │   ├── [[...slug3]].js.snap\n    │   │       │   │   │   ├── [slug4].js\n    │   │       │   │   │   ├── [slug4].js.snap\n    │   │       │   │   │   ├── [slug_4].js\n    │   │       │   │   │   ├── [slug_4].js.snap\n    │   │       │   │   │   ├── _404.tsx\n    │   │       │   │   │   ├── _404.tsx.snap\n    │   │       │   │   │   ├── _UNDERSCOREINVALID.js\n    │   │       │   │   │   ├── _UNDERSCOREINVALID.js.snap\n    │   │       │   │   │   ├── _underscorevalid.js\n    │   │       │   │   │   ├── _underscorevalid.js.snap\n    │   │       │   │   │   ├── _valid.js.snap\n    │   │       │   │   │   ├── filename.INVALID-extension.js\n    │   │       │   │   │   ├── filename.INVALID-extension.js.snap\n    │   │       │   │   │   ├── filename.INVALID.js\n    │   │       │   │   │   ├── filename.INVALID.js.snap\n    │   │       │   │   │   ├── filename.INVALID.options.json\n    │   │       │   │   │   ├── filename.valid-kebab-extension.js\n    │   │       │   │   │   ├── filename.valid-kebab-extension.js.snap\n    │   │       │   │   │   ├── filename.valid_snake_ext.js\n    │   │       │   │   │   ├── filename.valid_snake_ext.js.snap\n    │   │       │   │   │   ├── filename.validCamelExt.js\n    │   │       │   │   │   ├── filename.validCamelExt.js.snap\n    │   │       │   │   │   ├── invalid-kebab-case.js\n    │   │       │   │   │   ├── invalid-kebab-case.js.snap\n    │   │       │   │   │   ├── invalid-kebab-case.options.json\n    │   │       │   │   │   ├── invalid-non-ascii-café.js\n    │   │       │   │   │   ├── invalid-non-ascii-café.js.snap\n    │   │       │   │   │   ├── invalid-non-ascii-café.options.json\n    │   │       │   │   │   ├── INVALID.js\n    │   │       │   │   │   ├── INVALID.js.snap\n    │   │       │   │   │   ├── Invalid_Renamed_Export.js\n    │   │       │   │   │   ├── Invalid_Renamed_Export.js.snap\n    │   │       │   │   │   ├── invalid_snake_case.js\n    │   │       │   │   │   ├── invalid_snake_case.js.snap\n    │   │       │   │   │   ├── invalid_snake_case.options.json\n    │   │       │   │   │   ├── invalidCamelCase.js\n    │   │       │   │   │   ├── invalidCamelCase.js.snap\n    │   │       │   │   │   ├── invalidCamelCase.options.json\n    │   │       │   │   │   ├── invalidMatch.js\n    │   │       │   │   │   ├── invalidMatch.js.snap\n    │   │       │   │   │   ├── invalidMatch.options.json\n    │   │       │   │   │   ├── invalidMatchExtension.INVALID.js\n    │   │       │   │   │   ├── invalidMatchExtension.INVALID.js.snap\n    │   │       │   │   │   ├── invalidMatchExtension.INVALID.options.json\n    │   │       │   │   │   ├── InvalidPascalCase.js\n    │   │       │   │   │   ├── InvalidPascalCase.js.snap\n    │   │       │   │   │   ├── invalidSTrictCase.js\n    │   │       │   │   │   ├── invalidSTrictCase.js.snap\n    │   │       │   │   │   ├── malformedOptions.js\n    │   │       │   │   │   ├── malformedOptions.js.snap\n    │   │       │   │   │   ├── malformedOptions.options.json\n    │   │       │   │   │   ├── malformedOptionsEmptyFilenameCases.js\n    │   │       │   │   │   ├── malformedOptionsEmptyFilenameCases.js.snap\n    │   │       │   │   │   ├── malformedOptionsEmptyFilenameCases.options.json\n    │   │       │   │   │   ├── valid-kebab-case.js\n    │   │       │   │   │   ├── valid-kebab-case.js.snap\n    │   │       │   │   │   ├── valid-non-ascii-café.js\n    │   │       │   │   │   ├── valid-non-ascii-café.js.snap\n    │   │       │   │   │   ├── valid-non-ascii-café.options.json\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── Valid_Renamed_Export.js\n    │   │       │   │   │   ├── Valid_Renamed_Export.js.snap\n    │   │       │   │   │   ├── Valid_Renamed_Export.snap\n    │   │       │   │   │   ├── valid_snake_case.js\n    │   │       │   │   │   ├── valid_snake_case.js.snap\n    │   │       │   │   │   ├── validCamelCase.js\n    │   │       │   │   │   ├── validCamelCase.js.snap\n    │   │       │   │   │   ├── validExportedConst.js\n    │   │       │   │   │   ├── validExportedConst.js.snap\n    │   │       │   │   │   ├── validExportedConst.options.json\n    │   │       │   │   │   ├── ValidMyClass.js\n    │   │       │   │   │   ├── ValidMyClass.js.snap\n    │   │       │   │   │   ├── ValidPascalCase.js\n    │   │       │   │   │   ├── ValidPascalCase.js.snap\n    │   │       │   │   │   ├── ValidPascalCase.options.json\n    │   │       │   │   │   ├── validSTrictCase.js\n    │   │       │   │   │   ├── validSTrictCase.js.snap\n    │   │       │   │   │   ├── validSTrictCase.options.json\n    │   │       │   │   │   ├── 안녕하세요.js\n    │   │       │   │   │   ├── 안녕하세요.js.snap\n    │   │       │   │   │   ├── 안녕하세요.options.json\n    │   │       │   │   │   ├── .valid.js\n    │   │       │   │   │   └── .valid.js.snap\n    │   │       │   │   ├── useForOf/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useFragmentSyntax/\n    │   │       │   │   │   ├── invalid.jsx\n    │   │       │   │   │   ├── invalid.jsx.snap\n    │   │       │   │   │   ├── valid.jsx\n    │   │       │   │   │   └── valid.jsx.snap\n    │   │       │   │   ├── useGroupedAccessorPairs/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useImportType/\n    │   │       │   │   │   ├── invalid-combined.ts\n    │   │       │   │   │   ├── invalid-combined.ts.snap\n    │   │       │   │   │   ├── invalid-default-imports.ts\n    │   │       │   │   │   ├── invalid-default-imports.ts.snap\n    │   │       │   │   │   ├── invalid-inline-type.options.json\n    │   │       │   │   │   ├── invalid-inline-type.ts\n    │   │       │   │   │   ├── invalid-inline-type.ts.snap\n    │   │       │   │   │   ├── invalid-named-imports.ts\n    │   │       │   │   │   ├── invalid-named-imports.ts.snap\n    │   │       │   │   │   ├── invalid-namespace-imports.ts\n    │   │       │   │   │   ├── invalid-namespace-imports.ts.snap\n    │   │       │   │   │   ├── invalid-separated-type.options.json\n    │   │       │   │   │   ├── invalid-separated-type.ts\n    │   │       │   │   │   ├── invalid-separated-type.ts.snap\n    │   │       │   │   │   ├── invalid-unused-react-types.options.json\n    │   │       │   │   │   ├── invalid-unused-react-types.tsx\n    │   │       │   │   │   ├── invalid-unused-react-types.tsx.snap\n    │   │       │   │   │   ├── valid-combined.ts\n    │   │       │   │   │   ├── valid-combined.ts.snap\n    │   │       │   │   │   ├── valid-default-imports.ts\n    │   │       │   │   │   ├── valid-default-imports.ts.snap\n    │   │       │   │   │   ├── valid-inline-type.options.json\n    │   │       │   │   │   ├── valid-inline-type.ts\n    │   │       │   │   │   ├── valid-inline-type.ts.snap\n    │   │       │   │   │   ├── valid-named-imports.ts\n    │   │       │   │   │   ├── valid-named-imports.ts.snap\n    │   │       │   │   │   ├── valid-namespace-imports.ts\n    │   │       │   │   │   ├── valid-namespace-imports.ts.snap\n    │   │       │   │   │   ├── valid-unused-react-combined.options.json\n    │   │       │   │   │   ├── valid-unused-react-combined.tsx\n    │   │       │   │   │   ├── valid-unused-react-combined.tsx.snap\n    │   │       │   │   │   ├── valid-unused-react-types.options.json\n    │   │       │   │   │   ├── valid-unused-react-types.tsx\n    │   │       │   │   │   ├── valid-unused-react-types.tsx.snap\n    │   │       │   │   │   ├── valid-unused-react.options.json\n    │   │       │   │   │   ├── valid-unused-react.tsx\n    │   │       │   │   │   ├── valid-unused-react.tsx.snap\n    │   │       │   │   │   ├── valid-unused.ts\n    │   │       │   │   │   └── valid-unused.ts.snap\n    │   │       │   │   ├── useLiteralEnumMembers/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useNamingConvention/\n    │   │       │   │   │   ├── invalidCatchParameter.js\n    │   │       │   │   │   ├── invalidCatchParameter.js.snap\n    │   │       │   │   │   ├── invalidClass.js\n    │   │       │   │   │   ├── invalidClass.js.snap\n    │   │       │   │   │   ├── invalidClassGetter.js\n    │   │       │   │   │   ├── invalidClassGetter.js.snap\n    │   │       │   │   │   ├── invalidClassMethod.js\n    │   │       │   │   │   ├── invalidClassMethod.js.snap\n    │   │       │   │   │   ├── invalidClassProperty.js\n    │   │       │   │   │   ├── invalidClassProperty.js.snap\n    │   │       │   │   │   ├── invalidClassSetter.js\n    │   │       │   │   │   ├── invalidClassSetter.js.snap\n    │   │       │   │   │   ├── invalidClassStaticGetter.js\n    │   │       │   │   │   ├── invalidClassStaticGetter.js.snap\n    │   │       │   │   │   ├── invalidClassStaticMethod.js\n    │   │       │   │   │   ├── invalidClassStaticMethod.js.snap\n    │   │       │   │   │   ├── invalidClassStaticSetter.js\n    │   │       │   │   │   ├── invalidClassStaticSetter.js.snap\n    │   │       │   │   │   ├── invalidComponent.jsx\n    │   │       │   │   │   ├── invalidComponent.jsx.snap\n    │   │       │   │   │   ├── invalidCustomRegexAnchor.js\n    │   │       │   │   │   ├── invalidCustomRegexAnchor.js.snap\n    │   │       │   │   │   ├── invalidCustomRegexAnchor.options.json\n    │   │       │   │   │   ├── invalidCustomStyle.options.json\n    │   │       │   │   │   ├── invalidCustomStyle.ts\n    │   │       │   │   │   ├── invalidCustomStyle.ts.snap\n    │   │       │   │   │   ├── invalidCustomStyleExceptions.options.json\n    │   │       │   │   │   ├── invalidCustomStyleExceptions.ts\n    │   │       │   │   │   ├── invalidCustomStyleExceptions.ts.snap\n    │   │       │   │   │   ├── invalidCustomStyleUnderscorePrivate.options.json\n    │   │       │   │   │   ├── invalidCustomStyleUnderscorePrivate.ts\n    │   │       │   │   │   ├── invalidCustomStyleUnderscorePrivate.ts.snap\n    │   │       │   │   │   ├── invalidEnum.ts\n    │   │       │   │   │   ├── invalidEnum.ts.snap\n    │   │       │   │   │   ├── invalidEnumMember.ts\n    │   │       │   │   │   ├── invalidEnumMember.ts.snap\n    │   │       │   │   │   ├── invalidExportAlias.js\n    │   │       │   │   │   ├── invalidExportAlias.js.snap\n    │   │       │   │   │   ├── invalidExportNamespace.js\n    │   │       │   │   │   ├── invalidExportNamespace.js.snap\n    │   │       │   │   │   ├── invalidFunction.js\n    │   │       │   │   │   ├── invalidFunction.js.snap\n    │   │       │   │   │   ├── invalidFunctionParameter.js\n    │   │       │   │   │   ├── invalidFunctionParameter.js.snap\n    │   │       │   │   │   ├── invalidGlobal.d.ts\n    │   │       │   │   │   ├── invalidGlobal.d.ts.snap\n    │   │       │   │   │   ├── invalidImportAlias.js\n    │   │       │   │   │   ├── invalidImportAlias.js.snap\n    │   │       │   │   │   ├── invalidImportNamespace.js\n    │   │       │   │   │   ├── invalidImportNamespace.js.snap\n    │   │       │   │   │   ├── invalidIndexParameter.ts\n    │   │       │   │   │   ├── invalidIndexParameter.ts.snap\n    │   │       │   │   │   ├── invalidInterface.ts\n    │   │       │   │   │   ├── invalidInterface.ts.snap\n    │   │       │   │   │   ├── invalidLocalVariable.js\n    │   │       │   │   │   ├── invalidLocalVariable.js.snap\n    │   │       │   │   │   ├── invalidNamespace.ts\n    │   │       │   │   │   ├── invalidNamespace.ts.snap\n    │   │       │   │   │   ├── invalidNonAscii.js\n    │   │       │   │   │   ├── invalidNonAscii.js.snap\n    │   │       │   │   │   ├── invalidObjectGetter.js\n    │   │       │   │   │   ├── invalidObjectGetter.js.snap\n    │   │       │   │   │   ├── invalidObjectMethod.js\n    │   │       │   │   │   ├── invalidObjectMethod.js.snap\n    │   │       │   │   │   ├── invalidObjectProperty.js\n    │   │       │   │   │   ├── invalidObjectProperty.js.snap\n    │   │       │   │   │   ├── invalidObjectSetter.js\n    │   │       │   │   │   ├── invalidObjectSetter.js.snap\n    │   │       │   │   │   ├── invalidParameterProperty.ts\n    │   │       │   │   │   ├── invalidParameterProperty.ts.snap\n    │   │       │   │   │   ├── invalidPropertyShorthand.ts\n    │   │       │   │   │   ├── invalidPropertyShorthand.ts.snap\n    │   │       │   │   │   ├── invalidStrictPascalCase.ts\n    │   │       │   │   │   ├── invalidStrictPascalCase.ts.snap\n    │   │       │   │   │   ├── invalidSyllabary.js\n    │   │       │   │   │   ├── invalidSyllabary.js.snap\n    │   │       │   │   │   ├── invalidSyllabary.options.json\n    │   │       │   │   │   ├── invalidTopLevelVariable.ts\n    │   │       │   │   │   ├── invalidTopLevelVariable.ts.snap\n    │   │       │   │   │   ├── invalidTypeAlias.ts\n    │   │       │   │   │   ├── invalidTypeAlias.ts.snap\n    │   │       │   │   │   ├── invalidTypeGetter.ts\n    │   │       │   │   │   ├── invalidTypeGetter.ts.snap\n    │   │       │   │   │   ├── invalidTypeMethod.ts\n    │   │       │   │   │   ├── invalidTypeMethod.ts.snap\n    │   │       │   │   │   ├── invalidTypeParameter.ts\n    │   │       │   │   │   ├── invalidTypeParameter.ts.snap\n    │   │       │   │   │   ├── invalidTypeProperty.ts\n    │   │       │   │   │   ├── invalidTypeProperty.ts.snap\n    │   │       │   │   │   ├── invalidTypeReadonlyProperty.ts\n    │   │       │   │   │   ├── invalidTypeReadonlyProperty.ts.snap\n    │   │       │   │   │   ├── invalidTypeSetter.ts\n    │   │       │   │   │   ├── invalidTypeSetter.ts.snap\n    │   │       │   │   │   ├── malformedOptions.js\n    │   │       │   │   │   ├── malformedOptions.js.snap\n    │   │       │   │   │   ├── malformedOptions.options.json\n    │   │       │   │   │   ├── malformedSelector.js\n    │   │       │   │   │   ├── malformedSelector.js.snap\n    │   │       │   │   │   ├── malformedSelector.options.json\n    │   │       │   │   │   ├── validCatchParameter.js\n    │   │       │   │   │   ├── validCatchParameter.js.snap\n    │   │       │   │   │   ├── validClass.js\n    │   │       │   │   │   ├── validClass.js.snap\n    │   │       │   │   │   ├── validClassGetter.js\n    │   │       │   │   │   ├── validClassGetter.js.snap\n    │   │       │   │   │   ├── validClassMethod.js\n    │   │       │   │   │   ├── validClassMethod.js.snap\n    │   │       │   │   │   ├── validClassNonStrictPascalCase.js\n    │   │       │   │   │   ├── validClassNonStrictPascalCase.js.snap\n    │   │       │   │   │   ├── validClassNonStrictPascalCase.options.json\n    │   │       │   │   │   ├── validClassProperty.js\n    │   │       │   │   │   ├── validClassProperty.js.snap\n    │   │       │   │   │   ├── validClassSetter.js\n    │   │       │   │   │   ├── validClassSetter.js.snap\n    │   │       │   │   │   ├── validClassStaticGetter.js\n    │   │       │   │   │   ├── validClassStaticGetter.js.snap\n    │   │       │   │   │   ├── validClassStaticMethod.js\n    │   │       │   │   │   ├── validClassStaticMethod.js.snap\n    │   │       │   │   │   ├── validClassStaticProperty.js\n    │   │       │   │   │   ├── validClassStaticProperty.js.snap\n    │   │       │   │   │   ├── validClassStaticSetter.js\n    │   │       │   │   │   ├── validClassStaticSetter.js.snap\n    │   │       │   │   │   ├── validComponentName.js\n    │   │       │   │   │   ├── validComponentName.js.snap\n    │   │       │   │   │   ├── validCustomStyle.options.json\n    │   │       │   │   │   ├── validCustomStyle.ts\n    │   │       │   │   │   ├── validCustomStyle.ts.snap\n    │   │       │   │   │   ├── validCustomStyleAbstractClass.options.json\n    │   │       │   │   │   ├── validCustomStyleAbstractClass.ts\n    │   │       │   │   │   ├── validCustomStyleAbstractClass.ts.snap\n    │   │       │   │   │   ├── validCustomStyleDollarSuffix.js\n    │   │       │   │   │   ├── validCustomStyleDollarSuffix.js.snap\n    │   │       │   │   │   ├── validCustomStyleDollarSuffix.options.json\n    │   │       │   │   │   ├── validCustomStyleExceptions.options.json\n    │   │       │   │   │   ├── validCustomStyleExceptions.ts\n    │   │       │   │   │   ├── validCustomStyleExceptions.ts.snap\n    │   │       │   │   │   ├── validCustomStyleUnderscorePrivate.options.json\n    │   │       │   │   │   ├── validCustomStyleUnderscorePrivate.ts\n    │   │       │   │   │   ├── validCustomStyleUnderscorePrivate.ts.snap\n    │   │       │   │   │   ├── validDestructuredObjectMember.js\n    │   │       │   │   │   ├── validDestructuredObjectMember.js.snap\n    │   │       │   │   │   ├── validEnum.ts\n    │   │       │   │   │   ├── validEnum.ts.snap\n    │   │       │   │   │   ├── validEnumMember.ts\n    │   │       │   │   │   ├── validEnumMember.ts.snap\n    │   │       │   │   │   ├── validEnumMemberCamelCase.options.json\n    │   │       │   │   │   ├── validEnumMemberCamelCase.ts\n    │   │       │   │   │   ├── validEnumMemberCamelCase.ts.snap\n    │   │       │   │   │   ├── validEnumMemberConstantCase.options.json\n    │   │       │   │   │   ├── validEnumMemberConstantCase.ts\n    │   │       │   │   │   ├── validEnumMemberConstantCase.ts.snap\n    │   │       │   │   │   ├── validExportAlias.js\n    │   │       │   │   │   ├── validExportAlias.js.snap\n    │   │       │   │   │   ├── validExportNamespace.js\n    │   │       │   │   │   ├── validExportNamespace.js.snap\n    │   │       │   │   │   ├── validExports.js\n    │   │       │   │   │   ├── validExports.js.snap\n    │   │       │   │   │   ├── validExternalModule.ts\n    │   │       │   │   │   ├── validExternalModule.ts.snap\n    │   │       │   │   │   ├── validFunction.js\n    │   │       │   │   │   ├── validFunction.js.snap\n    │   │       │   │   │   ├── validFunctionParameter.js\n    │   │       │   │   │   ├── validFunctionParameter.js.snap\n    │   │       │   │   │   ├── validImportAlias.js\n    │   │       │   │   │   ├── validImportAlias.js.snap\n    │   │       │   │   │   ├── validImportNamespace.js\n    │   │       │   │   │   ├── validImportNamespace.js.snap\n    │   │       │   │   │   ├── validImports.js\n    │   │       │   │   │   ├── validImports.js.snap\n    │   │       │   │   │   ├── validIndexParameter.ts\n    │   │       │   │   │   ├── validIndexParameter.ts.snap\n    │   │       │   │   │   ├── validInterface.ts\n    │   │       │   │   │   ├── validInterface.ts.snap\n    │   │       │   │   │   ├── validLocalVariable.js\n    │   │       │   │   │   ├── validLocalVariable.js.snap\n    │   │       │   │   │   ├── validNamespace.ts\n    │   │       │   │   │   ├── validNamespace.ts.snap\n    │   │       │   │   │   ├── validNonAscii.js\n    │   │       │   │   │   ├── validNonAscii.js.snap\n    │   │       │   │   │   ├── validNonAscii.options.json\n    │   │       │   │   │   ├── validObjectGetter.js\n    │   │       │   │   │   ├── validObjectGetter.js.snap\n    │   │       │   │   │   ├── validObjectMethod.js\n    │   │       │   │   │   ├── validObjectMethod.js.snap\n    │   │       │   │   │   ├── validObjectProperty.js\n    │   │       │   │   │   ├── validObjectProperty.js.snap\n    │   │       │   │   │   ├── validObjectSetter.js\n    │   │       │   │   │   ├── validObjectSetter.js.snap\n    │   │       │   │   │   ├── validParameterProperty.ts\n    │   │       │   │   │   ├── validParameterProperty.ts.snap\n    │   │       │   │   │   ├── validSyllabary.js\n    │   │       │   │   │   ├── validSyllabary.js.snap\n    │   │       │   │   │   ├── validSyllabary.options.json\n    │   │       │   │   │   ├── validTopLevelVariable.ts\n    │   │       │   │   │   ├── validTopLevelVariable.ts.snap\n    │   │       │   │   │   ├── validTypeAlias.ts\n    │   │       │   │   │   ├── validTypeAlias.ts.snap\n    │   │       │   │   │   ├── validTypeGetter.ts\n    │   │       │   │   │   ├── validTypeGetter.ts.snap\n    │   │       │   │   │   ├── validTypeMethod.ts\n    │   │       │   │   │   ├── validTypeMethod.ts.snap\n    │   │       │   │   │   ├── validTypeParameter.ts\n    │   │       │   │   │   ├── validTypeParameter.ts.snap\n    │   │       │   │   │   ├── validTypeProperty.ts\n    │   │       │   │   │   ├── validTypeProperty.ts.snap\n    │   │       │   │   │   ├── validTypeReadonlyProperty.ts\n    │   │       │   │   │   ├── validTypeReadonlyProperty.ts.snap\n    │   │       │   │   │   ├── validTypeSetter.ts\n    │   │       │   │   │   ├── validTypeSetter.ts.snap\n    │   │       │   │   │   ├── wellformedSelector.js\n    │   │       │   │   │   ├── wellformedSelector.js.snap\n    │   │       │   │   │   └── wellformedSelector.options.json\n    │   │       │   │   ├── useNodeAssertStrict/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useNodejsImportProtocol/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   ├── valid.ts.snap\n    │   │       │   │   │   ├── validDep.js\n    │   │       │   │   │   ├── validDep.js.snap\n    │   │       │   │   │   └── validDep.package.json\n    │   │       │   │   ├── useNumberNamespace/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalid_properties_value_shorthand.js\n    │   │       │   │   │   ├── invalid_properties_value_shorthand.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useNumericSeparators/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useObjectSpread/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   ├── valid.js.snap\n    │   │       │   │   │   ├── validCustomObject.js\n    │   │       │   │   │   ├── validCustomObject.js.snap\n    │   │       │   │   │   ├── validImportedObject.js\n    │   │       │   │   │   ├── validImportedObject.js.snap\n    │   │       │   │   │   ├── validRequiredObject.js\n    │   │       │   │   │   └── validRequiredObject.js.snap\n    │   │       │   │   ├── useReadonlyClassProperties/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── invalid_checkAllPropertiesTrue.options.json\n    │   │       │   │   │   ├── invalid_checkAllPropertiesTrue.ts\n    │   │       │   │   │   ├── invalid_checkAllPropertiesTrue.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   ├── valid.ts.snap\n    │   │       │   │   │   ├── valid_checkAllPropertiesTrue.options.json\n    │   │       │   │   │   ├── valid_checkAllPropertiesTrue.ts\n    │   │       │   │   │   └── valid_checkAllPropertiesTrue.ts.snap\n    │   │       │   │   ├── useSelfClosingElements/\n    │   │       │   │   │   ├── invalid.tsx\n    │   │       │   │   │   ├── invalid.tsx.snap\n    │   │       │   │   │   ├── invalidCheckHtmlElementsFalse.options.json\n    │   │       │   │   │   ├── invalidCheckHtmlElementsFalse.tsx\n    │   │       │   │   │   ├── invalidCheckHtmlElementsFalse.tsx.snap\n    │   │       │   │   │   ├── valid.tsx\n    │   │       │   │   │   ├── valid.tsx.snap\n    │   │       │   │   │   ├── validCheckHtmlElementsFalse.options.json\n    │   │       │   │   │   ├── validCheckHtmlElementsFalse.tsx\n    │   │       │   │   │   └── validCheckHtmlElementsFalse.tsx.snap\n    │   │       │   │   ├── useShorthandAssign/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useShorthandFunctionType/\n    │   │       │   │   │   ├── invalid.ts\n    │   │       │   │   │   ├── invalid.ts.snap\n    │   │       │   │   │   ├── valid.ts\n    │   │       │   │   │   └── valid.ts.snap\n    │   │       │   │   ├── useSingleVarDeclarator/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useSymbolDescription/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useTemplate/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── invalidIssue2580.js\n    │   │       │   │   │   ├── invalidIssue2580.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useThrowNewError/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useThrowOnlyError/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   ├── useTrimStartEnd/\n    │   │       │   │   │   ├── invalid.js\n    │   │       │   │   │   ├── invalid.js.snap\n    │   │       │   │   │   ├── valid.js\n    │   │       │   │   │   └── valid.js.snap\n    │   │       │   │   └── useUnifiedTypeSignatures/\n    │   │       │   │       ├── invalid.ts\n    │   │       │   │       ├── invalid.ts.snap\n    │   │       │   │       ├── valid.ts\n    │   │       │   │       └── valid.ts.snap\n    │   │       │   └── suspicious/\n    │   │       │       ├── noAlert/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noApproximativeNumericConstant/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noArrayIndexKey/\n    │   │       │       │   ├── invalid.jsx\n    │   │       │       │   ├── invalid.jsx.snap\n    │   │       │       │   ├── valid.jsx\n    │   │       │       │   └── valid.jsx.snap\n    │   │       │       ├── noAssignInExpressions/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noAsyncPromiseExecutor/\n    │   │       │       │   ├── invalid.jsonc\n    │   │       │       │   ├── invalid.jsonc.snap\n    │   │       │       │   ├── valid.jsonc\n    │   │       │       │   └── valid.jsonc.snap\n    │   │       │       ├── noBitwiseOperators/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   ├── valid.js.snap\n    │   │       │       │   ├── validBitwiseAnd.js\n    │   │       │       │   ├── validBitwiseAnd.js.snap\n    │   │       │       │   └── validBitwiseAnd.options.json\n    │   │       │       ├── noCatchAssign/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   └── invalid.js.snap\n    │   │       │       ├── noClassAssign/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noCommentText/\n    │   │       │       │   ├── invalid.tsx\n    │   │       │       │   ├── invalid.tsx.snap\n    │   │       │       │   ├── valid.tsx\n    │   │       │       │   └── valid.tsx.snap\n    │   │       │       ├── noCompareNegZero/\n    │   │       │       │   ├── invalid.jsonc\n    │   │       │       │   ├── invalid.jsonc.snap\n    │   │       │       │   ├── invalidComments.js\n    │   │       │       │   ├── invalidComments.js.snap\n    │   │       │       │   ├── valid.jsonc\n    │   │       │       │   └── valid.jsonc.snap\n    │   │       │       ├── noConfusingLabels/\n    │   │       │       │   ├── allowedLabel.js\n    │   │       │       │   ├── allowedLabel.js.snap\n    │   │       │       │   ├── allowedLabel.options.json\n    │   │       │       │   ├── invalid.jsonc\n    │   │       │       │   ├── invalid.jsonc.snap\n    │   │       │       │   ├── valid.jsonc\n    │   │       │       │   ├── valid.jsonc.snap\n    │   │       │       │   ├── valid.svelte\n    │   │       │       │   └── valid.svelte.snap\n    │   │       │       ├── noConfusingVoidType/\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── valid.ts\n    │   │       │       │   └── valid.ts.snap\n    │   │       │       ├── noConsole/\n    │   │       │       │   ├── allowlist.js\n    │   │       │       │   ├── allowlist.js.snap\n    │   │       │       │   ├── allowlist.options.json\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── issue_5053.js\n    │   │       │       │   ├── issue_5053.js.snap\n    │   │       │       │   ├── issue_5620.js\n    │   │       │       │   ├── issue_5620.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noConstantBinaryExpressions/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── invalid.jsx\n    │   │       │       │   ├── invalid.jsx.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   ├── valid.js.snap\n    │   │       │       │   ├── valid.jsx\n    │   │       │       │   └── valid.jsx.snap\n    │   │       │       ├── noConstEnum/\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   └── invalid.ts.snap\n    │   │       │       ├── noControlCharactersInRegex/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noDebugger/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   └── invalid.js.snap\n    │   │       │       ├── noDocumentCookie/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noDocumentImportInPage/\n    │   │       │       │   ├── valid.jsx\n    │   │       │       │   ├── valid.jsx.snap\n    │   │       │       │   ├── app/\n    │   │       │       │   │   ├── valid.jsx\n    │   │       │       │   │   └── valid.jsx.snap\n    │   │       │       │   └── pages/\n    │   │       │       │       ├── _document.jsx\n    │   │       │       │       ├── _document.jsx.snap\n    │   │       │       │       ├── invalid.jsx\n    │   │       │       │       └── invalid.jsx.snap\n    │   │       │       ├── noDoubleEquals/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── invalid.jsonc\n    │   │       │       │   ├── invalid.jsonc.snap\n    │   │       │       │   ├── invalid.jsx\n    │   │       │       │   ├── invalid.jsx.snap\n    │   │       │       │   ├── invalidNoNull.js\n    │   │       │       │   ├── invalidNoNull.js.snap\n    │   │       │       │   ├── invalidNoNull.jsonc\n    │   │       │       │   ├── invalidNoNull.jsonc.snap\n    │   │       │       │   ├── invalidNoNull.jsx\n    │   │       │       │   ├── invalidNoNull.jsx.snap\n    │   │       │       │   ├── invalidNoNull.options.json\n    │   │       │       │   ├── suppression.js\n    │   │       │       │   ├── suppression.js.snap\n    │   │       │       │   ├── valid.jsonc\n    │   │       │       │   └── valid.jsonc.snap\n    │   │       │       ├── noDuplicateCase/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noDuplicateClassMembers/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noDuplicateElseIf/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noDuplicateJsxProps/\n    │   │       │       │   ├── invalid.jsx\n    │   │       │       │   ├── invalid.jsx.snap\n    │   │       │       │   ├── valid.jsx\n    │   │       │       │   └── valid.jsx.snap\n    │   │       │       ├── noDuplicateObjectKeys/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── invalid.jsonc\n    │   │       │       │   ├── invalid.jsonc.snap\n    │   │       │       │   ├── valid.jsonc\n    │   │       │       │   └── valid.jsonc.snap\n    │   │       │       ├── noDuplicateParameters/\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── valid.jsonc\n    │   │       │       │   └── valid.jsonc.snap\n    │   │       │       ├── noDuplicateTestHooks/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noEmptyBlockStatements/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── valid.cjs\n    │   │       │       │   ├── valid.cjs.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   ├── valid.js.snap\n    │   │       │       │   ├── valid.ts\n    │   │       │       │   └── valid.ts.snap\n    │   │       │       ├── noEmptyInterface/\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── valid.d.ts\n    │   │       │       │   ├── valid.d.ts.snap\n    │   │       │       │   ├── valid.ts\n    │   │       │       │   └── valid.ts.snap\n    │   │       │       ├── noEvolvingTypes/\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── valid.ts\n    │   │       │       │   └── valid.ts.snap\n    │   │       │       ├── noExplicitAny/\n    │   │       │       │   ├── invalidClass.ts\n    │   │       │       │   ├── invalidClass.ts.snap\n    │   │       │       │   ├── invalidFunction.ts\n    │   │       │       │   ├── invalidFunction.ts.snap\n    │   │       │       │   ├── invalidTypeAndInterface.ts\n    │   │       │       │   ├── invalidTypeAndInterface.ts.snap\n    │   │       │       │   ├── invalidVariable.ts\n    │   │       │       │   ├── invalidVariable.ts.snap\n    │   │       │       │   ├── valid.ts\n    │   │       │       │   ├── valid.ts.snap\n    │   │       │       │   ├── validTypeConstraints.ts\n    │   │       │       │   └── validTypeConstraints.ts.snap\n    │   │       │       ├── noExportsInTest/\n    │   │       │       │   ├── in-source-testing.js\n    │   │       │       │   ├── in-source-testing.js.snap\n    │   │       │       │   ├── invalid.cjs\n    │   │       │       │   ├── invalid.cjs.snap\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.cjs\n    │   │       │       │   ├── valid.cjs.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noExtraNonNullAssertion/\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── valid.ts\n    │   │       │       │   └── valid.ts.snap\n    │   │       │       ├── noFallthroughSwitchClause/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── issue4566.js\n    │   │       │       │   ├── issue4566.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noFocusedTests/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noFunctionAssign/\n    │   │       │       │   ├── invalid.jsonc\n    │   │       │       │   ├── invalid.jsonc.snap\n    │   │       │       │   ├── valid.jsonc\n    │   │       │       │   └── valid.jsonc.snap\n    │   │       │       ├── noGlobalAssign/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noGlobalIsFinite/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noGlobalIsNan/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noHeadImportInDocument/\n    │   │       │       │   ├── app/\n    │   │       │       │   │   ├── _document.jsx\n    │   │       │       │   │   └── _document.jsx.snap\n    │   │       │       │   └── pages/\n    │   │       │       │       ├── _document.jsx\n    │   │       │       │       ├── _document.jsx.snap\n    │   │       │       │       ├── index.jsx\n    │   │       │       │       ├── index.jsx.snap\n    │   │       │       │       └── _document/\n    │   │       │       │           ├── index.jsx\n    │   │       │       │           └── index.jsx.snap\n    │   │       │       ├── noImplicitAnyLet/\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── valid.ts\n    │   │       │       │   └── valid.ts.snap\n    │   │       │       ├── noImportAssign/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noIrregularWhitespace/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noLabelVar/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noMisleadingCharacterClass/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid-malformed-ast.js\n    │   │       │       │   ├── valid-malformed-ast.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noMisleadingInstantiator/\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── valid.ts\n    │   │       │       │   └── valid.ts.snap\n    │   │       │       ├── noMisplacedAssertion/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── invalidImportedBun.js\n    │   │       │       │   ├── invalidImportedBun.js.snap\n    │   │       │       │   ├── invalidImportedChai.js\n    │   │       │       │   ├── invalidImportedChai.js.snap\n    │   │       │       │   ├── invalidImportedDeno.js\n    │   │       │       │   ├── invalidImportedDeno.js.snap\n    │   │       │       │   ├── invalidImportedNode.js\n    │   │       │       │   ├── invalidImportedNode.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   ├── valid.js.snap\n    │   │       │       │   ├── validBun.js\n    │   │       │       │   ├── validBun.js.snap\n    │   │       │       │   ├── validDeno.js\n    │   │       │       │   ├── validDeno.js.snap\n    │   │       │       │   ├── validMethodCalls.js\n    │   │       │       │   └── validMethodCalls.js.snap\n    │   │       │       ├── noMisrefactoredShorthandAssign/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noOctalEscape/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noPrototypeBuiltins/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   ├── valid.js.snap\n    │   │       │       │   ├── validClass.js\n    │   │       │       │   ├── validClass.js.snap\n    │   │       │       │   ├── validNonGlobalObject.js\n    │   │       │       │   ├── validNonGlobalObject.js.snap\n    │   │       │       │   ├── validPrototype.js\n    │   │       │       │   └── validPrototype.js.snap\n    │   │       │       ├── noReactSpecificProps/\n    │   │       │       │   ├── invalid.jsx\n    │   │       │       │   ├── invalid.jsx.snap\n    │   │       │       │   ├── valid.jsx\n    │   │       │       │   └── valid.jsx.snap\n    │   │       │       ├── noRedeclare/\n    │   │       │       │   ├── invalid-declaration-merging.ts\n    │   │       │       │   ├── invalid-declaration-merging.ts.snap\n    │   │       │       │   ├── invalid-non-strict-mode.cjs\n    │   │       │       │   ├── invalid-non-strict-mode.cjs.snap\n    │   │       │       │   ├── invalid.jsonc\n    │   │       │       │   ├── invalid.jsonc.snap\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── issue-1932.ts\n    │   │       │       │   ├── issue-1932.ts.snap\n    │   │       │       │   ├── valid-conditional-type.ts\n    │   │       │       │   ├── valid-conditional-type.ts.snap\n    │   │       │       │   ├── valid-declaration-merging.ts\n    │   │       │       │   ├── valid-declaration-merging.ts.snap\n    │   │       │       │   ├── valid-duplicate.ts\n    │   │       │       │   ├── valid-duplicate.ts.snap\n    │   │       │       │   ├── valid-function-strict-mode.cjs\n    │   │       │       │   ├── valid-function-strict-mode.cjs.snap\n    │   │       │       │   ├── valid-index-signatures.ts\n    │   │       │       │   ├── valid-index-signatures.ts.snap\n    │   │       │       │   ├── valid-mapped-types.ts\n    │   │       │       │   ├── valid-mapped-types.ts.snap\n    │   │       │       │   ├── valid-modules.ts\n    │   │       │       │   ├── valid-modules.ts.snap\n    │   │       │       │   ├── valid-strict-mode.cjs\n    │   │       │       │   ├── valid-strict-mode.cjs.snap\n    │   │       │       │   ├── valid.jsonc\n    │   │       │       │   ├── valid.jsonc.snap\n    │   │       │       │   ├── validMethodTypeParam.ts\n    │   │       │       │   └── validMethodTypeParam.ts.snap\n    │   │       │       ├── noRedundantUseStrict/\n    │   │       │       │   ├── commonJsValid.js\n    │   │       │       │   ├── commonJsValid.js.snap\n    │   │       │       │   ├── commonJsValid.package.json\n    │   │       │       │   ├── invalid.cjs\n    │   │       │       │   ├── invalid.cjs.snap\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── invalidClass.cjs\n    │   │       │       │   ├── invalidClass.cjs.snap\n    │   │       │       │   ├── invalidFunction.cjs\n    │   │       │       │   ├── invalidFunction.cjs.snap\n    │   │       │       │   ├── invalidFunction.js\n    │   │       │       │   ├── invalidFunction.js.snap\n    │   │       │       │   ├── valid.cjs\n    │   │       │       │   ├── valid.cjs.snap\n    │   │       │       │   ├── validReactDirectives.tsx\n    │   │       │       │   └── validReactDirectives.tsx.snap\n    │   │       │       ├── noSelfCompare/\n    │   │       │       │   ├── invalid.jsonc\n    │   │       │       │   ├── invalid.jsonc.snap\n    │   │       │       │   ├── issue6377.js\n    │   │       │       │   ├── issue6377.js.snap\n    │   │       │       │   ├── valid.jsonc\n    │   │       │       │   └── valid.jsonc.snap\n    │   │       │       ├── noShadowRestrictedNames/\n    │   │       │       │   ├── invalid.jsonc\n    │   │       │       │   └── invalid.jsonc.snap\n    │   │       │       ├── noSkippedTests/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noSparseArray/\n    │   │       │       │   ├── invalid.jsonc\n    │   │       │       │   ├── invalid.jsonc.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noSuspiciousSemicolonInJsx/\n    │   │       │       │   ├── invalid.jsx\n    │   │       │       │   ├── invalid.jsx.snap\n    │   │       │       │   ├── valid.jsx\n    │   │       │       │   └── valid.jsx.snap\n    │   │       │       ├── noTemplateCurlyInString/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noThenProperty/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noTsIgnore/\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   └── invalid.ts.snap\n    │   │       │       ├── noUnassignedVariables/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   ├── valid.js.snap\n    │   │       │       │   ├── valid.ts\n    │   │       │       │   └── valid.ts.snap\n    │   │       │       ├── noUnsafeDeclarationMerging/\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── valid.ts\n    │   │       │       │   └── valid.ts.snap\n    │   │       │       ├── noUnsafeNegation/\n    │   │       │       │   ├── invalid.jsonc\n    │   │       │       │   ├── invalid.jsonc.snap\n    │   │       │       │   ├── valid.jsonc\n    │   │       │       │   └── valid.jsonc.snap\n    │   │       │       ├── noUselessEscapeInString/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   ├── valid.js.snap\n    │   │       │       │   ├── valid.jsx\n    │   │       │       │   └── valid.jsx.snap\n    │   │       │       ├── noUselessRegexBackrefs/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── issue5989.js\n    │   │       │       │   ├── issue5989.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── noVar/\n    │   │       │       │   ├── invalidFunctions.js\n    │   │       │       │   ├── invalidFunctions.js.snap\n    │   │       │       │   ├── invalidModule.js\n    │   │       │       │   ├── invalidModule.js.snap\n    │   │       │       │   ├── invalidScript.jsonc\n    │   │       │       │   ├── invalidScript.jsonc.snap\n    │   │       │       │   ├── valid.jsonc\n    │   │       │       │   ├── valid.jsonc.snap\n    │   │       │       │   ├── validTsGlobalDeclaration.ts\n    │   │       │       │   └── validTsGlobalDeclaration.ts.snap\n    │   │       │       ├── noWith/\n    │   │       │       │   ├── invalid.cjs\n    │   │       │       │   ├── invalid.cjs.snap\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── useAdjacentOverloadSignatures/\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── valid.ts\n    │   │       │       │   └── valid.ts.snap\n    │   │       │       ├── useAwait/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── useDefaultSwitchClauseLast/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── useErrorMessage/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── useGetterReturn/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── useGoogleFontDisplay/\n    │   │       │       │   ├── invalid.jsx\n    │   │       │       │   ├── invalid.jsx.snap\n    │   │       │       │   ├── valid.jsx\n    │   │       │       │   └── valid.jsx.snap\n    │   │       │       ├── useGuardForIn/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── useIsArray/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid-shadowing.js\n    │   │       │       │   ├── valid-shadowing.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── useIterableCallbackReturn/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── useNamespaceKeyword/\n    │   │       │       │   ├── invalid.ts\n    │   │       │       │   ├── invalid.ts.snap\n    │   │       │       │   ├── valid.ts\n    │   │       │       │   └── valid.ts.snap\n    │   │       │       ├── useNumberToFixedDigitsArgument/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       ├── useStaticResponseMethods/\n    │   │       │       │   ├── invalid.js\n    │   │       │       │   ├── invalid.js.snap\n    │   │       │       │   ├── valid.js\n    │   │       │       │   └── valid.js.snap\n    │   │       │       └── useStrictMode/\n    │   │       │           ├── invalid-with-comments.cjs\n    │   │       │           ├── invalid-with-comments.cjs.snap\n    │   │       │           ├── invalid-with-directive.cjs\n    │   │       │           ├── invalid-with-directive.cjs.snap\n    │   │       │           ├── invalid-with-shebang-comments.cjs\n    │   │       │           ├── invalid-with-shebang-comments.cjs.snap\n    │   │       │           ├── invalid-with-shebang.cjs\n    │   │       │           ├── invalid-with-shebang.cjs.snap\n    │   │       │           ├── invalid.js\n    │   │       │           ├── invalid.js.snap\n    │   │       │           ├── invalid.package.json\n    │   │       │           ├── valid-with-comments.cjs\n    │   │       │           ├── valid-with-comments.cjs.snap\n    │   │       │           ├── valid-with-directive.cjs\n    │   │       │           ├── valid-with-directive.cjs.snap\n    │   │       │           ├── valid-with-shebang-comments.cjs\n    │   │       │           ├── valid-with-shebang-comments.cjs.snap\n    │   │       │           ├── valid-with-shebang.cjs\n    │   │       │           ├── valid-with-shebang.cjs.snap\n    │   │       │           ├── valid.js\n    │   │       │           └── valid.js.snap\n    │   │       └── suppression/\n    │   │           ├── a11y/\n    │   │           │   └── useKeyWithClickEvents/\n    │   │           │       ├── invalid.jsx\n    │   │           │       └── invalid.jsx.snap\n    │   │           ├── correctness/\n    │   │           │   ├── noSuperWithoutExtends/\n    │   │           │   │   ├── invalid.js\n    │   │           │   │   └── invalid.js.snap\n    │   │           │   └── noUnusedVariables/\n    │   │           │       ├── simple.js\n    │   │           │       └── simple.js.snap\n    │   │           ├── source/\n    │   │           │   ├── useSortedAttributes/\n    │   │           │   │   ├── valid.jsx\n    │   │           │   │   └── valid.jsx.snap\n    │   │           │   └── useSortedKeys/\n    │   │           │       ├── issue_5503.js\n    │   │           │       ├── issue_5503.js.snap\n    │   │           │       ├── unsorted.js\n    │   │           │       └── unsorted.js.snap\n    │   │           └── suspicious/\n    │   │               ├── noArrayIndexKey/\n    │   │               │   ├── noArrayIndexKey.jsx\n    │   │               │   └── noArrayIndexKey.jsx.snap\n    │   │               ├── noAssignInExpressions/\n    │   │               │   ├── noAssignInExpressions.ts\n    │   │               │   └── noAssignInExpressions.ts.snap\n    │   │               ├── noDoubleEquals/\n    │   │               │   ├── noDoubleEquals.js\n    │   │               │   ├── noDoubleEquals.js.snap\n    │   │               │   ├── noDoubleEquals.jsx\n    │   │               │   └── noDoubleEquals.jsx.snap\n    │   │               └── noExplicitAny/\n    │   │                   ├── noExplicitAny.ts\n    │   │                   └── noExplicitAny.ts.snap\n    │   ├── biome_js_factory/\n    │   │   ├── Cargo.toml\n    │   │   └── src/\n    │   │       ├── generated.rs\n    │   │       ├── lib.rs\n    │   │       ├── make.rs\n    │   │       ├── utils.rs\n    │   │       └── generated/\n    │   │           ├── node_factory.rs\n    │   │           └── syntax_factory.rs\n    │   └── biome_js_formatter/\n    │       ├── README.md\n    │       ├── Cargo.toml\n    │       ├── CONTRIBUTING.md\n    │       ├── LICENSE\n    │       ├── PRETTIER_LICENSE\n    │       ├── report-challenge.md\n    │       ├── report-es2015.md\n    │       ├── report-es2024+.md\n    │       ├── report.md\n    │       ├── report_incompatible.md\n    │       ├── benches/\n    │       │   ├── js_formatter.rs\n    │       │   ├── libs-js.txt\n    │       │   └── libs-ts.txt\n    │       ├── src/\n    │       │   ├── comments.rs\n    │       │   ├── context.rs\n    │       │   ├── cst.rs\n    │       │   ├── format.rs\n    │       │   ├── generated.rs\n    │       │   ├── lib.rs\n    │       │   ├── parentheses.rs\n    │       │   ├── prelude.rs\n    │       │   ├── separated.rs\n    │       │   ├── syntax_rewriter.rs\n    │       │   ├── trivia.rs\n    │       │   ├── verbatim.rs\n    │       │   ├── context/\n    │       │   │   └── trailing_commas.rs\n    │       │   ├── js/\n    │       │   │   ├── mod.rs\n    │       │   │   ├── any/\n    │       │   │   │   ├── array_assignment_pattern_element.rs\n    │       │   │   │   ├── array_binding_pattern_element.rs\n    │       │   │   │   ├── array_element.rs\n    │       │   │   │   ├── arrow_function_parameters.rs\n    │       │   │   │   ├── assignment.rs\n    │       │   │   │   ├── assignment_pattern.rs\n    │       │   │   │   ├── binding.rs\n    │       │   │   │   ├── binding_pattern.rs\n    │       │   │   │   ├── call_argument.rs\n    │       │   │   │   ├── class.rs\n    │       │   │   │   ├── class_member.rs\n    │       │   │   │   ├── class_member_name.rs\n    │       │   │   │   ├── combined_specifier.rs\n    │       │   │   │   ├── constructor_parameter.rs\n    │       │   │   │   ├── declaration.rs\n    │       │   │   │   ├── declaration_clause.rs\n    │       │   │   │   ├── decorator.rs\n    │       │   │   │   ├── export_clause.rs\n    │       │   │   │   ├── export_default_declaration.rs\n    │       │   │   │   ├── export_named_specifier.rs\n    │       │   │   │   ├── expression.rs\n    │       │   │   │   ├── for_in_or_of_initializer.rs\n    │       │   │   │   ├── for_initializer.rs\n    │       │   │   │   ├── formal_parameter.rs\n    │       │   │   │   ├── function.rs\n    │       │   │   │   ├── function_body.rs\n    │       │   │   │   ├── import_assertion_entry.rs\n    │       │   │   │   ├── import_clause.rs\n    │       │   │   │   ├── in_property.rs\n    │       │   │   │   ├── literal_expression.rs\n    │       │   │   │   ├── method_modifier.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── module_item.rs\n    │       │   │   │   ├── module_source.rs\n    │       │   │   │   ├── name.rs\n    │       │   │   │   ├── named_import_specifier.rs\n    │       │   │   │   ├── object_assignment_pattern_member.rs\n    │       │   │   │   ├── object_binding_pattern_member.rs\n    │       │   │   │   ├── object_member.rs\n    │       │   │   │   ├── object_member_name.rs\n    │       │   │   │   ├── parameter.rs\n    │       │   │   │   ├── property_modifier.rs\n    │       │   │   │   ├── root.rs\n    │       │   │   │   ├── statement.rs\n    │       │   │   │   ├── switch_clause.rs\n    │       │   │   │   └── template_element.rs\n    │       │   │   ├── assignments/\n    │       │   │   │   ├── array_assignment_pattern.rs\n    │       │   │   │   ├── array_assignment_pattern_element.rs\n    │       │   │   │   ├── array_assignment_pattern_rest_element.rs\n    │       │   │   │   ├── computed_member_assignment.rs\n    │       │   │   │   ├── identifier_assignment.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── object_assignment_pattern.rs\n    │       │   │   │   ├── object_assignment_pattern_property.rs\n    │       │   │   │   ├── object_assignment_pattern_rest.rs\n    │       │   │   │   ├── object_assignment_pattern_shorthand_property.rs\n    │       │   │   │   ├── parenthesized_assignment.rs\n    │       │   │   │   └── static_member_assignment.rs\n    │       │   │   ├── auxiliary/\n    │       │   │   │   ├── accessor_modifier.rs\n    │       │   │   │   ├── array_hole.rs\n    │       │   │   │   ├── case_clause.rs\n    │       │   │   │   ├── catch_clause.rs\n    │       │   │   │   ├── decorator.rs\n    │       │   │   │   ├── default_clause.rs\n    │       │   │   │   ├── directive.rs\n    │       │   │   │   ├── else_clause.rs\n    │       │   │   │   ├── expression_snipped.rs\n    │       │   │   │   ├── finally_clause.rs\n    │       │   │   │   ├── function_body.rs\n    │       │   │   │   ├── initializer_clause.rs\n    │       │   │   │   ├── label.rs\n    │       │   │   │   ├── metavariable.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── module.rs\n    │       │   │   │   ├── name.rs\n    │       │   │   │   ├── private_name.rs\n    │       │   │   │   ├── reference_identifier.rs\n    │       │   │   │   ├── script.rs\n    │       │   │   │   ├── spread.rs\n    │       │   │   │   ├── static_modifier.rs\n    │       │   │   │   ├── template_chunk_element.rs\n    │       │   │   │   ├── template_element.rs\n    │       │   │   │   ├── variable_declaration_clause.rs\n    │       │   │   │   └── variable_declarator.rs\n    │       │   │   ├── bindings/\n    │       │   │   │   ├── array_binding_pattern.rs\n    │       │   │   │   ├── array_binding_pattern_element.rs\n    │       │   │   │   ├── array_binding_pattern_rest_element.rs\n    │       │   │   │   ├── constructor_parameters.rs\n    │       │   │   │   ├── formal_parameter.rs\n    │       │   │   │   ├── identifier_binding.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── object_binding_pattern.rs\n    │       │   │   │   ├── object_binding_pattern_property.rs\n    │       │   │   │   ├── object_binding_pattern_rest.rs\n    │       │   │   │   ├── object_binding_pattern_shorthand_property.rs\n    │       │   │   │   ├── parameters.rs\n    │       │   │   │   └── rest_parameter.rs\n    │       │   │   ├── bogus/\n    │       │   │   │   ├── bogus.rs\n    │       │   │   │   ├── bogus_assignment.rs\n    │       │   │   │   ├── bogus_binding.rs\n    │       │   │   │   ├── bogus_expression.rs\n    │       │   │   │   ├── bogus_import_assertion_entry.rs\n    │       │   │   │   ├── bogus_member.rs\n    │       │   │   │   ├── bogus_named_import_specifier.rs\n    │       │   │   │   ├── bogus_parameter.rs\n    │       │   │   │   ├── bogus_statement.rs\n    │       │   │   │   └── mod.rs\n    │       │   │   ├── classes/\n    │       │   │   │   ├── constructor_class_member.rs\n    │       │   │   │   ├── empty_class_member.rs\n    │       │   │   │   ├── extends_clause.rs\n    │       │   │   │   ├── getter_class_member.rs\n    │       │   │   │   ├── method_class_member.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── property_class_member.rs\n    │       │   │   │   ├── setter_class_member.rs\n    │       │   │   │   └── static_initialization_block_class_member.rs\n    │       │   │   ├── declarations/\n    │       │   │   │   ├── catch_declaration.rs\n    │       │   │   │   ├── class_declaration.rs\n    │       │   │   │   ├── class_export_default_declaration.rs\n    │       │   │   │   ├── for_variable_declaration.rs\n    │       │   │   │   ├── function_declaration.rs\n    │       │   │   │   ├── function_export_default_declaration.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   └── variable_declaration.rs\n    │       │   │   ├── expressions/\n    │       │   │   │   ├── array_expression.rs\n    │       │   │   │   ├── arrow_function_expression.rs\n    │       │   │   │   ├── assignment_expression.rs\n    │       │   │   │   ├── await_expression.rs\n    │       │   │   │   ├── bigint_literal_expression.rs\n    │       │   │   │   ├── binary_expression.rs\n    │       │   │   │   ├── boolean_literal_expression.rs\n    │       │   │   │   ├── call_arguments.rs\n    │       │   │   │   ├── call_expression.rs\n    │       │   │   │   ├── class_expression.rs\n    │       │   │   │   ├── computed_member_expression.rs\n    │       │   │   │   ├── conditional_expression.rs\n    │       │   │   │   ├── function_expression.rs\n    │       │   │   │   ├── identifier_expression.rs\n    │       │   │   │   ├── import_call_expression.rs\n    │       │   │   │   ├── import_meta_expression.rs\n    │       │   │   │   ├── in_expression.rs\n    │       │   │   │   ├── instanceof_expression.rs\n    │       │   │   │   ├── logical_expression.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── new_expression.rs\n    │       │   │   │   ├── new_target_expression.rs\n    │       │   │   │   ├── null_literal_expression.rs\n    │       │   │   │   ├── number_literal_expression.rs\n    │       │   │   │   ├── object_expression.rs\n    │       │   │   │   ├── parenthesized_expression.rs\n    │       │   │   │   ├── post_update_expression.rs\n    │       │   │   │   ├── pre_update_expression.rs\n    │       │   │   │   ├── regex_literal_expression.rs\n    │       │   │   │   ├── sequence_expression.rs\n    │       │   │   │   ├── static_member_expression.rs\n    │       │   │   │   ├── string_literal_expression.rs\n    │       │   │   │   ├── super_expression.rs\n    │       │   │   │   ├── template_expression.rs\n    │       │   │   │   ├── this_expression.rs\n    │       │   │   │   ├── unary_expression.rs\n    │       │   │   │   ├── yield_argument.rs\n    │       │   │   │   └── yield_expression.rs\n    │       │   │   ├── lists/\n    │       │   │   │   ├── array_assignment_pattern_element_list.rs\n    │       │   │   │   ├── array_binding_pattern_element_list.rs\n    │       │   │   │   ├── array_element_list.rs\n    │       │   │   │   ├── call_argument_list.rs\n    │       │   │   │   ├── class_member_list.rs\n    │       │   │   │   ├── constructor_modifier_list.rs\n    │       │   │   │   ├── constructor_parameter_list.rs\n    │       │   │   │   ├── decorator_list.rs\n    │       │   │   │   ├── directive_list.rs\n    │       │   │   │   ├── export_named_from_specifier_list.rs\n    │       │   │   │   ├── export_named_specifier_list.rs\n    │       │   │   │   ├── import_assertion_entry_list.rs\n    │       │   │   │   ├── method_modifier_list.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── module_item_list.rs\n    │       │   │   │   ├── named_import_specifier_list.rs\n    │       │   │   │   ├── object_assignment_pattern_property_list.rs\n    │       │   │   │   ├── object_binding_pattern_property_list.rs\n    │       │   │   │   ├── object_member_list.rs\n    │       │   │   │   ├── parameter_list.rs\n    │       │   │   │   ├── property_modifier_list.rs\n    │       │   │   │   ├── statement_list.rs\n    │       │   │   │   ├── switch_case_list.rs\n    │       │   │   │   ├── template_element_list.rs\n    │       │   │   │   └── variable_declarator_list.rs\n    │       │   │   ├── module/\n    │       │   │   │   ├── default_import_specifier.rs\n    │       │   │   │   ├── export.rs\n    │       │   │   │   ├── export_as_clause.rs\n    │       │   │   │   ├── export_default_declaration_clause.rs\n    │       │   │   │   ├── export_default_expression_clause.rs\n    │       │   │   │   ├── export_from_clause.rs\n    │       │   │   │   ├── export_named_clause.rs\n    │       │   │   │   ├── export_named_from_clause.rs\n    │       │   │   │   ├── export_named_from_specifier.rs\n    │       │   │   │   ├── export_named_shorthand_specifier.rs\n    │       │   │   │   ├── export_named_specifier.rs\n    │       │   │   │   ├── import.rs\n    │       │   │   │   ├── import_assertion.rs\n    │       │   │   │   ├── import_assertion_entry.rs\n    │       │   │   │   ├── import_bare_clause.rs\n    │       │   │   │   ├── import_combined_clause.rs\n    │       │   │   │   ├── import_default_clause.rs\n    │       │   │   │   ├── import_named_clause.rs\n    │       │   │   │   ├── import_namespace_clause.rs\n    │       │   │   │   ├── literal_export_name.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── module_source.rs\n    │       │   │   │   ├── named_import_specifier.rs\n    │       │   │   │   ├── named_import_specifiers.rs\n    │       │   │   │   ├── namespace_import_specifier.rs\n    │       │   │   │   └── shorthand_named_import_specifier.rs\n    │       │   │   ├── objects/\n    │       │   │   │   ├── computed_member_name.rs\n    │       │   │   │   ├── getter_object_member.rs\n    │       │   │   │   ├── literal_member_name.rs\n    │       │   │   │   ├── method_object_member.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── private_class_member_name.rs\n    │       │   │   │   ├── property_object_member.rs\n    │       │   │   │   ├── setter_object_member.rs\n    │       │   │   │   └── shorthand_property_object_member.rs\n    │       │   │   └── statements/\n    │       │   │       ├── block_statement.rs\n    │       │   │       ├── break_statement.rs\n    │       │   │       ├── continue_statement.rs\n    │       │   │       ├── debugger_statement.rs\n    │       │   │       ├── do_while_statement.rs\n    │       │   │       ├── empty_statement.rs\n    │       │   │       ├── expression_statement.rs\n    │       │   │       ├── for_in_statement.rs\n    │       │   │       ├── for_of_statement.rs\n    │       │   │       ├── for_statement.rs\n    │       │   │       ├── if_statement.rs\n    │       │   │       ├── labeled_statement.rs\n    │       │   │       ├── mod.rs\n    │       │   │       ├── return_statement.rs\n    │       │   │       ├── switch_statement.rs\n    │       │   │       ├── throw_statement.rs\n    │       │   │       ├── try_finally_statement.rs\n    │       │   │       ├── try_statement.rs\n    │       │   │       ├── variable_statement.rs\n    │       │   │       ├── while_statement.rs\n    │       │   │       └── with_statement.rs\n    │       │   ├── jsx/\n    │       │   │   ├── mod.rs\n    │       │   │   ├── any/\n    │       │   │   │   ├── attribute.rs\n    │       │   │   │   ├── attribute_name.rs\n    │       │   │   │   ├── attribute_value.rs\n    │       │   │   │   ├── child.rs\n    │       │   │   │   ├── element_name.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── name.rs\n    │       │   │   │   ├── object_name.rs\n    │       │   │   │   └── tag.rs\n    │       │   │   ├── attribute/\n    │       │   │   │   ├── attribute.rs\n    │       │   │   │   ├── attribute_initializer_clause.rs\n    │       │   │   │   ├── expression_attribute_value.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   └── spread_attribute.rs\n    │       │   │   ├── auxiliary/\n    │       │   │   │   ├── expression_child.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── name.rs\n    │       │   │   │   ├── namespace_name.rs\n    │       │   │   │   ├── reference_identifier.rs\n    │       │   │   │   ├── spread_child.rs\n    │       │   │   │   ├── string.rs\n    │       │   │   │   └── text.rs\n    │       │   │   ├── expressions/\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   └── tag_expression.rs\n    │       │   │   ├── lists/\n    │       │   │   │   ├── attribute_list.rs\n    │       │   │   │   ├── child_list.rs\n    │       │   │   │   └── mod.rs\n    │       │   │   ├── objects/\n    │       │   │   │   ├── member_name.rs\n    │       │   │   │   └── mod.rs\n    │       │   │   └── tag/\n    │       │   │       ├── closing_element.rs\n    │       │   │       ├── closing_fragment.rs\n    │       │   │       ├── element.rs\n    │       │   │       ├── fragment.rs\n    │       │   │       ├── mod.rs\n    │       │   │       ├── opening_element.rs\n    │       │   │       ├── opening_fragment.rs\n    │       │   │       └── self_closing_element.rs\n    │       │   ├── ts/\n    │       │   │   ├── mod.rs\n    │       │   │   ├── any/\n    │       │   │   │   ├── enum_member_name.rs\n    │       │   │   │   ├── external_module_declaration_body.rs\n    │       │   │   │   ├── identifier_binding.rs\n    │       │   │   │   ├── index_signature_modifier.rs\n    │       │   │   │   ├── method_signature_modifier.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── module_name.rs\n    │       │   │   │   ├── module_reference.rs\n    │       │   │   │   ├── name.rs\n    │       │   │   │   ├── property_annotation.rs\n    │       │   │   │   ├── property_parameter_modifier.rs\n    │       │   │   │   ├── property_signature_annotation.rs\n    │       │   │   │   ├── property_signature_modifier.rs\n    │       │   │   │   ├── return_type.rs\n    │       │   │   │   ├── template_element.rs\n    │       │   │   │   ├── ts_type.rs\n    │       │   │   │   ├── tuple_type_element.rs\n    │       │   │   │   ├── type_member.rs\n    │       │   │   │   ├── type_parameter_modifier.rs\n    │       │   │   │   ├── type_predicate_parameter_name.rs\n    │       │   │   │   └── variable_annotation.rs\n    │       │   │   ├── assignments/\n    │       │   │   │   ├── as_assignment.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── non_null_assertion_assignment.rs\n    │       │   │   │   ├── satisfies_assignment.rs\n    │       │   │   │   └── type_assertion_assignment.rs\n    │       │   │   ├── auxiliary/\n    │       │   │   │   ├── abstract_modifier.rs\n    │       │   │   │   ├── accessibility_modifier.rs\n    │       │   │   │   ├── asserts_condition.rs\n    │       │   │   │   ├── call_signature_type_member.rs\n    │       │   │   │   ├── const_modifier.rs\n    │       │   │   │   ├── construct_signature_type_member.rs\n    │       │   │   │   ├── declaration_module.rs\n    │       │   │   │   ├── declare_modifier.rs\n    │       │   │   │   ├── default_type_clause.rs\n    │       │   │   │   ├── definite_property_annotation.rs\n    │       │   │   │   ├── definite_variable_annotation.rs\n    │       │   │   │   ├── empty_external_module_declaration_body.rs\n    │       │   │   │   ├── enum_member.rs\n    │       │   │   │   ├── external_module_reference.rs\n    │       │   │   │   ├── getter_signature_type_member.rs\n    │       │   │   │   ├── implements_clause.rs\n    │       │   │   │   ├── in_modifier.rs\n    │       │   │   │   ├── index_signature_type_member.rs\n    │       │   │   │   ├── mapped_type_as_clause.rs\n    │       │   │   │   ├── mapped_type_optional_modifier_clause.rs\n    │       │   │   │   ├── mapped_type_readonly_modifier_clause.rs\n    │       │   │   │   ├── method_signature_type_member.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── module_block.rs\n    │       │   │   │   ├── named_tuple_type_element.rs\n    │       │   │   │   ├── optional_property_annotation.rs\n    │       │   │   │   ├── optional_tuple_type_element.rs\n    │       │   │   │   ├── out_modifier.rs\n    │       │   │   │   ├── override_modifier.rs\n    │       │   │   │   ├── property_signature_type_member.rs\n    │       │   │   │   ├── qualified_module_name.rs\n    │       │   │   │   ├── qualified_name.rs\n    │       │   │   │   ├── readonly_modifier.rs\n    │       │   │   │   ├── rest_tuple_type_element.rs\n    │       │   │   │   ├── return_type_annotation.rs\n    │       │   │   │   ├── setter_signature_type_member.rs\n    │       │   │   │   ├── template_chunk_element.rs\n    │       │   │   │   ├── template_element.rs\n    │       │   │   │   ├── type_annotation.rs\n    │       │   │   │   ├── type_constraint_clause.rs\n    │       │   │   │   └── type_parameter_name.rs\n    │       │   │   ├── bindings/\n    │       │   │   │   ├── identifier_binding.rs\n    │       │   │   │   ├── index_signature_parameter.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── property_parameter.rs\n    │       │   │   │   ├── this_parameter.rs\n    │       │   │   │   ├── type_parameter.rs\n    │       │   │   │   └── type_parameters.rs\n    │       │   │   ├── bogus/\n    │       │   │   │   ├── bogus_type.rs\n    │       │   │   │   └── mod.rs\n    │       │   │   ├── classes/\n    │       │   │   │   ├── constructor_signature_class_member.rs\n    │       │   │   │   ├── extends_clause.rs\n    │       │   │   │   ├── getter_signature_class_member.rs\n    │       │   │   │   ├── index_signature_class_member.rs\n    │       │   │   │   ├── initialized_property_signature_class_member.rs\n    │       │   │   │   ├── method_signature_class_member.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── property_signature_class_member.rs\n    │       │   │   │   └── setter_signature_class_member.rs\n    │       │   │   ├── declarations/\n    │       │   │   │   ├── declare_function_declaration.rs\n    │       │   │   │   ├── declare_function_export_default_declaration.rs\n    │       │   │   │   ├── enum_declaration.rs\n    │       │   │   │   ├── external_module_declaration.rs\n    │       │   │   │   ├── global_declaration.rs\n    │       │   │   │   ├── import_equals_declaration.rs\n    │       │   │   │   ├── interface_declaration.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── module_declaration.rs\n    │       │   │   │   └── type_alias_declaration.rs\n    │       │   │   ├── expressions/\n    │       │   │   │   ├── as_expression.rs\n    │       │   │   │   ├── import_type_arguments.rs\n    │       │   │   │   ├── instantiation_expression.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── non_null_assertion_expression.rs\n    │       │   │   │   ├── satisfies_expression.rs\n    │       │   │   │   ├── type_arguments.rs\n    │       │   │   │   └── type_assertion_expression.rs\n    │       │   │   ├── lists/\n    │       │   │   │   ├── enum_member_list.rs\n    │       │   │   │   ├── index_signature_modifier_list.rs\n    │       │   │   │   ├── intersection_type_element_list.rs\n    │       │   │   │   ├── method_signature_modifier_list.rs\n    │       │   │   │   ├── mod.rs\n    │       │   │   │   ├── property_parameter_modifier_list.rs\n    │       │   │   │   ├── property_signature_modifier_list.rs\n    │       │   │   │   ├── template_element_list.rs\n    │       │   │   │   ├── tuple_type_element_list.rs\n    │       │   │   │   ├── type_argument_list.rs\n    │       │   │   │   ├── type_list.rs\n    │       │   │   │   ├── type_member_list.rs\n    │       │   │   │   ├── type_parameter_list.rs\n    │       │   │   │   ├── type_parameter_modifier_list.rs\n    │       │   │   │   └── union_type_variant_list.rs\n    │       │   │   ├── module/\n    │       │   │   │   ├── export_as_namespace_clause.rs\n    │       │   │   │   ├── export_assignment_clause.rs\n    │       │   │   │   ├── export_declare_clause.rs\n    │       │   │   │   ├── import_type.rs\n    │       │   │   │   ├── import_type_assertion.rs\n    │       │   │   │   ├── import_type_assertion_block.rs\n    │       │   │   │   ├── import_type_qualifier.rs\n    │       │   │   │   └── mod.rs\n    │       │   │   ├── objects/\n    │       │   │   │   ├── literal_enum_member_name.rs\n    │       │   │   │   └── mod.rs\n    │       │   │   ├── statements/\n    │       │   │   │   ├── declare_statement.rs\n    │       │   │   │   └── mod.rs\n    │       │   │   └── types/\n    │       │   │       ├── any_type.rs\n    │       │   │       ├── array_type.rs\n    │       │   │       ├── asserts_return_type.rs\n    │       │   │       ├── bigint_literal_type.rs\n    │       │   │       ├── bigint_type.rs\n    │       │   │       ├── boolean_literal_type.rs\n    │       │   │       ├── boolean_type.rs\n    │       │   │       ├── conditional_type.rs\n    │       │   │       ├── constructor_type.rs\n    │       │   │       ├── function_type.rs\n    │       │   │       ├── indexed_access_type.rs\n    │       │   │       ├── infer_type.rs\n    │       │   │       ├── intersection_type.rs\n    │       │   │       ├── mapped_type.rs\n    │       │   │       ├── mod.rs\n    │       │   │       ├── never_type.rs\n    │       │   │       ├── non_primitive_type.rs\n    │       │   │       ├── null_literal_type.rs\n    │       │   │       ├── number_literal_type.rs\n    │       │   │       ├── number_type.rs\n    │       │   │       ├── object_type.rs\n    │       │   │       ├── parenthesized_type.rs\n    │       │   │       ├── predicate_return_type.rs\n    │       │   │       ├── reference_type.rs\n    │       │   │       ├── string_literal_type.rs\n    │       │   │       ├── string_type.rs\n    │       │   │       ├── symbol_type.rs\n    │       │   │       ├── template_literal_type.rs\n    │       │   │       ├── this_type.rs\n    │       │   │       ├── tuple_type.rs\n    │       │   │       ├── type_operator_type.rs\n    │       │   │       ├── typeof_type.rs\n    │       │   │       ├── undefined_type.rs\n    │       │   │       ├── union_type.rs\n    │       │   │       ├── unknown_type.rs\n    │       │   │       └── void_type.rs\n    │       │   └── utils/\n    │       │       ├── array.rs\n    │       │       ├── assignment_like.rs\n    │       │       ├── conditional.rs\n    │       │       ├── format_binary_like_expression.rs\n    │       │       ├── format_class.rs\n    │       │       ├── format_modifiers.rs\n    │       │       ├── format_node_without_comments.rs\n    │       │       ├── function_body.rs\n    │       │       ├── jsx.rs\n    │       │       ├── mod.rs\n    │       │       ├── object.rs\n    │       │       ├── object_like.rs\n    │       │       ├── object_pattern_like.rs\n    │       │       ├── quickcheck_utils.rs\n    │       │       ├── string_utils.rs\n    │       │       ├── test_each_template.rs\n    │       │       ├── typescript.rs\n    │       │       └── member_chain/\n    │       │           ├── chain_member.rs\n    │       │           ├── groups.rs\n    │       │           ├── mod.rs\n    │       │           └── simple_argument.rs\n    │       └── tests/\n    │           ├── language.rs\n    │           ├── prettier_tests.rs\n    │           ├── quick_test.rs\n    │           ├── spec_test.rs\n    │           ├── spec_tests.rs\n    │           └── specs/\n    │               ├── js/\n    │               │   ├── module/\n    │               │   │   ├── bom_character.js\n    │               │   │   ├── bom_character.js.snap\n    │               │   │   ├── call_expression.js\n    │               │   │   ├── call_expression.js.snap\n    │               │   │   ├── comments.js\n    │               │   │   ├── comments.js.snap\n    │               │   │   ├── ident.js\n    │               │   │   ├── ident.js.snap\n    │               │   │   ├── interpreter-with-trailing-spaces.js\n    │               │   │   ├── interpreter-with-trailing-spaces.js.snap\n    │               │   │   ├── interpreter.js\n    │               │   │   ├── interpreter.js.snap\n    │               │   │   ├── interpreter_with_empty_line.js\n    │               │   │   ├── interpreter_with_empty_line.js.snap\n    │               │   │   ├── newlines.js\n    │               │   │   ├── newlines.js.snap\n    │               │   │   ├── script.js\n    │               │   │   ├── script.js.snap\n    │               │   │   ├── suppression.js\n    │               │   │   ├── suppression.js.snap\n    │               │   │   ├── with.js\n    │               │   │   ├── with.js.snap\n    │               │   │   ├── array/\n    │               │   │   │   ├── array_nested.js\n    │               │   │   │   ├── array_nested.js.snap\n    │               │   │   │   ├── binding_pattern.js\n    │               │   │   │   ├── binding_pattern.js.snap\n    │               │   │   │   ├── empty_lines.js\n    │               │   │   │   ├── empty_lines.js.snap\n    │               │   │   │   ├── holes_comments.js\n    │               │   │   │   ├── holes_comments.js.snap\n    │               │   │   │   ├── spaces.js\n    │               │   │   │   ├── spaces.js.snap\n    │               │   │   │   ├── spread.js\n    │               │   │   │   ├── spread.js.snap\n    │               │   │   │   ├── expand/\n    │               │   │   │   │   ├── expand-always.js\n    │               │   │   │   │   ├── expand-always.js.snap\n    │               │   │   │   │   └── options.json\n    │               │   │   │   └── trailing-commas/\n    │               │   │   │       ├── es5/\n    │               │   │   │       │   ├── array_trailing_commas.js\n    │               │   │   │       │   ├── array_trailing_commas.js.snap\n    │               │   │   │       │   └── options.json\n    │               │   │   │       └── none/\n    │               │   │   │           ├── array_trailing_commas.js\n    │               │   │   │           ├── array_trailing_commas.js.snap\n    │               │   │   │           └── options.json\n    │               │   │   ├── arrow/\n    │               │   │   │   ├── arrow-comments.js\n    │               │   │   │   ├── arrow-comments.js.snap\n    │               │   │   │   ├── arrow_chain_comments.js\n    │               │   │   │   ├── arrow_chain_comments.js.snap\n    │               │   │   │   ├── arrow_function.js\n    │               │   │   │   ├── arrow_function.js.snap\n    │               │   │   │   ├── arrow_nested.js\n    │               │   │   │   ├── arrow_nested.js.snap\n    │               │   │   │   ├── arrow_test_callback.js\n    │               │   │   │   ├── arrow_test_callback.js.snap\n    │               │   │   │   ├── assignment_binding_line_break.js\n    │               │   │   │   ├── assignment_binding_line_break.js.snap\n    │               │   │   │   ├── call.js\n    │               │   │   │   ├── call.js.snap\n    │               │   │   │   ├── curried_indents.js\n    │               │   │   │   ├── curried_indents.js.snap\n    │               │   │   │   ├── currying.js\n    │               │   │   │   ├── currying.js.snap\n    │               │   │   │   ├── options.json\n    │               │   │   │   ├── params.js\n    │               │   │   │   └── params.js.snap\n    │               │   │   ├── assignment/\n    │               │   │   │   ├── array-assignment-holes.js\n    │               │   │   │   ├── array-assignment-holes.js.snap\n    │               │   │   │   ├── assignment.js\n    │               │   │   │   ├── assignment.js.snap\n    │               │   │   │   ├── assignment_ignore.js\n    │               │   │   │   └── assignment_ignore.js.snap\n    │               │   │   ├── binding/\n    │               │   │   │   ├── array-binding-holes.js\n    │               │   │   │   ├── array-binding-holes.js.snap\n    │               │   │   │   ├── array_binding.js\n    │               │   │   │   ├── array_binding.js.snap\n    │               │   │   │   ├── identifier_binding.js\n    │               │   │   │   ├── identifier_binding.js.snap\n    │               │   │   │   ├── nested_bindings.js\n    │               │   │   │   ├── nested_bindings.js.snap\n    │               │   │   │   ├── object_binding.js\n    │               │   │   │   ├── object_binding.js.snap\n    │               │   │   │   └── options.json\n    │               │   │   ├── call/\n    │               │   │   │   ├── call_chain.js\n    │               │   │   │   ├── call_chain.js.snap\n    │               │   │   │   ├── simple_arguments.js\n    │               │   │   │   └── simple_arguments.js.snap\n    │               │   │   ├── class/\n    │               │   │   │   ├── class.js\n    │               │   │   │   ├── class.js.snap\n    │               │   │   │   ├── class_comments.js\n    │               │   │   │   ├── class_comments.js.snap\n    │               │   │   │   ├── private_method.js\n    │               │   │   │   └── private_method.js.snap\n    │               │   │   ├── comments/\n    │               │   │   │   ├── import_exports.js\n    │               │   │   │   ├── import_exports.js.snap\n    │               │   │   │   └── nested_comments/\n    │               │   │   │       ├── nested_comments.js\n    │               │   │   │       ├── nested_comments.js.snap\n    │               │   │   │       └── options.json\n    │               │   │   ├── declarations/\n    │               │   │   │   ├── test_declaration.js\n    │               │   │   │   ├── test_declaration.js.snap\n    │               │   │   │   ├── variable_declaration.js\n    │               │   │   │   └── variable_declaration.js.snap\n    │               │   │   ├── decorators/\n    │               │   │   │   ├── class_members_call_decorator.js\n    │               │   │   │   ├── class_members_call_decorator.js.snap\n    │               │   │   │   ├── class_members_mixed.js\n    │               │   │   │   ├── class_members_mixed.js.snap\n    │               │   │   │   ├── class_members_simple.js\n    │               │   │   │   ├── class_members_simple.js.snap\n    │               │   │   │   ├── class_simple.js\n    │               │   │   │   ├── class_simple.js.snap\n    │               │   │   │   ├── class_simple_call_decorator.js\n    │               │   │   │   ├── class_simple_call_decorator.js.snap\n    │               │   │   │   ├── export_default_1.js\n    │               │   │   │   ├── export_default_1.js.snap\n    │               │   │   │   ├── export_default_2.js\n    │               │   │   │   ├── export_default_2.js.snap\n    │               │   │   │   ├── export_default_3.js\n    │               │   │   │   ├── export_default_3.js.snap\n    │               │   │   │   ├── export_default_4.js\n    │               │   │   │   ├── export_default_4.js.snap\n    │               │   │   │   ├── expression.js\n    │               │   │   │   ├── expression.js.snap\n    │               │   │   │   ├── multiline.js\n    │               │   │   │   └── multiline.js.snap\n    │               │   │   ├── each/\n    │               │   │   │   ├── each.js\n    │               │   │   │   └── each.js.snap\n    │               │   │   ├── export/\n    │               │   │   │   ├── class_clause.js\n    │               │   │   │   ├── class_clause.js.snap\n    │               │   │   │   ├── expression_clause.js\n    │               │   │   │   ├── expression_clause.js.snap\n    │               │   │   │   ├── from_clause.js\n    │               │   │   │   ├── from_clause.js.snap\n    │               │   │   │   ├── function_clause.js\n    │               │   │   │   ├── function_clause.js.snap\n    │               │   │   │   ├── named_clause.js\n    │               │   │   │   ├── named_clause.js.snap\n    │               │   │   │   ├── named_from_clause.js\n    │               │   │   │   ├── named_from_clause.js.snap\n    │               │   │   │   ├── variable_declaration.js\n    │               │   │   │   ├── variable_declaration.js.snap\n    │               │   │   │   ├── bracket-spacing/\n    │               │   │   │   │   ├── export_bracket_spacing.js\n    │               │   │   │   │   ├── export_bracket_spacing.js.snap\n    │               │   │   │   │   └── options.json\n    │               │   │   │   └── trailing-commas/\n    │               │   │   │       ├── es5/\n    │               │   │   │       │   ├── export_trailing_commas.js\n    │               │   │   │       │   ├── export_trailing_commas.js.snap\n    │               │   │   │       │   └── options.json\n    │               │   │   │       └── none/\n    │               │   │   │           ├── export_trailing_commas.js\n    │               │   │   │           ├── export_trailing_commas.js.snap\n    │               │   │   │           └── options.json\n    │               │   │   ├── expression/\n    │               │   │   │   ├── binary_expression.js\n    │               │   │   │   ├── binary_expression.js.snap\n    │               │   │   │   ├── binary_range_expression.js\n    │               │   │   │   ├── binary_range_expression.js.snap\n    │               │   │   │   ├── binaryish_expression.js\n    │               │   │   │   ├── binaryish_expression.js.snap\n    │               │   │   │   ├── call_arguments.js\n    │               │   │   │   ├── call_arguments.js.snap\n    │               │   │   │   ├── computed-member-expression.js\n    │               │   │   │   ├── computed-member-expression.js.snap\n    │               │   │   │   ├── conditional_expression.js\n    │               │   │   │   ├── conditional_expression.js.snap\n    │               │   │   │   ├── literal_expression.js\n    │               │   │   │   ├── literal_expression.js.snap\n    │               │   │   │   ├── logical_expression.js\n    │               │   │   │   ├── logical_expression.js.snap\n    │               │   │   │   ├── new_expression.js\n    │               │   │   │   ├── new_expression.js.snap\n    │               │   │   │   ├── post_update_expression.js\n    │               │   │   │   ├── post_update_expression.js.snap\n    │               │   │   │   ├── pre_update_expression.js\n    │               │   │   │   ├── pre_update_expression.js.snap\n    │               │   │   │   ├── sequence_expression.js\n    │               │   │   │   ├── sequence_expression.js.snap\n    │               │   │   │   ├── static_member_expression.js\n    │               │   │   │   ├── static_member_expression.js.snap\n    │               │   │   │   ├── this_expression.js\n    │               │   │   │   ├── this_expression.js.snap\n    │               │   │   │   ├── unary_expression.js\n    │               │   │   │   ├── unary_expression.js.snap\n    │               │   │   │   ├── unary_expression_verbatim_argument.js\n    │               │   │   │   ├── unary_expression_verbatim_argument.js.snap\n    │               │   │   │   ├── import_meta_expression/\n    │               │   │   │   │   ├── import_meta_expression.js\n    │               │   │   │   │   ├── import_meta_expression.js.snap\n    │               │   │   │   │   └── options.json\n    │               │   │   │   ├── member-chain/\n    │               │   │   │   │   ├── complex_arguments.js\n    │               │   │   │   │   ├── complex_arguments.js.snap\n    │               │   │   │   │   ├── computed.js\n    │               │   │   │   │   ├── computed.js.snap\n    │               │   │   │   │   ├── inline-merge.js\n    │               │   │   │   │   ├── inline-merge.js.snap\n    │               │   │   │   │   ├── multi_line.js\n    │               │   │   │   │   ├── multi_line.js.snap\n    │               │   │   │   │   ├── static_member_regex.js\n    │               │   │   │   │   └── static_member_regex.js.snap\n    │               │   │   │   └── nested_conditional_expression/\n    │               │   │   │       ├── nested_conditional_expression.js\n    │               │   │   │       ├── nested_conditional_expression.js.snap\n    │               │   │   │       └── options.json\n    │               │   │   ├── function/\n    │               │   │   │   ├── function.js\n    │               │   │   │   ├── function.js.snap\n    │               │   │   │   ├── function_args.js\n    │               │   │   │   ├── function_args.js.snap\n    │               │   │   │   ├── function_comments.js\n    │               │   │   │   └── function_comments.js.snap\n    │               │   │   ├── import/\n    │               │   │   │   ├── bare_import.js\n    │               │   │   │   ├── bare_import.js.snap\n    │               │   │   │   ├── default_import.js\n    │               │   │   │   ├── default_import.js.snap\n    │               │   │   │   ├── import_call.js\n    │               │   │   │   ├── import_call.js.snap\n    │               │   │   │   ├── import_specifiers.js\n    │               │   │   │   ├── import_specifiers.js.snap\n    │               │   │   │   ├── named_import_clause.js\n    │               │   │   │   ├── named_import_clause.js.snap\n    │               │   │   │   ├── namespace_import.js\n    │               │   │   │   ├── namespace_import.js.snap\n    │               │   │   │   ├── bracket-spacing/\n    │               │   │   │   │   ├── import_bracket_spacing.js\n    │               │   │   │   │   ├── import_bracket_spacing.js.snap\n    │               │   │   │   │   └── options.json\n    │               │   │   │   └── trailing-commas/\n    │               │   │   │       ├── es5/\n    │               │   │   │       │   ├── import_trailing_commas.js\n    │               │   │   │       │   ├── import_trailing_commas.js.snap\n    │               │   │   │       │   └── options.json\n    │               │   │   │       └── none/\n    │               │   │   │           ├── import_trailing_commas.js\n    │               │   │   │           ├── import_trailing_commas.js.snap\n    │               │   │   │           └── options.json\n    │               │   │   ├── indent-width/\n    │               │   │   │   ├── 4/\n    │               │   │   │   │   ├── example-1.js\n    │               │   │   │   │   ├── example-1.js.snap\n    │               │   │   │   │   ├── example-2.js\n    │               │   │   │   │   ├── example-2.js.snap\n    │               │   │   │   │   └── options.json\n    │               │   │   │   └── 8/\n    │               │   │   │       ├── example-1.js\n    │               │   │   │       ├── example-1.js.snap\n    │               │   │   │       ├── example-2.js\n    │               │   │   │       ├── example-2.js.snap\n    │               │   │   │       └── options.json\n    │               │   │   ├── invalid/\n    │               │   │   │   ├── block_stmt_err.js\n    │               │   │   │   ├── block_stmt_err.js.snap\n    │               │   │   │   ├── if_stmt_err.js\n    │               │   │   │   └── if_stmt_err.js.snap\n    │               │   │   ├── line-ending/\n    │               │   │   │   ├── cr/\n    │               │   │   │   │   ├── line_ending.js\n    │               │   │   │   │   ├── line_ending.js.snap\n    │               │   │   │   │   └── options.json\n    │               │   │   │   └── crlf/\n    │               │   │   │       ├── line_ending.js\n    │               │   │   │       ├── line_ending.js.snap\n    │               │   │   │       └── options.json\n    │               │   │   ├── no-semi/\n    │               │   │   │   ├── class.js\n    │               │   │   │   ├── class.js.snap\n    │               │   │   │   ├── issue2006.js\n    │               │   │   │   ├── issue2006.js.snap\n    │               │   │   │   ├── issue6029.js\n    │               │   │   │   ├── issue6029.js.snap\n    │               │   │   │   ├── issue6375.js\n    │               │   │   │   ├── issue6375.js.snap\n    │               │   │   │   ├── no-semi.js\n    │               │   │   │   ├── no-semi.js.snap\n    │               │   │   │   ├── options.json\n    │               │   │   │   ├── private-field.js\n    │               │   │   │   ├── private-field.js.snap\n    │               │   │   │   ├── semicolons-asi.js\n    │               │   │   │   ├── semicolons-asi.js.snap\n    │               │   │   │   ├── semicolons_range.js\n    │               │   │   │   └── semicolons_range.js.snap\n    │               │   │   ├── number/\n    │               │   │   │   ├── number.js\n    │               │   │   │   ├── number.js.snap\n    │               │   │   │   ├── number_with_space.js\n    │               │   │   │   └── number_with_space.js.snap\n    │               │   │   ├── object/\n    │               │   │   │   ├── computed_member.js\n    │               │   │   │   ├── computed_member.js.snap\n    │               │   │   │   ├── getter_setter.js\n    │               │   │   │   ├── getter_setter.js.snap\n    │               │   │   │   ├── numeric-property.js\n    │               │   │   │   ├── numeric-property.js.snap\n    │               │   │   │   ├── object.js\n    │               │   │   │   ├── object.js.snap\n    │               │   │   │   ├── object_comments.js\n    │               │   │   │   ├── object_comments.js.snap\n    │               │   │   │   ├── octal_literals_key.js\n    │               │   │   │   ├── octal_literals_key.js.snap\n    │               │   │   │   ├── property_key.js\n    │               │   │   │   ├── property_key.js.snap\n    │               │   │   │   ├── property_object_member.js\n    │               │   │   │   ├── property_object_member.js.snap\n    │               │   │   │   ├── bracket-spacing/\n    │               │   │   │   │   ├── object_bracket_spacing.js\n    │               │   │   │   │   ├── object_bracket_spacing.js.snap\n    │               │   │   │   │   └── options.json\n    │               │   │   │   ├── expand/\n    │               │   │   │   │   ├── expand-never.js\n    │               │   │   │   │   ├── expand-never.js.snap\n    │               │   │   │   │   └── options.json\n    │               │   │   │   └── trailing-commas/\n    │               │   │   │       ├── es5/\n    │               │   │   │       │   ├── object_trailing_commas.js\n    │               │   │   │       │   ├── object_trailing_commas.js.snap\n    │               │   │   │       │   └── options.json\n    │               │   │   │       └── none/\n    │               │   │   │           ├── object_trailing_commas.js\n    │               │   │   │           ├── object_trailing_commas.js.snap\n    │               │   │   │           └── options.json\n    │               │   │   ├── operator-linebreak/\n    │               │   │   │   └── before/\n    │               │   │   │       ├── operator_linebreak.js\n    │               │   │   │       ├── operator_linebreak.js.snap\n    │               │   │   │       └── options.json\n    │               │   │   ├── parentheses/\n    │               │   │   │   ├── parentheses.js\n    │               │   │   │   ├── parentheses.js.snap\n    │               │   │   │   ├── range_parentheses_binary.js\n    │               │   │   │   └── range_parentheses_binary.js.snap\n    │               │   │   ├── range/\n    │               │   │   │   ├── range_parenthesis_after_semicol.js\n    │               │   │   │   ├── range_parenthesis_after_semicol.js.snap\n    │               │   │   │   ├── range_parenthesis_after_semicol_1.js\n    │               │   │   │   └── range_parenthesis_after_semicol_1.js.snap\n    │               │   │   ├── statement/\n    │               │   │   │   ├── block_statement.js\n    │               │   │   │   ├── block_statement.js.snap\n    │               │   │   │   ├── continue_stmt.js\n    │               │   │   │   ├── continue_stmt.js.snap\n    │               │   │   │   ├── do_while.js\n    │               │   │   │   ├── do_while.js.snap\n    │               │   │   │   ├── empty_blocks.js\n    │               │   │   │   ├── empty_blocks.js.snap\n    │               │   │   │   ├── for_in.js\n    │               │   │   │   ├── for_in.js.snap\n    │               │   │   │   ├── for_loop.js\n    │               │   │   │   ├── for_loop.js.snap\n    │               │   │   │   ├── for_of.js\n    │               │   │   │   ├── for_of.js.snap\n    │               │   │   │   ├── if_chain.js\n    │               │   │   │   ├── if_chain.js.snap\n    │               │   │   │   ├── if_else.js\n    │               │   │   │   ├── if_else.js.snap\n    │               │   │   │   ├── return.js\n    │               │   │   │   ├── return.js.snap\n    │               │   │   │   ├── return_verbatim_argument.js\n    │               │   │   │   ├── return_verbatim_argument.js.snap\n    │               │   │   │   ├── statement.js\n    │               │   │   │   ├── statement.js.snap\n    │               │   │   │   ├── switch.js\n    │               │   │   │   ├── switch.js.snap\n    │               │   │   │   ├── switch_comment.js\n    │               │   │   │   ├── switch_comment.js.snap\n    │               │   │   │   ├── throw.js\n    │               │   │   │   ├── throw.js.snap\n    │               │   │   │   ├── try_catch_finally.js\n    │               │   │   │   ├── try_catch_finally.js.snap\n    │               │   │   │   ├── while_loop.js\n    │               │   │   │   └── while_loop.js.snap\n    │               │   │   ├── string/\n    │               │   │   │   ├── quotePreserve/\n    │               │   │   │   │   ├── directives.js\n    │               │   │   │   │   ├── directives.js.snap\n    │               │   │   │   │   ├── options.json\n    │               │   │   │   │   ├── parentheses_token.js\n    │               │   │   │   │   ├── parentheses_token.js.snap\n    │               │   │   │   │   ├── properties_quotes.js\n    │               │   │   │   │   ├── properties_quotes.js.snap\n    │               │   │   │   │   ├── string.js\n    │               │   │   │   │   └── string.js.snap\n    │               │   │   │   └── quoteSingle/\n    │               │   │   │       ├── directives.js\n    │               │   │   │       ├── directives.js.snap\n    │               │   │   │       ├── options.json\n    │               │   │   │       ├── parentheses_token.js\n    │               │   │   │       ├── parentheses_token.js.snap\n    │               │   │   │       ├── properties_quotes.js\n    │               │   │   │       ├── properties_quotes.js.snap\n    │               │   │   │       ├── string.js\n    │               │   │   │       └── string.js.snap\n    │               │   │   └── template/\n    │               │   │       ├── template.js\n    │               │   │       └── template.js.snap\n    │               │   └── script/\n    │               │       ├── script.js\n    │               │       ├── script.js.snap\n    │               │       ├── script_with_bom.js\n    │               │       ├── script_with_bom.js.snap\n    │               │       ├── with.js\n    │               │       └── with.js.snap\n    │               ├── jsx/\n    │               │   ├── arrow_function.jsx\n    │               │   ├── arrow_function.jsx.snap\n    │               │   ├── attribute_escape.jsx\n    │               │   ├── attribute_escape.jsx.snap\n    │               │   ├── attributes.jsx\n    │               │   ├── attributes.jsx.snap\n    │               │   ├── comments.jsx\n    │               │   ├── comments.jsx.snap\n    │               │   ├── conditional.jsx\n    │               │   ├── conditional.jsx.snap\n    │               │   ├── element.jsx\n    │               │   ├── element.jsx.snap\n    │               │   ├── fragment.jsx\n    │               │   ├── fragment.jsx.snap\n    │               │   ├── new-lines.jsx\n    │               │   ├── new-lines.jsx.snap\n    │               │   ├── parentheses_range.jsx\n    │               │   ├── parentheses_range.jsx.snap\n    │               │   ├── self_closing.jsx\n    │               │   ├── self_closing.jsx.snap\n    │               │   ├── smoke.jsx\n    │               │   ├── smoke.jsx.snap\n    │               │   ├── text_children.jsx\n    │               │   ├── text_children.jsx.snap\n    │               │   ├── attribute_position/\n    │               │   │   ├── attribute_position.jsx\n    │               │   │   ├── attribute_position.jsx.snap\n    │               │   │   └── options.json\n    │               │   ├── bracket_same_line/\n    │               │   │   ├── bracket_same_line.jsx\n    │               │   │   ├── bracket_same_line.jsx.snap\n    │               │   │   └── options.json\n    │               │   ├── multiline_jsx_string/\n    │               │   │   ├── multiline_jsx_string.jsx\n    │               │   │   ├── multiline_jsx_string.jsx.snap\n    │               │   │   └── options.json\n    │               │   └── quote_style/\n    │               │       ├── jsx_double_string_double/\n    │               │       │   ├── options.json\n    │               │       │   ├── quote_style.jsx\n    │               │       │   └── quote_style.jsx.snap\n    │               │       ├── jsx_double_string_single/\n    │               │       │   ├── options.json\n    │               │       │   ├── quote_style.jsx\n    │               │       │   └── quote_style.jsx.snap\n    │               │       ├── jsx_single_string_double/\n    │               │       │   ├── options.json\n    │               │       │   ├── quote_style.jsx\n    │               │       │   └── quote_style.jsx.snap\n    │               │       └── jsx_single_string_single/\n    │               │           ├── options.json\n    │               │           ├── quote_style.jsx\n    │               │           └── quote_style.jsx.snap\n    │               └── prettier/\n    │                   ├── README.md\n    │                   └── js/\n    │                       ├── array-spread/\n    │                       │   ├── multiple.js\n    │                       │   └── multiple.js.prettier-snap\n    │                       ├── arrays/\n    │                       │   ├── empty.js\n    │                       │   ├── empty.js.prettier-snap\n    │                       │   ├── holes-in-args.js\n    │                       │   ├── holes-in-args.js.prettier-snap\n    │                       │   ├── issue-10159.js\n    │                       │   ├── issue-10159.js.prettier-snap\n    │                       │   ├── last.js\n    │                       │   ├── last.js.prettier-snap\n    │                       │   ├── nested.js\n    │                       │   ├── nested.js.prettier-snap\n    │                       │   ├── numbers-in-args.js\n    │                       │   ├── numbers-in-args.js.prettier-snap\n    │                       │   ├── numbers-in-assignment.js\n    │                       │   ├── numbers-in-assignment.js.prettier-snap\n    │                       │   ├── numbers-negative-comment-after-minus.js\n    │                       │   ├── numbers-negative-comment-after-minus.js.prettier-snap\n    │                       │   ├── numbers-negative.js\n    │                       │   ├── numbers-negative.js.prettier-snap\n    │                       │   ├── numbers-trailing-comma.js\n    │                       │   ├── numbers-trailing-comma.js.prettier-snap\n    │                       │   ├── numbers-with-holes.js\n    │                       │   ├── numbers-with-holes.js.prettier-snap\n    │                       │   ├── numbers-with-holes.js.snap\n    │                       │   ├── numbers-with-trailing-comments.js\n    │                       │   ├── numbers-with-trailing-comments.js.prettier-snap\n    │                       │   ├── numbers-with-tricky-comments.js\n    │                       │   ├── numbers-with-tricky-comments.js.prettier-snap\n    │                       │   ├── numbers1.js\n    │                       │   ├── numbers1.js.prettier-snap\n    │                       │   ├── numbers2.js\n    │                       │   ├── numbers2.js.prettier-snap\n    │                       │   ├── numbers3.js\n    │                       │   ├── numbers3.js.prettier-snap\n    │                       │   ├── preserve_empty_lines.js\n    │                       │   ├── preserve_empty_lines.js.prettier-snap\n    │                       │   ├── tuple-and-record.js\n    │                       │   ├── tuple-and-record.js.prettier-snap\n    │                       │   └── tuple-and-record.js.snap\n    │                       ├── arrow-call/\n    │                       │   ├── arrow_call.js\n    │                       │   ├── arrow_call.js.prettier-snap\n    │                       │   ├── class-property.js\n    │                       │   └── class-property.js.prettier-snap\n    │                       ├── arrows/\n    │                       │   ├── arrow-chain-with-trailing-comments.js\n    │                       │   ├── arrow-chain-with-trailing-comments.js.prettier-snap\n    │                       │   ├── arrow_function_expression.js\n    │                       │   ├── arrow_function_expression.js.prettier-snap\n    │                       │   ├── assignment-chain-with-arrow-chain.js\n    │                       │   ├── assignment-chain-with-arrow-chain.js.prettier-snap\n    │                       │   ├── block_like.js\n    │                       │   ├── block_like.js.prettier-snap\n    │                       │   ├── call.js\n    │                       │   ├── call.js.prettier-snap\n    │                       │   ├── chain-as-arg.js\n    │                       │   ├── chain-as-arg.js.prettier-snap\n    │                       │   ├── chain-in-logical-expression.js\n    │                       │   ├── chain-in-logical-expression.js.prettier-snap\n    │                       │   ├── comment.js\n    │                       │   ├── comment.js.prettier-snap\n    │                       │   ├── curried.js\n    │                       │   ├── curried.js.prettier-snap\n    │                       │   ├── currying-2.js\n    │                       │   ├── currying-2.js.prettier-snap\n    │                       │   ├── currying-3.js\n    │                       │   ├── currying-3.js.prettier-snap\n    │                       │   ├── currying-4.js\n    │                       │   ├── currying-4.js.prettier-snap\n    │                       │   ├── currying-4.js.snap\n    │                       │   ├── currying.js\n    │                       │   ├── currying.js.prettier-snap\n    │                       │   ├── issue-1389-curry.js\n    │                       │   ├── issue-1389-curry.js.prettier-snap\n    │                       │   ├── issue-4166-curry.js\n    │                       │   ├── issue-4166-curry.js.prettier-snap\n    │                       │   ├── long-call-no-args.js\n    │                       │   ├── long-call-no-args.js.prettier-snap\n    │                       │   ├── long-contents.js\n    │                       │   ├── long-contents.js.prettier-snap\n    │                       │   ├── parens.js\n    │                       │   ├── parens.js.prettier-snap\n    │                       │   ├── tuple-and-record.js\n    │                       │   ├── tuple-and-record.js.prettier-snap\n    │                       │   ├── tuple-and-record.js.snap\n    │                       │   ├── newline-before-arrow/\n    │                       │   │   ├── newline-before-arrow.js\n    │                       │   │   ├── newline-before-arrow.js.prettier-snap\n    │                       │   │   └── newline-before-arrow.js.snap\n    │                       │   └── semi/\n    │                       │       ├── semi.js\n    │                       │       └── semi.js.prettier-snap\n    │                       ├── arrows-bind/\n    │                       │   ├── arrows-bind.js\n    │                       │   ├── arrows-bind.js.prettier-snap\n    │                       │   └── arrows-bind.js.snap\n    │                       ├── assignment/\n    │                       │   ├── binaryish.js\n    │                       │   ├── binaryish.js.prettier-snap\n    │                       │   ├── call-with-template.js\n    │                       │   ├── call-with-template.js.prettier-snap\n    │                       │   ├── chain-two-segments.js\n    │                       │   ├── chain-two-segments.js.prettier-snap\n    │                       │   ├── chain.js\n    │                       │   ├── chain.js.prettier-snap\n    │                       │   ├── destructuring-array.js\n    │                       │   ├── destructuring-array.js.prettier-snap\n    │                       │   ├── destructuring-heuristic.js\n    │                       │   ├── destructuring-heuristic.js.prettier-snap\n    │                       │   ├── destructuring.js\n    │                       │   ├── destructuring.js.prettier-snap\n    │                       │   ├── discussion-15196.js\n    │                       │   ├── discussion-15196.js.prettier-snap\n    │                       │   ├── issue-10218.js\n    │                       │   ├── issue-10218.js.prettier-snap\n    │                       │   ├── issue-1419.js\n    │                       │   ├── issue-1419.js.prettier-snap\n    │                       │   ├── issue-15534.js\n    │                       │   ├── issue-15534.js.prettier-snap\n    │                       │   ├── issue-1966.js\n    │                       │   ├── issue-1966.js.prettier-snap\n    │                       │   ├── issue-2184.js\n    │                       │   ├── issue-2184.js.prettier-snap\n    │                       │   ├── issue-2482-1.js\n    │                       │   ├── issue-2482-1.js.prettier-snap\n    │                       │   ├── issue-2482-2.js\n    │                       │   ├── issue-2482-2.js.prettier-snap\n    │                       │   ├── issue-2540.js\n    │                       │   ├── issue-2540.js.prettier-snap\n    │                       │   ├── issue-3819.js\n    │                       │   ├── issue-3819.js.prettier-snap\n    │                       │   ├── issue-4094.js\n    │                       │   ├── issue-4094.js.prettier-snap\n    │                       │   ├── issue-5610.js\n    │                       │   ├── issue-5610.js.prettier-snap\n    │                       │   ├── issue-6922.js\n    │                       │   ├── issue-6922.js.prettier-snap\n    │                       │   ├── issue-7091.js\n    │                       │   ├── issue-7091.js.prettier-snap\n    │                       │   ├── issue-7572.js\n    │                       │   ├── issue-7572.js.prettier-snap\n    │                       │   ├── issue-7961.js\n    │                       │   ├── issue-7961.js.prettier-snap\n    │                       │   ├── issue-8218.js\n    │                       │   ├── issue-8218.js.prettier-snap\n    │                       │   ├── lone-arg.js\n    │                       │   ├── lone-arg.js.prettier-snap\n    │                       │   ├── sequence.js\n    │                       │   ├── sequence.js.prettier-snap\n    │                       │   ├── unary.js\n    │                       │   └── unary.js.prettier-snap\n    │                       ├── assignment-comments/\n    │                       │   ├── call.js\n    │                       │   ├── call.js.prettier-snap\n    │                       │   ├── call2.js\n    │                       │   ├── call2.js.prettier-snap\n    │                       │   ├── function.js\n    │                       │   ├── function.js.prettier-snap\n    │                       │   ├── identifier.js\n    │                       │   ├── identifier.js.prettier-snap\n    │                       │   ├── number.js\n    │                       │   ├── number.js.prettier-snap\n    │                       │   ├── string.js\n    │                       │   └── string.js.prettier-snap\n    │                       ├── assignment-expression/\n    │                       │   ├── assignment_expression.js\n    │                       │   └── assignment_expression.js.prettier-snap\n    │                       ├── async/\n    │                       │   ├── async-iteration.js\n    │                       │   ├── async-iteration.js.prettier-snap\n    │                       │   ├── async-shorthand-method.js\n    │                       │   ├── async-shorthand-method.js.prettier-snap\n    │                       │   ├── await-parse.js\n    │                       │   ├── await-parse.js.prettier-snap\n    │                       │   ├── conditional-expression.js\n    │                       │   ├── conditional-expression.js.prettier-snap\n    │                       │   ├── exponentiation.js\n    │                       │   ├── exponentiation.js.prettier-snap\n    │                       │   ├── inline-await.js\n    │                       │   ├── inline-await.js.prettier-snap\n    │                       │   ├── nested.js\n    │                       │   ├── nested.js.prettier-snap\n    │                       │   ├── nested2.js\n    │                       │   ├── nested2.js.prettier-snap\n    │                       │   ├── parens.js\n    │                       │   ├── parens.js.prettier-snap\n    │                       │   ├── simple-nested-await.js\n    │                       │   └── simple-nested-await.js.prettier-snap\n    │                       ├── async-do-expressions/\n    │                       │   ├── async-do-expressions.js\n    │                       │   ├── async-do-expressions.js.prettier-snap\n    │                       │   └── async-do-expressions.js.snap\n    │                       ├── babel-plugins/\n    │                       │   ├── async-do-expressions.js\n    │                       │   ├── async-do-expressions.js.prettier-snap\n    │                       │   ├── async-do-expressions.js.snap\n    │                       │   ├── async-generators.js\n    │                       │   ├── async-generators.js.prettier-snap\n    │                       │   ├── bigint.js\n    │                       │   ├── bigint.js.prettier-snap\n    │                       │   ├── class-properties.js\n    │                       │   ├── class-properties.js.prettier-snap\n    │                       │   ├── class-static-block.js\n    │                       │   ├── class-static-block.js.prettier-snap\n    │                       │   ├── decimal.js\n    │                       │   ├── decimal.js.prettier-snap\n    │                       │   ├── decimal.js.snap\n    │                       │   ├── decorator-auto-accessors.js\n    │                       │   ├── decorator-auto-accessors.js.prettier-snap\n    │                       │   ├── decorators.js\n    │                       │   ├── decorators.js.prettier-snap\n    │                       │   ├── deferred-import-evaluation.js\n    │                       │   ├── deferred-import-evaluation.js.prettier-snap\n    │                       │   ├── destructuring-private.js\n    │                       │   ├── destructuring-private.js.prettier-snap\n    │                       │   ├── do-expressions.js\n    │                       │   ├── do-expressions.js.prettier-snap\n    │                       │   ├── do-expressions.js.snap\n    │                       │   ├── dynamic-import.js\n    │                       │   ├── dynamic-import.js.prettier-snap\n    │                       │   ├── explicit-resource-management.js\n    │                       │   ├── explicit-resource-management.js.prettier-snap\n    │                       │   ├── export-default-from.js\n    │                       │   ├── export-default-from.js.prettier-snap\n    │                       │   ├── export-default-from.js.snap\n    │                       │   ├── export-namespace-from.js\n    │                       │   ├── export-namespace-from.js.prettier-snap\n    │                       │   ├── function-bind.js\n    │                       │   ├── function-bind.js.prettier-snap\n    │                       │   ├── function-bind.js.snap\n    │                       │   ├── function-sent.js\n    │                       │   ├── function-sent.js.prettier-snap\n    │                       │   ├── import-assertions-dynamic.js\n    │                       │   ├── import-assertions-dynamic.js.prettier-snap\n    │                       │   ├── import-assertions-static.js\n    │                       │   ├── import-assertions-static.js.prettier-snap\n    │                       │   ├── import-assertions-static.js.snap\n    │                       │   ├── import-attributes-dynamic.js\n    │                       │   ├── import-attributes-dynamic.js.prettier-snap\n    │                       │   ├── import-attributes-static.js\n    │                       │   ├── import-attributes-static.js.prettier-snap\n    │                       │   ├── import-meta.js\n    │                       │   ├── import-meta.js.prettier-snap\n    │                       │   ├── import-reflection.js\n    │                       │   ├── import-reflection.js.prettier-snap\n    │                       │   ├── import-reflection.js.snap\n    │                       │   ├── jsx.js\n    │                       │   ├── jsx.js.prettier-snap\n    │                       │   ├── logical-assignment-operators.js\n    │                       │   ├── logical-assignment-operators.js.prettier-snap\n    │                       │   ├── module-blocks.js\n    │                       │   ├── module-blocks.js.prettier-snap\n    │                       │   ├── module-blocks.js.snap\n    │                       │   ├── module-string-names.js\n    │                       │   ├── module-string-names.js.prettier-snap\n    │                       │   ├── nullish-coalescing-operator.js\n    │                       │   ├── nullish-coalescing-operator.js.prettier-snap\n    │                       │   ├── numeric-separator.js\n    │                       │   ├── numeric-separator.js.prettier-snap\n    │                       │   ├── object-rest-spread.js\n    │                       │   ├── object-rest-spread.js.prettier-snap\n    │                       │   ├── optional-catch-binding.js\n    │                       │   ├── optional-catch-binding.js.prettier-snap\n    │                       │   ├── optional-chaining-assignment.js\n    │                       │   ├── optional-chaining-assignment.js.prettier-snap\n    │                       │   ├── optional-chaining.js\n    │                       │   ├── optional-chaining.js.prettier-snap\n    │                       │   ├── partial-application.js\n    │                       │   ├── partial-application.js.prettier-snap\n    │                       │   ├── partial-application.js.snap\n    │                       │   ├── pipeline-operator-fsharp.js\n    │                       │   ├── pipeline-operator-fsharp.js.prettier-snap\n    │                       │   ├── pipeline-operator-fsharp.js.snap\n    │                       │   ├── pipeline-operator-hack.js\n    │                       │   ├── pipeline-operator-hack.js.prettier-snap\n    │                       │   ├── pipeline-operator-hack.js.snap\n    │                       │   ├── pipeline-operator-minimal.js\n    │                       │   ├── pipeline-operator-minimal.js.prettier-snap\n    │                       │   ├── pipeline-operator-minimal.js.snap\n    │                       │   ├── private-fields-in-in.js\n    │                       │   ├── private-fields-in-in.js.prettier-snap\n    │                       │   ├── private-methods.js\n    │                       │   ├── private-methods.js.prettier-snap\n    │                       │   ├── record-tuple-record.js\n    │                       │   ├── record-tuple-record.js.prettier-snap\n    │                       │   ├── record-tuple-record.js.snap\n    │                       │   ├── record-tuple-tuple.js\n    │                       │   ├── record-tuple-tuple.js.prettier-snap\n    │                       │   ├── record-tuple-tuple.js.snap\n    │                       │   ├── regex-v-flag.js\n    │                       │   ├── regex-v-flag.js.prettier-snap\n    │                       │   ├── regexp-modifiers.js\n    │                       │   ├── regexp-modifiers.js.prettier-snap\n    │                       │   ├── source-phase-imports.js\n    │                       │   ├── source-phase-imports.js.prettier-snap\n    │                       │   ├── source-phase-imports.js.snap\n    │                       │   ├── throw-expressions.js\n    │                       │   ├── throw-expressions.js.prettier-snap\n    │                       │   ├── throw-expressions.js.snap\n    │                       │   ├── v8intrinsic.js\n    │                       │   ├── v8intrinsic.js.prettier-snap\n    │                       │   └── v8intrinsic.js.snap\n    │                       ├── big-int/\n    │                       │   ├── literal.js\n    │                       │   └── literal.js.prettier-snap\n    │                       ├── binary-expressions/\n    │                       │   ├── arrow.js\n    │                       │   ├── arrow.js.prettier-snap\n    │                       │   ├── bitwise-flags.js\n    │                       │   ├── bitwise-flags.js.prettier-snap\n    │                       │   ├── call.js\n    │                       │   ├── call.js.prettier-snap\n    │                       │   ├── comment.js\n    │                       │   ├── comment.js.prettier-snap\n    │                       │   ├── equality.js\n    │                       │   ├── equality.js.prettier-snap\n    │                       │   ├── exp.js\n    │                       │   ├── exp.js.prettier-snap\n    │                       │   ├── if.js\n    │                       │   ├── if.js.prettier-snap\n    │                       │   ├── in_instanceof.js\n    │                       │   ├── in_instanceof.js.prettier-snap\n    │                       │   ├── inline-jsx.js\n    │                       │   ├── inline-jsx.js.prettier-snap\n    │                       │   ├── inline-object-array.js\n    │                       │   ├── inline-object-array.js.prettier-snap\n    │                       │   ├── jsx_parent.js\n    │                       │   ├── jsx_parent.js.prettier-snap\n    │                       │   ├── like-regexp.js\n    │                       │   ├── like-regexp.js.prettier-snap\n    │                       │   ├── math.js\n    │                       │   ├── math.js.prettier-snap\n    │                       │   ├── return.js\n    │                       │   ├── return.js.prettier-snap\n    │                       │   ├── short-right.js\n    │                       │   ├── short-right.js.prettier-snap\n    │                       │   ├── test.js\n    │                       │   ├── test.js.prettier-snap\n    │                       │   ├── tuple-and-record.js\n    │                       │   ├── tuple-and-record.js.prettier-snap\n    │                       │   ├── tuple-and-record.js.snap\n    │                       │   ├── unary.js\n    │                       │   └── unary.js.prettier-snap\n    │                       ├── binary_math/\n    │                       │   ├── parens.js\n    │                       │   └── parens.js.prettier-snap\n    │                       ├── bind-expressions/\n    │                       │   ├── await.js\n    │                       │   ├── await.js.prettier-snap\n    │                       │   ├── await.js.snap\n    │                       │   ├── bind_parens.js\n    │                       │   ├── bind_parens.js.prettier-snap\n    │                       │   ├── bind_parens.js.snap\n    │                       │   ├── long_name_method.js\n    │                       │   ├── long_name_method.js.prettier-snap\n    │                       │   ├── long_name_method.js.snap\n    │                       │   ├── method_chain.js\n    │                       │   ├── method_chain.js.prettier-snap\n    │                       │   ├── method_chain.js.snap\n    │                       │   ├── short_name_method.js\n    │                       │   ├── short_name_method.js.prettier-snap\n    │                       │   ├── short_name_method.js.snap\n    │                       │   ├── unary.js\n    │                       │   ├── unary.js.prettier-snap\n    │                       │   └── unary.js.snap\n    │                       ├── bracket-spacing/\n    │                       │   ├── array.js\n    │                       │   ├── array.js.prettier-snap\n    │                       │   ├── object.js\n    │                       │   └── object.js.prettier-snap\n    │                       ├── break-calls/\n    │                       │   ├── break.js\n    │                       │   ├── break.js.prettier-snap\n    │                       │   ├── parent.js\n    │                       │   ├── parent.js.prettier-snap\n    │                       │   ├── react.js\n    │                       │   ├── react.js.prettier-snap\n    │                       │   ├── react.js.prettier-snap-original\n    │                       │   ├── reduce.js\n    │                       │   └── reduce.js.prettier-snap\n    │                       ├── call/\n    │                       │   ├── first-argument-expansion/\n    │                       │   │   ├── expression-2nd-arg.js\n    │                       │   │   ├── expression-2nd-arg.js.prettier-snap\n    │                       │   │   ├── issue-12892.js\n    │                       │   │   ├── issue-12892.js.prettier-snap\n    │                       │   │   ├── issue-13237.js\n    │                       │   │   ├── issue-13237.js.prettier-snap\n    │                       │   │   ├── issue-14454.js\n    │                       │   │   ├── issue-14454.js.prettier-snap\n    │                       │   │   ├── issue-2456.js\n    │                       │   │   ├── issue-2456.js.prettier-snap\n    │                       │   │   ├── issue-4401.js\n    │                       │   │   ├── issue-4401.js.prettier-snap\n    │                       │   │   ├── issue-5172.js\n    │                       │   │   ├── issue-5172.js.prettier-snap\n    │                       │   │   ├── jsx.js\n    │                       │   │   ├── jsx.js.prettier-snap\n    │                       │   │   ├── test.js\n    │                       │   │   └── test.js.prettier-snap\n    │                       │   └── no-argument/\n    │                       │       ├── special-cases.js\n    │                       │       └── special-cases.js.prettier-snap\n    │                       ├── chain-expression/\n    │                       │   ├── call-expression.js\n    │                       │   ├── call-expression.js.prettier-snap\n    │                       │   ├── issue-15785-1.js\n    │                       │   ├── issue-15785-1.js.prettier-snap\n    │                       │   ├── issue-15785-2.js\n    │                       │   ├── issue-15785-2.js.prettier-snap\n    │                       │   ├── issue-15785-3.js\n    │                       │   ├── issue-15785-3.js.prettier-snap\n    │                       │   ├── issue-15912.js\n    │                       │   ├── issue-15912.js.prettier-snap\n    │                       │   ├── issue-15916.js\n    │                       │   ├── issue-15916.js.prettier-snap\n    │                       │   ├── member-expression.js\n    │                       │   ├── member-expression.js.prettier-snap\n    │                       │   ├── new-expression.js\n    │                       │   ├── new-expression.js.prettier-snap\n    │                       │   ├── new-expression.js.snap\n    │                       │   ├── tagged-template-literals.js\n    │                       │   ├── tagged-template-literals.js.prettier-snap\n    │                       │   ├── tagged-template-literals.js.prettier-snap-original\n    │                       │   ├── tagged-template-literals.js.snap\n    │                       │   ├── test-2.js\n    │                       │   ├── test-2.js.prettier-snap\n    │                       │   ├── test-3.js\n    │                       │   ├── test-3.js.prettier-snap\n    │                       │   ├── test-4.js\n    │                       │   ├── test-4.js.prettier-snap\n    │                       │   ├── test.js\n    │                       │   └── test.js.prettier-snap\n    │                       ├── class-comment/\n    │                       │   ├── class-property.js\n    │                       │   ├── class-property.js.prettier-snap\n    │                       │   ├── misc.js\n    │                       │   ├── misc.js.prettier-snap\n    │                       │   ├── misc.js.prettier-snap-original\n    │                       │   ├── superclass.js\n    │                       │   └── superclass.js.prettier-snap\n    │                       ├── class-extends/\n    │                       │   ├── complex.js\n    │                       │   ├── complex.js.prettier-snap\n    │                       │   ├── extends.js\n    │                       │   ├── extends.js.prettier-snap\n    │                       │   ├── tuple-and-record.js\n    │                       │   ├── tuple-and-record.js.prettier-snap\n    │                       │   └── tuple-and-record.js.snap\n    │                       ├── class-static-block/\n    │                       │   ├── class-static-block.js\n    │                       │   ├── class-static-block.js.prettier-snap\n    │                       │   ├── with-line-breaks.js\n    │                       │   └── with-line-breaks.js.prettier-snap\n    │                       ├── classes/\n    │                       │   ├── asi.js\n    │                       │   ├── asi.js.prettier-snap\n    │                       │   ├── assignment.js\n    │                       │   ├── assignment.js.prettier-snap\n    │                       │   ├── binary.js\n    │                       │   ├── binary.js.prettier-snap\n    │                       │   ├── call.js\n    │                       │   ├── call.js.prettier-snap\n    │                       │   ├── class-fields-features.js\n    │                       │   ├── class-fields-features.js.prettier-snap\n    │                       │   ├── empty.js\n    │                       │   ├── empty.js.prettier-snap\n    │                       │   ├── member.js\n    │                       │   ├── member.js.prettier-snap\n    │                       │   ├── method.js\n    │                       │   ├── method.js.prettier-snap\n    │                       │   ├── new.js\n    │                       │   ├── new.js.prettier-snap\n    │                       │   ├── property.js\n    │                       │   ├── property.js.prettier-snap\n    │                       │   ├── super.js\n    │                       │   ├── super.js.prettier-snap\n    │                       │   ├── ternary.js\n    │                       │   ├── ternary.js.prettier-snap\n    │                       │   ├── keyword-property/\n    │                       │   │   ├── async.js\n    │                       │   │   ├── async.js.prettier-snap\n    │                       │   │   ├── computed.js\n    │                       │   │   ├── computed.js.prettier-snap\n    │                       │   │   ├── get.js\n    │                       │   │   ├── get.js.prettier-snap\n    │                       │   │   ├── private.js\n    │                       │   │   ├── private.js.prettier-snap\n    │                       │   │   ├── set.js\n    │                       │   │   ├── set.js.prettier-snap\n    │                       │   │   ├── static-async.js\n    │                       │   │   ├── static-async.js.prettier-snap\n    │                       │   │   ├── static-get.js\n    │                       │   │   ├── static-get.js.prettier-snap\n    │                       │   │   ├── static-set.js\n    │                       │   │   ├── static-set.js.prettier-snap\n    │                       │   │   ├── static-static.js\n    │                       │   │   ├── static-static.js.prettier-snap\n    │                       │   │   ├── static.js\n    │                       │   │   └── static.js.prettier-snap\n    │                       │   └── top-level-super/\n    │                       │       ├── example.js\n    │                       │       └── example.js.prettier-snap\n    │                       ├── classes-private-fields/\n    │                       │   ├── optional-chaining.js\n    │                       │   ├── optional-chaining.js.prettier-snap\n    │                       │   ├── private_fields.js\n    │                       │   ├── private_fields.js.prettier-snap\n    │                       │   ├── with_comments.js\n    │                       │   └── with_comments.js.prettier-snap\n    │                       ├── comments/\n    │                       │   ├── 15661.js\n    │                       │   ├── 15661.js.prettier-snap\n    │                       │   ├── 15661.js.prettier-snap-original\n    │                       │   ├── arrow.js\n    │                       │   ├── arrow.js.prettier-snap\n    │                       │   ├── assignment-pattern.js\n    │                       │   ├── assignment-pattern.js.prettier-snap\n    │                       │   ├── before-comma.js\n    │                       │   ├── before-comma.js.prettier-snap\n    │                       │   ├── binary-expressions-block-comments.js\n    │                       │   ├── binary-expressions-block-comments.js.prettier-snap\n    │                       │   ├── binary-expressions-parens.js\n    │                       │   ├── binary-expressions-parens.js.prettier-snap\n    │                       │   ├── binary-expressions-single-comments.js\n    │                       │   ├── binary-expressions-single-comments.js.prettier-snap\n    │                       │   ├── binary-expressions.js\n    │                       │   ├── binary-expressions.js.prettier-snap\n    │                       │   ├── blank.js\n    │                       │   ├── blank.js.prettier-snap\n    │                       │   ├── break-continue-statements.js\n    │                       │   ├── break-continue-statements.js.prettier-snap\n    │                       │   ├── call_comment.js\n    │                       │   ├── call_comment.js.prettier-snap\n    │                       │   ├── class.js\n    │                       │   ├── class.js.prettier-snap\n    │                       │   ├── dangling.js\n    │                       │   ├── dangling.js.prettier-snap\n    │                       │   ├── dangling_array.js\n    │                       │   ├── dangling_array.js.prettier-snap\n    │                       │   ├── dangling_for.js\n    │                       │   ├── dangling_for.js.prettier-snap\n    │                       │   ├── dynamic_imports.js\n    │                       │   ├── dynamic_imports.js.prettier-snap\n    │                       │   ├── emoji.js\n    │                       │   ├── emoji.js.prettier-snap\n    │                       │   ├── empty-statements.js\n    │                       │   ├── empty-statements.js.prettier-snap\n    │                       │   ├── empty-statements.js.snap\n    │                       │   ├── export-and-import.js\n    │                       │   ├── export-and-import.js.prettier-snap\n    │                       │   ├── export.js\n    │                       │   ├── export.js.prettier-snap\n    │                       │   ├── export.js.snap\n    │                       │   ├── first-line.js\n    │                       │   ├── first-line.js.prettier-snap\n    │                       │   ├── function-declaration.js\n    │                       │   ├── function-declaration.js.prettier-snap\n    │                       │   ├── if.js\n    │                       │   ├── if.js.prettier-snap\n    │                       │   ├── issue-3532.js\n    │                       │   ├── issue-3532.js.prettier-snap\n    │                       │   ├── issues.js\n    │                       │   ├── issues.js.prettier-snap\n    │                       │   ├── jsdoc-nestled-dangling.js\n    │                       │   ├── jsdoc-nestled-dangling.js.prettier-snap\n    │                       │   ├── jsdoc-nestled.js\n    │                       │   ├── jsdoc-nestled.js.prettier-snap\n    │                       │   ├── jsdoc.js\n    │                       │   ├── jsdoc.js.prettier-snap\n    │                       │   ├── jsx.js\n    │                       │   ├── jsx.js.prettier-snap\n    │                       │   ├── last-arg.js\n    │                       │   ├── last-arg.js.prettier-snap\n    │                       │   ├── multi-comments-2.js\n    │                       │   ├── multi-comments-2.js.prettier-snap\n    │                       │   ├── multi-comments-on-same-line-2.js\n    │                       │   ├── multi-comments-on-same-line-2.js.prettier-snap\n    │                       │   ├── multi-comments-on-same-line.js\n    │                       │   ├── multi-comments-on-same-line.js.prettier-snap\n    │                       │   ├── multi-comments-on-same-line.js.snap\n    │                       │   ├── multi-comments.js\n    │                       │   ├── multi-comments.js.prettier-snap\n    │                       │   ├── preserve-new-line-last.js\n    │                       │   ├── preserve-new-line-last.js.prettier-snap\n    │                       │   ├── return-statement.js\n    │                       │   ├── return-statement.js.prettier-snap\n    │                       │   ├── return-statement.js.prettier-snap-original\n    │                       │   ├── return-statement.js.snap\n    │                       │   ├── single-star-jsdoc.js\n    │                       │   ├── single-star-jsdoc.js.prettier-snap\n    │                       │   ├── switch.js\n    │                       │   ├── switch.js.prettier-snap\n    │                       │   ├── tagged-template-literal.js\n    │                       │   ├── tagged-template-literal.js.prettier-snap\n    │                       │   ├── tagged-template-literal.js.prettier-snap-original\n    │                       │   ├── tagged-template-literal.js.snap\n    │                       │   ├── template-literal.js\n    │                       │   ├── template-literal.js.prettier-snap\n    │                       │   ├── trailing-jsdocs.js\n    │                       │   ├── trailing-jsdocs.js.prettier-snap\n    │                       │   ├── trailing_space.js\n    │                       │   ├── trailing_space.js.prettier-snap\n    │                       │   ├── try.js\n    │                       │   ├── try.js.prettier-snap\n    │                       │   ├── tuple-and-record.js\n    │                       │   ├── tuple-and-record.js.prettier-snap\n    │                       │   ├── tuple-and-record.js.snap\n    │                       │   ├── variable_declarator.js\n    │                       │   ├── variable_declarator.js.prettier-snap\n    │                       │   ├── while.js\n    │                       │   ├── while.js.prettier-snap\n    │                       │   ├── flow-types/\n    │                       │   │   ├── inline.js\n    │                       │   │   └── inline.js.prettier-snap\n    │                       │   ├── function/\n    │                       │   │   ├── between-parentheses-and-function-body.js\n    │                       │   │   └── between-parentheses-and-function-body.js.prettier-snap\n    │                       │   └── html-like/\n    │                       │       ├── comment.js\n    │                       │       ├── comment.js.prettier-snap\n    │                       │       └── comment.js.snap\n    │                       ├── comments-closure-typecast/\n    │                       │   ├── binary-expr.js\n    │                       │   ├── binary-expr.js.prettier-snap\n    │                       │   ├── closure-compiler-type-cast.js\n    │                       │   ├── closure-compiler-type-cast.js.prettier-snap\n    │                       │   ├── comment-in-the-middle.js\n    │                       │   ├── comment-in-the-middle.js.prettier-snap\n    │                       │   ├── comment-placement.js\n    │                       │   ├── comment-placement.js.prettier-snap\n    │                       │   ├── extra-spaces-and-asterisks.js\n    │                       │   ├── extra-spaces-and-asterisks.js.prettier-snap\n    │                       │   ├── iife-issue-5850-isolated.js\n    │                       │   ├── iife-issue-5850-isolated.js.prettier-snap\n    │                       │   ├── iife.js\n    │                       │   ├── iife.js.prettier-snap\n    │                       │   ├── issue-4124.js\n    │                       │   ├── issue-4124.js.prettier-snap\n    │                       │   ├── issue-8045.js\n    │                       │   ├── issue-8045.js.prettier-snap\n    │                       │   ├── issue-9358.js\n    │                       │   ├── issue-9358.js.prettier-snap\n    │                       │   ├── member.js\n    │                       │   ├── member.js.prettier-snap\n    │                       │   ├── nested.js\n    │                       │   ├── nested.js.prettier-snap\n    │                       │   ├── non-casts.js\n    │                       │   ├── non-casts.js.prettier-snap\n    │                       │   ├── object-with-comment.js\n    │                       │   ├── object-with-comment.js.prettier-snap\n    │                       │   ├── satisfies.js\n    │                       │   ├── satisfies.js.prettier-snap\n    │                       │   ├── styled-components.js\n    │                       │   ├── styled-components.js.prettier-snap\n    │                       │   ├── styled-components.js.snap\n    │                       │   ├── superclass.js\n    │                       │   ├── superclass.js.prettier-snap\n    │                       │   ├── tuple-and-record.js\n    │                       │   ├── tuple-and-record.js.prettier-snap\n    │                       │   ├── tuple-and-record.js.snap\n    │                       │   ├── ways-to-specify-type.js\n    │                       │   └── ways-to-specify-type.js.prettier-snap\n    │                       ├── comments-pipeline-own-line/\n    │                       │   ├── pipeline_own_line.js\n    │                       │   ├── pipeline_own_line.js.prettier-snap\n    │                       │   └── pipeline_own_line.js.snap\n    │                       ├── computed-props/\n    │                       │   ├── classes.js\n    │                       │   └── classes.js.prettier-snap\n    │                       ├── conditional/\n    │                       │   ├── comments.js\n    │                       │   ├── comments.js.prettier-snap\n    │                       │   ├── comments.js.snap\n    │                       │   ├── new-expression.js\n    │                       │   ├── new-expression.js.prettier-snap\n    │                       │   ├── new-ternary-examples.js\n    │                       │   ├── new-ternary-examples.js.prettier-snap\n    │                       │   ├── new-ternary-spec.js\n    │                       │   ├── new-ternary-spec.js.prettier-snap\n    │                       │   ├── no-confusing-arrow.js\n    │                       │   ├── no-confusing-arrow.js.prettier-snap\n    │                       │   ├── postfix-ternary-regressions.js\n    │                       │   ├── postfix-ternary-regressions.js.prettier-snap\n    │                       │   └── postfix-ternary-regressions.js.snap\n    │                       ├── cursor/\n    │                       │   ├── comments-1.js\n    │                       │   ├── comments-1.js.prettier-snap\n    │                       │   ├── comments-2.js\n    │                       │   ├── comments-2.js.prettier-snap\n    │                       │   ├── comments-3.js\n    │                       │   ├── comments-3.js.prettier-snap\n    │                       │   ├── comments-4.js\n    │                       │   ├── comments-4.js.prettier-snap\n    │                       │   ├── cursor-0.js\n    │                       │   ├── cursor-0.js.prettier-snap\n    │                       │   ├── cursor-1.js\n    │                       │   ├── cursor-1.js.prettier-snap\n    │                       │   ├── cursor-10.js\n    │                       │   ├── cursor-10.js.prettier-snap\n    │                       │   ├── cursor-11.js\n    │                       │   ├── cursor-11.js.prettier-snap\n    │                       │   ├── cursor-12.js\n    │                       │   ├── cursor-12.js.prettier-snap\n    │                       │   ├── cursor-13.js\n    │                       │   ├── cursor-13.js.prettier-snap\n    │                       │   ├── cursor-2.js\n    │                       │   ├── cursor-2.js.prettier-snap\n    │                       │   ├── cursor-3.js\n    │                       │   ├── cursor-3.js.prettier-snap\n    │                       │   ├── cursor-4.js\n    │                       │   ├── cursor-4.js.prettier-snap\n    │                       │   ├── cursor-5.js\n    │                       │   ├── cursor-5.js.prettier-snap\n    │                       │   ├── cursor-6.js\n    │                       │   ├── cursor-6.js.prettier-snap\n    │                       │   ├── cursor-7.js\n    │                       │   ├── cursor-7.js.prettier-snap\n    │                       │   ├── cursor-8.js\n    │                       │   ├── cursor-8.js.prettier-snap\n    │                       │   ├── cursor-9.js\n    │                       │   ├── cursor-9.js.prettier-snap\n    │                       │   ├── cursor-emoji.js\n    │                       │   ├── cursor-emoji.js.prettier-snap\n    │                       │   ├── file-start-with-comment-1.js\n    │                       │   ├── file-start-with-comment-1.js.prettier-snap\n    │                       │   ├── file-start-with-comment-2.js\n    │                       │   ├── file-start-with-comment-2.js.prettier-snap\n    │                       │   ├── file-start-with-comment-3.js\n    │                       │   ├── file-start-with-comment-3.js.prettier-snap\n    │                       │   ├── range-0.js\n    │                       │   ├── range-0.js.prettier-snap\n    │                       │   ├── range-1.js\n    │                       │   ├── range-1.js.prettier-snap\n    │                       │   ├── range-2.js\n    │                       │   ├── range-2.js.prettier-snap\n    │                       │   ├── range-3.js\n    │                       │   ├── range-3.js.prettier-snap\n    │                       │   ├── range-4.js\n    │                       │   ├── range-4.js.prettier-snap\n    │                       │   ├── range-5.js\n    │                       │   ├── range-5.js.prettier-snap\n    │                       │   ├── range-6.js\n    │                       │   ├── range-6.js.prettier-snap\n    │                       │   ├── range-7.js\n    │                       │   ├── range-7.js.prettier-snap\n    │                       │   ├── range-8.js\n    │                       │   └── range-8.js.prettier-snap\n    │                       ├── decorator-auto-accessors/\n    │                       │   ├── basic.js\n    │                       │   ├── basic.js.prettier-snap\n    │                       │   ├── comments.js\n    │                       │   ├── comments.js.prettier-snap\n    │                       │   ├── computed.js\n    │                       │   ├── computed.js.prettier-snap\n    │                       │   ├── not-accessor-method.js\n    │                       │   ├── not-accessor-method.js.prettier-snap\n    │                       │   ├── not-accessor-property.js\n    │                       │   ├── not-accessor-property.js.prettier-snap\n    │                       │   ├── private.js\n    │                       │   ├── private.js.prettier-snap\n    │                       │   ├── static-computed.js\n    │                       │   ├── static-computed.js.prettier-snap\n    │                       │   ├── static-private.js\n    │                       │   ├── static-private.js.prettier-snap\n    │                       │   ├── static.js\n    │                       │   ├── static.js.prettier-snap\n    │                       │   ├── with-semicolon-1.js\n    │                       │   ├── with-semicolon-1.js.prettier-snap\n    │                       │   ├── with-semicolon-2.js\n    │                       │   └── with-semicolon-2.js.prettier-snap\n    │                       ├── decorators/\n    │                       │   ├── classes.js\n    │                       │   ├── classes.js.prettier-snap\n    │                       │   ├── comments.js\n    │                       │   ├── comments.js.prettier-snap\n    │                       │   ├── member-expression.js\n    │                       │   ├── member-expression.js.prettier-snap\n    │                       │   ├── methods.js\n    │                       │   ├── methods.js.prettier-snap\n    │                       │   ├── mixed.js\n    │                       │   ├── mixed.js.prettier-snap\n    │                       │   ├── mobx.js\n    │                       │   ├── mobx.js.prettier-snap\n    │                       │   ├── multiline.js\n    │                       │   ├── multiline.js.prettier-snap\n    │                       │   ├── multiple.js\n    │                       │   ├── multiple.js.prettier-snap\n    │                       │   ├── parens.js\n    │                       │   ├── parens.js.prettier-snap\n    │                       │   ├── redux.js\n    │                       │   ├── redux.js.prettier-snap\n    │                       │   └── class-expression/\n    │                       │       ├── arguments.js\n    │                       │       ├── arguments.js.prettier-snap\n    │                       │       ├── class-expression.js\n    │                       │       ├── class-expression.js.prettier-snap\n    │                       │       ├── member-expression.js\n    │                       │       ├── member-expression.js.prettier-snap\n    │                       │       ├── super-class.js\n    │                       │       └── super-class.js.prettier-snap\n    │                       ├── decorators-export/\n    │                       │   ├── after_export.js\n    │                       │   ├── after_export.js.prettier-snap\n    │                       │   ├── before_export.js\n    │                       │   └── before_export.js.prettier-snap\n    │                       ├── deferred-import-evaluation/\n    │                       │   ├── import-defer-attributes-declaration.js\n    │                       │   ├── import-defer-attributes-declaration.js.prettier-snap\n    │                       │   ├── import-defer.js\n    │                       │   └── import-defer.js.prettier-snap\n    │                       ├── destructuring/\n    │                       │   ├── destructuring.js\n    │                       │   ├── destructuring.js.prettier-snap\n    │                       │   ├── issue-5988.js\n    │                       │   └── issue-5988.js.prettier-snap\n    │                       ├── destructuring-ignore/\n    │                       │   ├── ignore.js\n    │                       │   └── ignore.js.prettier-snap\n    │                       ├── destructuring-private-fields/\n    │                       │   ├── arrow-params.js\n    │                       │   ├── arrow-params.js.prettier-snap\n    │                       │   ├── arrow-params.js.snap\n    │                       │   ├── assignment.js\n    │                       │   ├── assignment.js.prettier-snap\n    │                       │   ├── async-arrow-params.js\n    │                       │   ├── async-arrow-params.js.prettier-snap\n    │                       │   ├── async-arrow-params.js.snap\n    │                       │   ├── bindings.js\n    │                       │   ├── bindings.js.prettier-snap\n    │                       │   ├── for-lhs.js\n    │                       │   ├── for-lhs.js.prettier-snap\n    │                       │   ├── nested-bindings.js\n    │                       │   ├── nested-bindings.js.prettier-snap\n    │                       │   ├── nested-bindings.js.snap\n    │                       │   ├── valid-multiple-bindings.js\n    │                       │   ├── valid-multiple-bindings.js.prettier-snap\n    │                       │   └── valid-multiple-bindings.js.snap\n    │                       ├── directives/\n    │                       │   ├── escaped.js\n    │                       │   ├── escaped.js.prettier-snap\n    │                       │   ├── issue-7346.js\n    │                       │   ├── issue-7346.js.prettier-snap\n    │                       │   ├── last-line-0.js\n    │                       │   ├── last-line-0.js.prettier-snap\n    │                       │   ├── last-line-1.js\n    │                       │   ├── last-line-1.js.prettier-snap\n    │                       │   ├── last-line-2.js\n    │                       │   ├── last-line-2.js.prettier-snap\n    │                       │   ├── newline.js\n    │                       │   ├── newline.js.prettier-snap\n    │                       │   ├── no-newline.js\n    │                       │   ├── no-newline.js.prettier-snap\n    │                       │   ├── test.js\n    │                       │   └── test.js.prettier-snap\n    │                       ├── do/\n    │                       │   ├── call-arguments.js\n    │                       │   ├── call-arguments.js.prettier-snap\n    │                       │   ├── call-arguments.js.snap\n    │                       │   ├── do.js\n    │                       │   ├── do.js.prettier-snap\n    │                       │   └── do.js.snap\n    │                       ├── dynamic-import/\n    │                       │   ├── assertions.js\n    │                       │   ├── assertions.js.prettier-snap\n    │                       │   ├── import-phase.js\n    │                       │   ├── import-phase.js.prettier-snap\n    │                       │   ├── import-phase.js.prettier-snap-original\n    │                       │   ├── import-phase.js.snap\n    │                       │   ├── template-literal.js\n    │                       │   ├── template-literal.js.prettier-snap\n    │                       │   ├── template-literal.js.prettier-snap-original\n    │                       │   ├── test.js\n    │                       │   └── test.js.prettier-snap\n    │                       ├── empty-paren-comment/\n    │                       │   ├── class-property.js\n    │                       │   ├── class-property.js.prettier-snap\n    │                       │   ├── class.js\n    │                       │   ├── class.js.prettier-snap\n    │                       │   ├── empty_paren_comment.js\n    │                       │   └── empty_paren_comment.js.prettier-snap\n    │                       ├── empty-statement/\n    │                       │   ├── body.js\n    │                       │   ├── body.js.prettier-snap\n    │                       │   ├── no-newline.js\n    │                       │   └── no-newline.js.prettier-snap\n    │                       ├── end-of-line/\n    │                       │   ├── example.js\n    │                       │   └── example.js.prettier-snap\n    │                       ├── es6modules/\n    │                       │   ├── export_default_arrow_expression.js\n    │                       │   ├── export_default_arrow_expression.js.prettier-snap\n    │                       │   ├── export_default_call_expression.js\n    │                       │   ├── export_default_call_expression.js.prettier-snap\n    │                       │   ├── export_default_class_declaration.js\n    │                       │   ├── export_default_class_declaration.js.prettier-snap\n    │                       │   ├── export_default_class_expression.js\n    │                       │   ├── export_default_class_expression.js.prettier-snap\n    │                       │   ├── export_default_function_declaration.js\n    │                       │   ├── export_default_function_declaration.js.prettier-snap\n    │                       │   ├── export_default_function_declaration_async.js\n    │                       │   ├── export_default_function_declaration_async.js.prettier-snap\n    │                       │   ├── export_default_function_declaration_named.js\n    │                       │   ├── export_default_function_declaration_named.js.prettier-snap\n    │                       │   ├── export_default_function_expression.js\n    │                       │   ├── export_default_function_expression.js.prettier-snap\n    │                       │   ├── export_default_function_expression_named.js\n    │                       │   ├── export_default_function_expression_named.js.prettier-snap\n    │                       │   ├── export_default_new_expression.js\n    │                       │   └── export_default_new_expression.js.prettier-snap\n    │                       ├── explicit-resource-management/\n    │                       │   ├── for-await-using-of-comments.js\n    │                       │   ├── for-await-using-of-comments.js.prettier-snap\n    │                       │   ├── invalid-duplicate-using-bindings.js\n    │                       │   ├── invalid-duplicate-using-bindings.js.prettier-snap\n    │                       │   ├── invalid-script-top-level-using-binding.js\n    │                       │   ├── invalid-script-top-level-using-binding.js.prettier-snap\n    │                       │   ├── using-declarations.js\n    │                       │   ├── using-declarations.js.prettier-snap\n    │                       │   ├── valid-await-expr-using-in.js\n    │                       │   ├── valid-await-expr-using-in.js.prettier-snap\n    │                       │   ├── valid-await-expr-using-instanceof.js\n    │                       │   ├── valid-await-expr-using-instanceof.js.prettier-snap\n    │                       │   ├── valid-await-expr-using.js\n    │                       │   ├── valid-await-expr-using.js.prettier-snap\n    │                       │   ├── valid-await-using-asi-assignment.js\n    │                       │   ├── valid-await-using-asi-assignment.js.prettier-snap\n    │                       │   ├── valid-await-using-binding-basic.js\n    │                       │   ├── valid-await-using-binding-basic.js.prettier-snap\n    │                       │   ├── valid-await-using-binding-escaped.js\n    │                       │   ├── valid-await-using-binding-escaped.js.prettier-snap\n    │                       │   ├── valid-await-using-binding-escaped.js.snap\n    │                       │   ├── valid-await-using-binding-non-bmp.js\n    │                       │   ├── valid-await-using-binding-non-bmp.js.prettier-snap\n    │                       │   ├── valid-await-using-binding-using.js\n    │                       │   ├── valid-await-using-binding-using.js.prettier-snap\n    │                       │   ├── valid-await-using-comments.js\n    │                       │   ├── valid-await-using-comments.js.prettier-snap\n    │                       │   ├── valid-await-using-comments.js.snap\n    │                       │   ├── valid-for-await-using-binding-escaped-of-of.js\n    │                       │   ├── valid-for-await-using-binding-escaped-of-of.js.prettier-snap\n    │                       │   ├── valid-for-using-binding-escaped-of-of.js\n    │                       │   ├── valid-for-using-binding-escaped-of-of.js.prettier-snap\n    │                       │   ├── valid-for-using-binding-of-of.js\n    │                       │   ├── valid-for-using-binding-of-of.js.prettier-snap\n    │                       │   ├── valid-for-using-declaration.js\n    │                       │   ├── valid-for-using-declaration.js.prettier-snap\n    │                       │   ├── valid-module-block-top-level-await-using-binding.js\n    │                       │   ├── valid-module-block-top-level-await-using-binding.js.prettier-snap\n    │                       │   ├── valid-module-block-top-level-await-using-binding.js.snap\n    │                       │   ├── valid-module-block-top-level-using-binding.js\n    │                       │   ├── valid-module-block-top-level-using-binding.js.prettier-snap\n    │                       │   ├── valid-module-block-top-level-using-binding.js.snap\n    │                       │   ├── valid-using-as-identifier-computed-member.js\n    │                       │   ├── valid-using-as-identifier-computed-member.js.prettier-snap\n    │                       │   ├── valid-using-as-identifier-expression-statement.js\n    │                       │   ├── valid-using-as-identifier-expression-statement.js.prettier-snap\n    │                       │   ├── valid-using-as-identifier-for-await-of.js\n    │                       │   ├── valid-using-as-identifier-for-await-of.js.prettier-snap\n    │                       │   ├── valid-using-as-identifier-for-in.js\n    │                       │   ├── valid-using-as-identifier-for-in.js.prettier-snap\n    │                       │   ├── valid-using-as-identifier-for-init.js\n    │                       │   ├── valid-using-as-identifier-for-init.js.prettier-snap\n    │                       │   ├── valid-using-as-identifier-for-of.js\n    │                       │   ├── valid-using-as-identifier-for-of.js.prettier-snap\n    │                       │   ├── valid-using-as-identifier-in.js\n    │                       │   ├── valid-using-as-identifier-in.js.prettier-snap\n    │                       │   ├── valid-using-binding-basic.js\n    │                       │   ├── valid-using-binding-basic.js.prettier-snap\n    │                       │   ├── valid-using-binding-escaped.js\n    │                       │   ├── valid-using-binding-escaped.js.prettier-snap\n    │                       │   ├── valid-using-binding-escaped.js.snap\n    │                       │   ├── valid-using-binding-non-bmp.js\n    │                       │   ├── valid-using-binding-non-bmp.js.prettier-snap\n    │                       │   ├── valid-using-binding-using.js\n    │                       │   └── valid-using-binding-using.js.prettier-snap\n    │                       ├── export/\n    │                       │   ├── blank-line-between-specifiers.js\n    │                       │   ├── blank-line-between-specifiers.js.prettier-snap\n    │                       │   ├── blank-line-between-specifiers.js.snap\n    │                       │   ├── bracket.js\n    │                       │   ├── bracket.js.prettier-snap\n    │                       │   ├── empty.js\n    │                       │   ├── empty.js.prettier-snap\n    │                       │   ├── same-local-and-exported.js\n    │                       │   ├── same-local-and-exported.js.prettier-snap\n    │                       │   ├── test.js\n    │                       │   ├── test.js.prettier-snap\n    │                       │   ├── undefined.js\n    │                       │   └── undefined.js.prettier-snap\n    │                       ├── export-default/\n    │                       │   ├── binary_and_template.js\n    │                       │   ├── binary_and_template.js.prettier-snap\n    │                       │   ├── body.js\n    │                       │   ├── body.js.prettier-snap\n    │                       │   ├── class_instance.js\n    │                       │   ├── class_instance.js.prettier-snap\n    │                       │   ├── function_in_template.js\n    │                       │   ├── function_in_template.js.prettier-snap\n    │                       │   ├── function_tostring.js\n    │                       │   ├── function_tostring.js.prettier-snap\n    │                       │   ├── iife.js\n    │                       │   ├── iife.js.prettier-snap\n    │                       │   ├── escaped/\n    │                       │   │   ├── default-escaped.js\n    │                       │   │   ├── default-escaped.js.prettier-snap\n    │                       │   │   └── default-escaped.js.snap\n    │                       │   └── export-default-from/\n    │                       │       ├── export.js\n    │                       │       ├── export.js.prettier-snap\n    │                       │       └── export.js.snap\n    │                       ├── export-star/\n    │                       │   ├── export-star-as-default.js\n    │                       │   ├── export-star-as-default.js.prettier-snap\n    │                       │   ├── export-star-as-reserved-word.js\n    │                       │   ├── export-star-as-reserved-word.js.prettier-snap\n    │                       │   ├── export-star-as-string.js\n    │                       │   ├── export-star-as-string.js.prettier-snap\n    │                       │   ├── export-star-as-string2.js\n    │                       │   ├── export-star-as-string2.js.prettier-snap\n    │                       │   ├── export-star-as.js\n    │                       │   ├── export-star-as.js.prettier-snap\n    │                       │   ├── export-star.js\n    │                       │   └── export-star.js.prettier-snap\n    │                       ├── expression_statement/\n    │                       │   ├── no_regression.js\n    │                       │   ├── no_regression.js.prettier-snap\n    │                       │   ├── use_strict.js\n    │                       │   └── use_strict.js.prettier-snap\n    │                       ├── for/\n    │                       │   ├── comment.js\n    │                       │   ├── comment.js.prettier-snap\n    │                       │   ├── continue-and-break-comment-1.js\n    │                       │   ├── continue-and-break-comment-1.js.prettier-snap\n    │                       │   ├── continue-and-break-comment-2.js\n    │                       │   ├── continue-and-break-comment-2.js.prettier-snap\n    │                       │   ├── continue-and-break-comment-without-blocks.js\n    │                       │   ├── continue-and-break-comment-without-blocks.js.prettier-snap\n    │                       │   ├── continue-and-break-comment-without-blocks.js.prettier-snap-original\n    │                       │   ├── continue-and-break-comment-without-blocks.js.snap\n    │                       │   ├── for-in-with-initializer.js\n    │                       │   ├── for-in-with-initializer.js.prettier-snap\n    │                       │   ├── for-in-with-initializer.js.snap\n    │                       │   ├── for.js\n    │                       │   ├── for.js.prettier-snap\n    │                       │   ├── in.js\n    │                       │   ├── in.js.prettier-snap\n    │                       │   ├── parentheses.js\n    │                       │   ├── parentheses.js.prettier-snap\n    │                       │   ├── parentheses.js.snap\n    │                       │   ├── var.js\n    │                       │   └── var.js.prettier-snap\n    │                       ├── for-await/\n    │                       │   ├── for-await.js\n    │                       │   └── for-await.js.prettier-snap\n    │                       ├── for-of/\n    │                       │   ├── async-identifier.js\n    │                       │   └── async-identifier.js.prettier-snap\n    │                       ├── function/\n    │                       │   ├── function_expression.js\n    │                       │   ├── function_expression.js.prettier-snap\n    │                       │   ├── issue-10277.js\n    │                       │   └── issue-10277.js.prettier-snap\n    │                       ├── function-comments/\n    │                       │   ├── params-trail-comments.js\n    │                       │   └── params-trail-comments.js.prettier-snap\n    │                       ├── function-first-param/\n    │                       │   ├── function_expression.js\n    │                       │   └── function_expression.js.prettier-snap\n    │                       ├── function-single-destructuring/\n    │                       │   ├── array.js\n    │                       │   ├── array.js.prettier-snap\n    │                       │   ├── object.js\n    │                       │   ├── object.js.prettier-snap\n    │                       │   ├── tuple-and-record.js\n    │                       │   ├── tuple-and-record.js.prettier-snap\n    │                       │   └── tuple-and-record.js.snap\n    │                       ├── functional-composition/\n    │                       │   ├── functional_compose.js\n    │                       │   ├── functional_compose.js.prettier-snap\n    │                       │   ├── gobject_connect.js\n    │                       │   ├── gobject_connect.js.prettier-snap\n    │                       │   ├── lodash_flow.js\n    │                       │   ├── lodash_flow.js.prettier-snap\n    │                       │   ├── lodash_flow_right.js\n    │                       │   ├── lodash_flow_right.js.prettier-snap\n    │                       │   ├── mongo_connect.js\n    │                       │   ├── mongo_connect.js.prettier-snap\n    │                       │   ├── pipe-function-calls-with-comments.js\n    │                       │   ├── pipe-function-calls-with-comments.js.prettier-snap\n    │                       │   ├── pipe-function-calls.js\n    │                       │   ├── pipe-function-calls.js.prettier-snap\n    │                       │   ├── ramda_compose.js\n    │                       │   ├── ramda_compose.js.prettier-snap\n    │                       │   ├── ramda_pipe.js\n    │                       │   ├── ramda_pipe.js.prettier-snap\n    │                       │   ├── redux_compose.js\n    │                       │   ├── redux_compose.js.prettier-snap\n    │                       │   ├── redux_connect.js\n    │                       │   ├── redux_connect.js.prettier-snap\n    │                       │   ├── reselect_createselector.js\n    │                       │   ├── reselect_createselector.js.prettier-snap\n    │                       │   ├── rxjs_pipe.js\n    │                       │   └── rxjs_pipe.js.prettier-snap\n    │                       ├── generator/\n    │                       │   ├── anonymous.js\n    │                       │   ├── anonymous.js.prettier-snap\n    │                       │   ├── async.js\n    │                       │   ├── async.js.prettier-snap\n    │                       │   ├── function-name-starts-with-get.js\n    │                       │   └── function-name-starts-with-get.js.prettier-snap\n    │                       ├── identifier/\n    │                       │   ├── for-of/\n    │                       │   │   ├── await.js\n    │                       │   │   ├── await.js.prettier-snap\n    │                       │   │   ├── let.js\n    │                       │   │   └── let.js.prettier-snap\n    │                       │   └── parentheses/\n    │                       │       ├── const.js\n    │                       │       ├── const.js.prettier-snap\n    │                       │       ├── let.js\n    │                       │       └── let.js.prettier-snap\n    │                       ├── if/\n    │                       │   ├── comment_before_else.js\n    │                       │   ├── comment_before_else.js.prettier-snap\n    │                       │   ├── else.js\n    │                       │   ├── else.js.prettier-snap\n    │                       │   ├── expr_and_same_line_comments.js\n    │                       │   ├── expr_and_same_line_comments.js.prettier-snap\n    │                       │   ├── expr_and_same_line_comments.js.snap\n    │                       │   ├── if_comments.js\n    │                       │   ├── if_comments.js.prettier-snap\n    │                       │   ├── issue-15168.js\n    │                       │   ├── issue-15168.js.prettier-snap\n    │                       │   ├── non-block.js\n    │                       │   ├── non-block.js.prettier-snap\n    │                       │   ├── non-block.js.prettier-snap-original\n    │                       │   ├── non-block.js.snap\n    │                       │   ├── trailing_comment.js\n    │                       │   └── trailing_comment.js.prettier-snap\n    │                       ├── ignore/\n    │                       │   ├── class-expression-decorator.js\n    │                       │   ├── class-expression-decorator.js.prettier-snap\n    │                       │   ├── class-expression-decorator.js.snap\n    │                       │   ├── decorator.js\n    │                       │   ├── decorator.js.prettier-snap\n    │                       │   ├── ignore-2.js\n    │                       │   ├── ignore-2.js.prettier-snap\n    │                       │   ├── ignore.js\n    │                       │   ├── ignore.js.prettier-snap\n    │                       │   ├── issue-10661.js\n    │                       │   ├── issue-10661.js.prettier-snap\n    │                       │   ├── issue-11077.js\n    │                       │   ├── issue-11077.js.prettier-snap\n    │                       │   ├── issue-11077.js.snap\n    │                       │   ├── issue-13737.js\n    │                       │   ├── issue-13737.js.prettier-snap\n    │                       │   ├── issue-13737.js.snap\n    │                       │   ├── issue-14404.js\n    │                       │   ├── issue-14404.js.prettier-snap\n    │                       │   ├── issue-14404.js.snap\n    │                       │   ├── issue-9335.js\n    │                       │   ├── issue-9335.js.prettier-snap\n    │                       │   ├── issue-9877.js\n    │                       │   ├── issue-9877.js.prettier-snap\n    │                       │   ├── issue-9877.js.snap\n    │                       │   └── semi/\n    │                       │       ├── asi.js\n    │                       │       ├── asi.js.prettier-snap\n    │                       │       ├── directive.js\n    │                       │       └── directive.js.prettier-snap\n    │                       ├── import/\n    │                       │   ├── brackets.js\n    │                       │   ├── brackets.js.prettier-snap\n    │                       │   ├── comments.js\n    │                       │   ├── comments.js.prettier-snap\n    │                       │   ├── empty-import.js\n    │                       │   ├── empty-import.js.prettier-snap\n    │                       │   ├── empty-import.js.snap\n    │                       │   ├── inline.js\n    │                       │   ├── inline.js.prettier-snap\n    │                       │   ├── long-line.js\n    │                       │   ├── long-line.js.prettier-snap\n    │                       │   ├── multiple_standalones.js\n    │                       │   ├── multiple_standalones.js.prettier-snap\n    │                       │   ├── same-local-and-imported.js\n    │                       │   └── same-local-and-imported.js.prettier-snap\n    │                       ├── import-assertions/\n    │                       │   ├── dynamic-import.js\n    │                       │   ├── dynamic-import.js.prettier-snap\n    │                       │   ├── empty.js\n    │                       │   ├── empty.js.prettier-snap\n    │                       │   ├── empty.js.snap\n    │                       │   ├── multi-types.js\n    │                       │   ├── multi-types.js.prettier-snap\n    │                       │   ├── multi-types.js.snap\n    │                       │   ├── non-type.js\n    │                       │   ├── non-type.js.prettier-snap\n    │                       │   ├── non-type.js.snap\n    │                       │   ├── not-import-assertions.js\n    │                       │   ├── not-import-assertions.js.prettier-snap\n    │                       │   ├── re-export.js\n    │                       │   ├── re-export.js.prettier-snap\n    │                       │   ├── re-export.js.snap\n    │                       │   ├── static-import.js\n    │                       │   ├── static-import.js.prettier-snap\n    │                       │   ├── static-import.js.snap\n    │                       │   ├── without-from.js\n    │                       │   ├── without-from.js.prettier-snap\n    │                       │   ├── without-from.js.snap\n    │                       │   └── bracket-spacing/\n    │                       │       ├── dynamic-import.js\n    │                       │       ├── dynamic-import.js.prettier-snap\n    │                       │       ├── empty.js\n    │                       │       ├── empty.js.prettier-snap\n    │                       │       ├── empty.js.snap\n    │                       │       ├── re-export.js\n    │                       │       ├── re-export.js.prettier-snap\n    │                       │       ├── re-export.js.snap\n    │                       │       ├── static-import.js\n    │                       │       ├── static-import.js.prettier-snap\n    │                       │       └── static-import.js.snap\n    │                       ├── import-attributes/\n    │                       │   ├── dynamic-import.js\n    │                       │   ├── dynamic-import.js.prettier-snap\n    │                       │   ├── empty.js\n    │                       │   ├── empty.js.prettier-snap\n    │                       │   ├── empty.js.snap\n    │                       │   ├── keyword-detect.js\n    │                       │   ├── keyword-detect.js.prettier-snap\n    │                       │   ├── keyword-detect.js.snap\n    │                       │   ├── long-sources.js\n    │                       │   ├── long-sources.js.prettier-snap\n    │                       │   ├── long-sources.js.snap\n    │                       │   ├── multi-types.js\n    │                       │   ├── multi-types.js.prettier-snap\n    │                       │   ├── non-type.js\n    │                       │   ├── non-type.js.prettier-snap\n    │                       │   ├── re-export.js\n    │                       │   ├── re-export.js.prettier-snap\n    │                       │   ├── static-import.js\n    │                       │   ├── static-import.js.prettier-snap\n    │                       │   ├── without-from.js\n    │                       │   ├── without-from.js.prettier-snap\n    │                       │   ├── bracket-spacing/\n    │                       │   │   ├── dynamic-import.js\n    │                       │   │   ├── dynamic-import.js.prettier-snap\n    │                       │   │   ├── empty.js\n    │                       │   │   ├── empty.js.prettier-snap\n    │                       │   │   ├── empty.js.snap\n    │                       │   │   ├── re-export.js\n    │                       │   │   ├── re-export.js.prettier-snap\n    │                       │   │   ├── static-import.js\n    │                       │   │   └── static-import.js.prettier-snap\n    │                       │   └── quote-props/\n    │                       │       ├── quoted-keys.js\n    │                       │       └── quoted-keys.js.prettier-snap\n    │                       ├── import-meta/\n    │                       │   ├── import_meta.js\n    │                       │   └── import_meta.js.prettier-snap\n    │                       ├── import-reflection/\n    │                       │   ├── comments.js\n    │                       │   ├── comments.js.prettier-snap\n    │                       │   ├── comments.js.snap\n    │                       │   ├── import-reflection.js\n    │                       │   ├── import-reflection.js.prettier-snap\n    │                       │   ├── import-reflection.js.snap\n    │                       │   ├── valid-default-import.mjs\n    │                       │   ├── valid-default-import.mjs.prettier-snap\n    │                       │   ├── valid-from-as-default-module-binding-escaped.mjs\n    │                       │   ├── valid-from-as-default-module-binding-escaped.mjs.prettier-snap\n    │                       │   ├── valid-from-as-default-module-binding.mjs\n    │                       │   ├── valid-from-as-default-module-binding.mjs.prettier-snap\n    │                       │   ├── valid-module-as-default-binding-2.mjs\n    │                       │   ├── valid-module-as-default-binding-2.mjs.prettier-snap\n    │                       │   ├── valid-module-as-default-binding.mjs\n    │                       │   └── valid-module-as-default-binding.mjs.prettier-snap\n    │                       ├── in/\n    │                       │   ├── arrow-function-invalid.js\n    │                       │   ├── arrow-function-invalid.js.prettier-snap\n    │                       │   ├── arrow-function.js\n    │                       │   └── arrow-function.js.prettier-snap\n    │                       ├── invalid-code/\n    │                       │   ├── duplicate_bindings.js\n    │                       │   └── duplicate_bindings.js.prettier-snap\n    │                       ├── label/\n    │                       │   ├── block-statement-and-regexp.js\n    │                       │   ├── block-statement-and-regexp.js.prettier-snap\n    │                       │   ├── comment.js\n    │                       │   ├── comment.js.prettier-snap\n    │                       │   ├── empty_label.js\n    │                       │   └── empty_label.js.prettier-snap\n    │                       ├── last-argument-expansion/\n    │                       │   ├── arrow.js\n    │                       │   ├── arrow.js.prettier-snap\n    │                       │   ├── assignment-pattern.js\n    │                       │   ├── assignment-pattern.js.prettier-snap\n    │                       │   ├── break-parent.js\n    │                       │   ├── break-parent.js.prettier-snap\n    │                       │   ├── dangling-comment-in-arrow-function.js\n    │                       │   ├── dangling-comment-in-arrow-function.js.prettier-snap\n    │                       │   ├── dangling-comment-in-arrow-function.js.snap\n    │                       │   ├── edge_case.js\n    │                       │   ├── edge_case.js.prettier-snap\n    │                       │   ├── embed.js\n    │                       │   ├── embed.js.prettier-snap\n    │                       │   ├── embed.js.prettier-snap-original\n    │                       │   ├── embed.js.snap\n    │                       │   ├── empty-lines.js\n    │                       │   ├── empty-lines.js.prettier-snap\n    │                       │   ├── empty-object.js\n    │                       │   ├── empty-object.js.prettier-snap\n    │                       │   ├── function-body-in-mode-break.js\n    │                       │   ├── function-body-in-mode-break.js.prettier-snap\n    │                       │   ├── function-expression-issue-2239.js\n    │                       │   ├── function-expression-issue-2239.js.prettier-snap\n    │                       │   ├── function-expression.js\n    │                       │   ├── function-expression.js.prettier-snap\n    │                       │   ├── issue-10708.js\n    │                       │   ├── issue-10708.js.prettier-snap\n    │                       │   ├── issue-7518.js\n    │                       │   ├── issue-7518.js.prettier-snap\n    │                       │   ├── jsx.js\n    │                       │   ├── jsx.js.prettier-snap\n    │                       │   ├── number-only-array.js\n    │                       │   ├── number-only-array.js.prettier-snap\n    │                       │   ├── object.js\n    │                       │   ├── object.js.prettier-snap\n    │                       │   ├── overflow.js\n    │                       │   └── overflow.js.prettier-snap\n    │                       ├── line/\n    │                       │   ├── windows.js\n    │                       │   └── windows.js.prettier-snap\n    │                       ├── line-suffix-boundary/\n    │                       │   ├── boundary.js\n    │                       │   └── boundary.js.prettier-snap\n    │                       ├── literal/\n    │                       │   ├── number.js\n    │                       │   └── number.js.prettier-snap\n    │                       ├── literal-numeric-separator/\n    │                       │   ├── test.js\n    │                       │   └── test.js.prettier-snap\n    │                       ├── logical-assignment/\n    │                       │   ├── logical-assignment.js\n    │                       │   └── logical-assignment.js.prettier-snap\n    │                       ├── logical_expressions/\n    │                       │   ├── issue-7024.js\n    │                       │   ├── issue-7024.js.prettier-snap\n    │                       │   ├── logical_expression_operators.js\n    │                       │   └── logical_expression_operators.js.prettier-snap\n    │                       ├── member/\n    │                       │   ├── conditional.js\n    │                       │   ├── conditional.js.prettier-snap\n    │                       │   ├── expand.js\n    │                       │   ├── expand.js.prettier-snap\n    │                       │   ├── logical.js\n    │                       │   └── logical.js.prettier-snap\n    │                       ├── method-chain/\n    │                       │   ├── 13018.js\n    │                       │   ├── 13018.js.prettier-snap\n    │                       │   ├── assignment-lhs.js\n    │                       │   ├── assignment-lhs.js.prettier-snap\n    │                       │   ├── bracket_0-1.js\n    │                       │   ├── bracket_0-1.js.prettier-snap\n    │                       │   ├── bracket_0.js\n    │                       │   ├── bracket_0.js.prettier-snap\n    │                       │   ├── break-last-call.js\n    │                       │   ├── break-last-call.js.prettier-snap\n    │                       │   ├── break-last-member.js\n    │                       │   ├── break-last-member.js.prettier-snap\n    │                       │   ├── break-multiple.js\n    │                       │   ├── break-multiple.js.prettier-snap\n    │                       │   ├── comment.js\n    │                       │   ├── comment.js.prettier-snap\n    │                       │   ├── complex-args.js\n    │                       │   ├── complex-args.js.prettier-snap\n    │                       │   ├── computed-merge.js\n    │                       │   ├── computed-merge.js.prettier-snap\n    │                       │   ├── computed.js\n    │                       │   ├── computed.js.prettier-snap\n    │                       │   ├── conditional.js\n    │                       │   ├── conditional.js.prettier-snap\n    │                       │   ├── cypress.js\n    │                       │   ├── cypress.js.prettier-snap\n    │                       │   ├── d3.js\n    │                       │   ├── d3.js.prettier-snap\n    │                       │   ├── first_long.js\n    │                       │   ├── first_long.js.prettier-snap\n    │                       │   ├── fluent-configuration.js\n    │                       │   ├── fluent-configuration.js.prettier-snap\n    │                       │   ├── inline_merge.js\n    │                       │   ├── inline_merge.js.prettier-snap\n    │                       │   ├── issue-11298.js\n    │                       │   ├── issue-11298.js.prettier-snap\n    │                       │   ├── issue-3594.js\n    │                       │   ├── issue-3594.js.prettier-snap\n    │                       │   ├── issue-3621.js\n    │                       │   ├── issue-3621.js.prettier-snap\n    │                       │   ├── issue-4125.js\n    │                       │   ├── issue-4125.js.prettier-snap\n    │                       │   ├── logical.js\n    │                       │   ├── logical.js.prettier-snap\n    │                       │   ├── multiple-members.js\n    │                       │   ├── multiple-members.js.prettier-snap\n    │                       │   ├── object-literal.js\n    │                       │   ├── object-literal.js.prettier-snap\n    │                       │   ├── pr-7889.js\n    │                       │   ├── pr-7889.js.prettier-snap\n    │                       │   ├── short-names.js\n    │                       │   ├── short-names.js.prettier-snap\n    │                       │   ├── simple-args.js\n    │                       │   ├── simple-args.js.prettier-snap\n    │                       │   ├── square_0.js\n    │                       │   ├── square_0.js.prettier-snap\n    │                       │   ├── test.js\n    │                       │   ├── test.js.prettier-snap\n    │                       │   ├── this.js\n    │                       │   ├── this.js.prettier-snap\n    │                       │   ├── tuple-and-record.js\n    │                       │   ├── tuple-and-record.js.prettier-snap\n    │                       │   ├── tuple-and-record.js.snap\n    │                       │   └── print-width-120/\n    │                       │       ├── constructor.js\n    │                       │       ├── constructor.js.prettier-snap\n    │                       │       ├── issue-7884.js\n    │                       │       └── issue-7884.js.prettier-snap\n    │                       ├── module-blocks/\n    │                       │   ├── comments.js\n    │                       │   ├── comments.js.prettier-snap\n    │                       │   ├── comments.js.prettier-snap-original\n    │                       │   ├── comments.js.snap\n    │                       │   ├── module-blocks.js\n    │                       │   ├── module-blocks.js.prettier-snap\n    │                       │   ├── module-blocks.js.snap\n    │                       │   ├── non-module-blocks.js\n    │                       │   ├── non-module-blocks.js.prettier-snap\n    │                       │   ├── range.js\n    │                       │   ├── range.js.prettier-snap\n    │                       │   ├── range.js.snap\n    │                       │   ├── worker.js\n    │                       │   ├── worker.js.prettier-snap\n    │                       │   └── worker.js.snap\n    │                       ├── module-string-names/\n    │                       │   ├── module-string-names-export.js\n    │                       │   ├── module-string-names-export.js.prettier-snap\n    │                       │   ├── module-string-names-import.js\n    │                       │   └── module-string-names-import.js.prettier-snap\n    │                       ├── multiparser-comments/\n    │                       │   ├── comment-inside.js\n    │                       │   ├── comment-inside.js.prettier-snap\n    │                       │   ├── comment-inside.js.snap\n    │                       │   ├── comments.js\n    │                       │   ├── comments.js.prettier-snap\n    │                       │   ├── tagged.js\n    │                       │   ├── tagged.js.prettier-snap\n    │                       │   └── tagged.js.snap\n    │                       ├── multiparser-css/\n    │                       │   ├── colons-after-substitutions.js\n    │                       │   ├── colons-after-substitutions.js.prettier-snap\n    │                       │   ├── colons-after-substitutions.js.snap\n    │                       │   ├── colons-after-substitutions2.js\n    │                       │   ├── colons-after-substitutions2.js.prettier-snap\n    │                       │   ├── colons-after-substitutions2.js.snap\n    │                       │   ├── issue-11797.js\n    │                       │   ├── issue-11797.js.prettier-snap\n    │                       │   ├── issue-11797.js.snap\n    │                       │   ├── issue-2636.js\n    │                       │   ├── issue-2636.js.prettier-snap\n    │                       │   ├── issue-2883.js\n    │                       │   ├── issue-2883.js.prettier-snap\n    │                       │   ├── issue-2883.js.snap\n    │                       │   ├── issue-5697.js\n    │                       │   ├── issue-5697.js.prettier-snap\n    │                       │   ├── issue-5697.js.snap\n    │                       │   ├── issue-5961.js\n    │                       │   ├── issue-5961.js.prettier-snap\n    │                       │   ├── issue-5961.js.snap\n    │                       │   ├── issue-6259.js\n    │                       │   ├── issue-6259.js.prettier-snap\n    │                       │   ├── issue-8352.js\n    │                       │   ├── issue-8352.js.prettier-snap\n    │                       │   ├── issue-9072.js\n    │                       │   ├── issue-9072.js.prettier-snap\n    │                       │   ├── issue-9072.js.snap\n    │                       │   ├── styled-components-multiple-expressions.js\n    │                       │   ├── styled-components-multiple-expressions.js.prettier-snap\n    │                       │   ├── styled-components-multiple-expressions.js.snap\n    │                       │   ├── styled-components.js\n    │                       │   ├── styled-components.js.prettier-snap\n    │                       │   ├── styled-components.js.snap\n    │                       │   ├── url.js\n    │                       │   ├── url.js.prettier-snap\n    │                       │   ├── url.js.snap\n    │                       │   ├── var.js\n    │                       │   ├── var.js.prettier-snap\n    │                       │   └── var.js.snap\n    │                       ├── multiparser-graphql/\n    │                       │   ├── comment-tag.js\n    │                       │   ├── comment-tag.js.prettier-snap\n    │                       │   ├── comment-tag.js.snap\n    │                       │   ├── definitions.js\n    │                       │   ├── definitions.js.prettier-snap\n    │                       │   ├── escape.js\n    │                       │   ├── escape.js.prettier-snap\n    │                       │   ├── escape.js.snap\n    │                       │   ├── expressions.js\n    │                       │   ├── expressions.js.prettier-snap\n    │                       │   ├── expressions.js.snap\n    │                       │   ├── graphql-tag.js\n    │                       │   ├── graphql-tag.js.prettier-snap\n    │                       │   ├── graphql-tag.js.snap\n    │                       │   ├── graphql.js\n    │                       │   ├── graphql.js.prettier-snap\n    │                       │   ├── graphql.js.snap\n    │                       │   ├── invalid.js\n    │                       │   ├── invalid.js.prettier-snap\n    │                       │   ├── react-relay.js\n    │                       │   ├── react-relay.js.prettier-snap\n    │                       │   └── react-relay.js.snap\n    │                       ├── multiparser-html/\n    │                       │   ├── html-template-literals.js\n    │                       │   ├── html-template-literals.js.prettier-snap\n    │                       │   ├── html-template-literals.js.snap\n    │                       │   ├── issue-10691.js\n    │                       │   ├── issue-10691.js.prettier-snap\n    │                       │   ├── issue-10691.js.snap\n    │                       │   ├── lit-html.js\n    │                       │   ├── lit-html.js.prettier-snap\n    │                       │   ├── lit-html.js.snap\n    │                       │   └── language-comment/\n    │                       │       ├── not-language-comment.js\n    │                       │       └── not-language-comment.js.prettier-snap\n    │                       ├── multiparser-invalid/\n    │                       │   ├── text.js\n    │                       │   └── text.js.prettier-snap\n    │                       ├── multiparser-markdown/\n    │                       │   ├── 0-indent.js\n    │                       │   ├── 0-indent.js.prettier-snap\n    │                       │   ├── codeblock.js\n    │                       │   ├── codeblock.js.prettier-snap\n    │                       │   ├── escape.js\n    │                       │   ├── escape.js.prettier-snap\n    │                       │   ├── issue-5021.js\n    │                       │   ├── issue-5021.js.prettier-snap\n    │                       │   ├── markdown.js\n    │                       │   ├── markdown.js.prettier-snap\n    │                       │   ├── single-line.js\n    │                       │   └── single-line.js.prettier-snap\n    │                       ├── multiparser-text/\n    │                       │   ├── text.js\n    │                       │   ├── text.js.prettier-snap\n    │                       │   └── text.js.snap\n    │                       ├── new-expression/\n    │                       │   ├── call.js\n    │                       │   ├── call.js.prettier-snap\n    │                       │   ├── new_expression.js\n    │                       │   ├── new_expression.js.prettier-snap\n    │                       │   ├── with-member-expression.js\n    │                       │   └── with-member-expression.js.prettier-snap\n    │                       ├── new-target/\n    │                       │   ├── outside-functions.js\n    │                       │   ├── outside-functions.js.prettier-snap\n    │                       │   ├── range.js\n    │                       │   └── range.js.prettier-snap\n    │                       ├── newline/\n    │                       │   ├── backslash_2028.js\n    │                       │   ├── backslash_2028.js.prettier-snap\n    │                       │   ├── backslash_2029.js\n    │                       │   └── backslash_2029.js.prettier-snap\n    │                       ├── no-semi/\n    │                       │   ├── class.js\n    │                       │   └── class.js.prettier-snap\n    │                       └── no-semi-babylon-extensions/\n    │                           ├── no-semi.js\n    │                           ├── no-semi.js.prettier-snap\n    │                           └── no-semi.js.snap\n    ├── README.md -> README.md\n    ├── .cargo/\n    │   └── config.toml\n    ├── .changeset/\n    │   └── config.json\n    ├── .claude/\n    │   ├── settings.json\n    │   └── agents/\n    │       ├── biome-lint-engineer.md\n    │       ├── cst-parser-engineer.md\n    │       └── ir-formatter-engineer.md\n    ├── .devcontainer/\n    │   └── devcontainer.json\n    └── .github/\n        ├── CODEOWNERS\n        ├── documentation-issue-labeler.yaml\n        ├── labeler.yml\n        ├── PULL_REQUEST_TEMPLATE.md\n        ├── renovate.json\n        ├── ISSUE_TEMPLATE/\n        │   ├── 01_formatter_bug.yml\n        │   ├── 02_lint_bug.yml\n        │   ├── 03_bug.yml\n        │   ├── 04_task.yml\n        │   ├── 05_umbrella.yml\n        │   ├── 06_commercial_request.yml\n        │   └── config.yml\n        └── workflows/\n            ├── autofix.yml\n            ├── bench_cli.yml\n            ├── benchmark.yml\n            ├── beta.yml\n            ├── beta_js_api.yml\n            ├── close-issue.yml\n            ├── label-issue.yaml\n            ├── labels.yml\n            ├── main.yml\n            ├── needs-repro.yml\n            ├── parser_conformance.yml\n            ├── preview.yml\n            ├── pull_request.yml\n            ├── pull_request_js.yml\n            ├── pull_request_markdown.yml\n            ├── pull_request_node.yml\n            ├── pull_request_title_lint.yaml\n            ├── release.yml\n            ├── release_cli.yml\n            ├── release_js_api.yml\n            └── repository_dispatch.yml\n","content":"(Files content cropped to 300k characters, download full ingest to see more)\n================================================\nFILE: biome.json\n================================================\n{\n  \"$schema\": \"./packages/@biomejs/biome/configuration_schema.json\",\n  \"assist\": {\n    \"enabled\": true,\n    \"includes\": [\n      \"**\",\n      \"!./packages/@biomejs/biome/configuration_schema.json\"\n    ],\n    \"actions\": {\n      \"source\": {\n        \"useSortedKeys\": \"off\",\n        \"organizeImports\": \"on\"\n      }\n    }\n  },\n  \"css\": {\n    \"linter\": {\n      \"enabled\": true\n    }\n  },\n  \"files\": {\n    \"includes\": [\n      \"**/packages/aria-data/*.js\",\n      \"**/packages/@biomejs/**\",\n      \"**/packages/tailwindcss-config-analyzer/**\",\n      \"**/benchmark/**\",\n      \"scripts/**\",\n      \"!**/crates\",\n      \"!**/dist\",\n      \"!**/packages/@biomejs/backend-jsonrpc/src/workspace.ts\",\n      \"!**/__snapshots__\",\n      \"!**/undefined\",\n      \"!**/benchmark/target\",\n      \"!**/benches\"\n    ],\n    \"experimentalScannerIgnores\": [\n      \".cargo\",\n      \".git\",\n      \"target\"\n    ]\n  },\n  \"formatter\": {\n    \"includes\": [\n      \"**\",\n      \"!**/configuration_schema.json\"\n    ]\n  },\n  \"json\": {\n    \"formatter\": {\n      \"indentStyle\": \"space\",\n      \"lineWidth\": 1\n    }\n  },\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"style\": {\n        \"noParameterAssign\": \"error\",\n        \"useDefaultParameterLast\": \"error\",\n        \"useSingleVarDeclarator\": \"error\",\n        \"useConst\": \"error\",\n        \"noInferrableTypes\": \"error\",\n        \"noUselessElse\": \"error\",\n        \"useSelfClosingElements\": \"error\",\n        \"useNumberNamespace\": \"error\",\n        \"useAsConstAssertion\": \"error\",\n        \"noUnusedTemplateLiteral\": \"error\",\n        \"useTemplate\": \"error\",\n        \"useEnumInitializers\": \"error\"\n      },\n      \"correctness\": {\n        \"noUndeclaredDependencies\": \"error\"\n      },\n      \"suspicious\": {\n        \"noVar\": \"on\"\n      },\n      \"nursery\": {\n        \"noFloatingPromises\": \"error\",\n        \"noImportCycles\": \"error\"\n      }\n    }\n  },\n  \"plugins\": [\n    \"plugins/no-object-assign.grit\"\n  ],\n  \"vcs\": {\n    \"clientKind\": \"git\",\n    \"enabled\": true,\n    \"useIgnoreFile\": true\n  }\n}\n\n\n\n================================================\nFILE: Cargo.toml\n================================================\n[workspace]\n# Use the newer version of the cargo resolver\n# https://doc.rust-lang.org/cargo/reference/resolver.html#resolver-versions\nmembers  = [\"crates/*\", \"xtask/codegen\", \"xtask/coverage\", \"xtask/rules_check\"]\nresolver = \"2\"\n\n[workspace.lints.rust]\nabsolute_paths_not_starting_with_crate = \"warn\"\ndead_code                              = \"warn\"\ntrivial_numeric_casts                  = \"warn\"\nunused_import_braces                   = \"warn\"\nunused_lifetimes                       = \"warn\"\nunused_macro_rules                     = \"warn\"\n\n[workspace.lints.clippy]\nallow_attributes        = \"deny\"\ncargo_common_metadata   = \"allow\"\nempty_docs              = \"allow\" # there are some false positives inside biome_wasm\nmultiple_crate_versions = \"allow\"\n\n# pedantic\nassigning_clones             = \"warn\"\nchecked_conversions          = \"warn\"\ncloned_instead_of_copied     = \"warn\"\ncopy_iterator                = \"warn\"\ndbg_macro                    = \"warn\"\ndoc_link_with_quotes         = \"warn\"\nempty_enum                   = \"warn\"\nexpl_impl_clone_on_copy      = \"warn\"\nexplicit_into_iter_loop      = \"warn\"\nfilter_map_next              = \"warn\"\nflat_map_option              = \"warn\"\nfn_params_excessive_bools    = \"warn\"\nfrom_iter_instead_of_collect = \"warn\"\nimplicit_clone               = \"warn\"\nimplicit_hasher              = \"warn\"\nindex_refutable_slice        = \"warn\"\ninefficient_to_string        = \"warn\"\ninvalid_upcast_comparisons   = \"warn\"\niter_filter_is_ok            = \"warn\"\niter_not_returning_iterator  = \"warn\"\nlarge_stack_arrays           = \"warn\"\nlarge_types_passed_by_value  = \"warn\"\nmacro_use_imports            = \"warn\"\nmanual_is_variant_and        = \"warn\"\nmanual_ok_or                 = \"warn\"\nmanual_string_new            = \"warn\"\nmap_flatten                  = \"warn\"\nmap_unwrap_or                = \"warn\"\nmismatching_type_param_order = \"warn\"\nmut_mut                      = \"warn\"\nnaive_bytecount              = \"warn\"\nneedless_bitwise_bool        = \"warn\"\nneedless_continue            = \"warn\"\nneedless_for_each            = \"warn\"\nno_effect_underscore_binding = \"warn\"\noption_as_ref_cloned         = \"warn\"\nref_binding_to_reference     = \"warn\"\nref_option_ref               = \"warn\"\nsingle_char_pattern          = \"warn\"\nstable_sort_primitive        = \"warn\"\nstr_split_at_newline         = \"warn\"\nunnecessary_box_returns      = \"warn\"\nunnecessary_join             = \"warn\"\nunnested_or_patterns         = \"warn\"\nunreadable_literal           = \"warn\"\nverbose_bit_mask             = \"warn\"\nzero_sized_map_values        = \"warn\"\n\n# restriction\ncfg_not_test                      = \"warn\"\nempty_drop                        = \"warn\"\nempty_enum_variants_with_brackets = \"warn\"\nfloat_cmp_const                   = \"warn\"\nget_unwrap                        = \"warn\"\ninfinite_loop                     = \"warn\"\nlossy_float_literal               = \"warn\"\nrc_buffer                         = \"warn\"\nrc_mutex                          = \"warn\"\nrest_pat_in_fully_bound_structs   = \"warn\"\nstring_lit_chars_any              = \"warn\"\nverbose_file_reads                = \"warn\"\n# https://github.com/rustwasm/wasm-bindgen/issues/3944\n#mem_forget                      = \"warn\"\n\n[workspace.package]\nauthors    = [\"Biome Developers and Contributors\"]\ncategories = [\"development-tools\", \"web-programming\"]\nedition    = \"2024\"\nhomepage   = \"https://biomejs.dev/\"\nkeywords   = [\"parser\", \"linter\", \"formatter\"]\nlicense    = \"MIT OR Apache-2.0\"\nrepository = \"https://github.com/biomejs/biome\"\n\n[profile.release-with-debug]\ndebug    = true\ninherits = \"release\"\n\n[workspace.dependencies]\n# publish\nbiome_analyze                = { version = \"0.5.7\", path = \"./crates/biome_analyze\" }\nbiome_aria                   = { version = \"0.5.7\", path = \"./crates/biome_aria\" }\nbiome_aria_metadata          = { version = \"0.5.7\", path = \"./crates/biome_aria_metadata\" }\nbiome_console                = { version = \"0.5.7\", path = \"./crates/biome_console\" }\nbiome_control_flow           = { version = \"0.5.7\", path = \"./crates/biome_control_flow\" }\nbiome_css_analyze            = { version = \"0.5.7\", path = \"./crates/biome_css_analyze\" }\nbiome_css_factory            = { version = \"0.5.7\", path = \"./crates/biome_css_factory\" }\nbiome_css_formatter          = { version = \"0.5.7\", path = \"./crates/biome_css_formatter\" }\nbiome_css_parser             = { version = \"0.5.7\", path = \"./crates/biome_css_parser\" }\nbiome_css_semantic           = { version = \"0.0.0\", path = \"./crates/biome_css_semantic\" }\nbiome_css_syntax             = { version = \"0.5.7\", path = \"./crates/biome_css_syntax\" }\nbiome_deserialize            = { version = \"0.6.0\", path = \"./crates/biome_deserialize\" }\nbiome_deserialize_macros     = { version = \"0.6.0\", path = \"./crates/biome_deserialize_macros\" }\nbiome_diagnostics            = { version = \"0.5.7\", path = \"./crates/biome_diagnostics\" }\nbiome_diagnostics_categories = { version = \"0.5.7\", path = \"./crates/biome_diagnostics_categories\" }\nbiome_diagnostics_macros     = { version = \"0.5.7\", path = \"./crates/biome_diagnostics_macros\" }\nbiome_formatter              = { version = \"0.5.7\", path = \"./crates/biome_formatter\" }\nbiome_fs                     = { version = \"0.5.7\", path = \"./crates/biome_fs\" }\nbiome_glob                   = { version = \"0.1.0\", path = \"./crates/biome_glob\" }\nbiome_graphql_analyze        = { version = \"0.0.1\", path = \"./crates/biome_graphql_analyze\" }\nbiome_graphql_factory        = { version = \"0.1.0\", path = \"./crates/biome_graphql_factory\" }\nbiome_graphql_formatter      = { version = \"0.1.0\", path = \"./crates/biome_graphql_formatter\" }\nbiome_graphql_parser         = { version = \"0.1.0\", path = \"./crates/biome_graphql_parser\" }\nbiome_graphql_semantic       = { version = \"0.0.0\", path = \"./crates/biome_graphql_semantic\" }\nbiome_graphql_syntax         = { version = \"0.1.0\", path = \"./crates/biome_graphql_syntax\" }\nbiome_grit_factory           = { version = \"0.5.7\", path = \"./crates/biome_grit_factory\" }\nbiome_grit_formatter         = { version = \"0.0.0\", path = \"./crates/biome_grit_formatter\" }\nbiome_grit_parser            = { version = \"0.1.0\", path = \"./crates/biome_grit_parser\" }\nbiome_grit_patterns          = { version = \"0.0.1\", path = \"./crates/biome_grit_patterns\" }\nbiome_grit_syntax            = { version = \"0.5.7\", path = \"./crates/biome_grit_syntax\" }\nbiome_html_factory           = { version = \"0.5.7\", path = \"./crates/biome_html_factory\" }\nbiome_html_formatter         = { version = \"0.0.0\", path = \"./crates/biome_html_formatter\" }\nbiome_html_parser            = { version = \"0.0.1\", path = \"./crates/biome_html_parser\" }\nbiome_html_syntax            = { version = \"0.5.7\", path = \"./crates/biome_html_syntax\" }\nbiome_js_analyze             = { version = \"0.5.7\", path = \"./crates/biome_js_analyze\" }\nbiome_js_factory             = { version = \"0.5.7\", path = \"./crates/biome_js_factory\" }\nbiome_js_formatter           = { version = \"0.5.7\", path = \"./crates/biome_js_formatter\" }\nbiome_js_parser              = { version = \"0.5.7\", path = \"./crates/biome_js_parser\" }\nbiome_js_semantic            = { version = \"0.5.7\", path = \"./crates/biome_js_semantic\" }\nbiome_js_syntax              = { version = \"0.5.7\", path = \"./crates/biome_js_syntax\" }\nbiome_js_type_info           = { version = \"0.0.1\", path = \"./crates/biome_js_type_info\" }\nbiome_js_type_info_macros    = { version = \"0.0.1\", path = \"./crates/biome_js_type_info_macros\" }\nbiome_jsdoc_comment          = { version = \"0.0.1\", path = \"./crates/biome_jsdoc_comment\" }\nbiome_json_analyze           = { version = \"0.5.7\", path = \"./crates/biome_json_analyze\" }\nbiome_json_factory           = { version = \"0.5.7\", path = \"./crates/biome_json_factory\" }\nbiome_json_formatter         = { version = \"0.5.7\", path = \"./crates/biome_json_formatter\" }\nbiome_json_parser            = { version = \"0.5.7\", path = \"./crates/biome_json_parser\" }\nbiome_json_syntax            = { version = \"0.5.7\", path = \"./crates/biome_json_syntax\" }\nbiome_json_value             = { version = \"0.1.0\", path = \"./crates/biome_json_value\" }\nbiome_line_index             = { version = \"0.1.0\", path = \"./crates/biome_line_index\" }\nbiome_lsp_converters         = { version = \"0.1.0\", path = \"./crates/biome_lsp_converters\" }\nbiome_markdown_factory       = { version = \"0.0.1\", path = \"./crates/biome_markdown_factory\" }\nbiome_markdown_parser        = { version = \"0.0.1\", path = \"./crates/biome_markdown_parser\" }\nbiome_markdown_syntax        = { version = \"0.0.1\", path = \"./crates/biome_markdown_syntax\" }\nbiome_module_graph           = { version = \"0.0.1\", path = \"./crates/biome_module_graph\" }\nbiome_plugin_loader          = { version = \"0.0.1\", path = \"./crates/biome_plugin_loader\" }\nbiome_project_layout         = { version = \"0.0.1\", path = \"./crates/biome_project_layout\" }\nbiome_resolver               = { version = \"0.1.0\", path = \"./crates/biome_resolver\" }\nbiome_rule_options           = { version = \"0.0.1\", path = \"./crates/biome_rule_options\" }\nbiome_tailwind_factory       = { version = \"0.0.1\", path = \"./crates/biome_tailwind_factory\" }\nbiome_tailwind_parser        = { version = \"0.0.1\", path = \"./crates/biome_tailwind_parser\" }\nbiome_tailwind_syntax        = { version = \"0.0.1\", path = \"./crates/biome_tailwind_syntax\" }\nbiome_ungrammar              = { version = \"0.3.1\", path = \"./crates/biome_ungrammar\" }\nbiome_yaml_factory           = { version = \"0.0.1\", path = \"./crates/biome_yaml_factory\" }\nbiome_yaml_parser            = { version = \"0.0.1\", path = \"./crates/biome_yaml_parser\" }\nbiome_yaml_syntax            = { version = \"0.0.1\", path = \"./crates/biome_yaml_syntax\" }\n\nbiome_markup        = { version = \"0.5.7\", path = \"./crates/biome_markup\" }\nbiome_package       = { version = \"0.5.7\", path = \"./crates/biome_package\" }\nbiome_parser        = { version = \"0.5.7\", path = \"./crates/biome_parser\" }\nbiome_rowan         = { version = \"0.5.7\", path = \"./crates/biome_rowan\" }\nbiome_string_case   = { version = \"0.5.7\", path = \"./crates/biome_string_case\", features = [\"biome_rowan\"] }\nbiome_suppression   = { version = \"0.5.7\", path = \"./crates/biome_suppression\" }\nbiome_text_edit     = { version = \"0.5.7\", path = \"./crates/biome_text_edit\" }\nbiome_text_size     = { version = \"0.5.7\", path = \"./crates/biome_text_size\" }\nbiome_unicode_table = { version = \"0.5.7\", path = \"./crates/biome_unicode_table\" }\n\n# not publish\nbiome_cli            = { path = \"./crates/biome_cli\" }\nbiome_configuration  = { path = \"./crates/biome_configuration\" }\nbiome_flags          = { path = \"./crates/biome_flags\" }\nbiome_formatter_test = { path = \"./crates/biome_formatter_test\" }\nbiome_lsp            = { path = \"./crates/biome_lsp\" }\nbiome_migrate        = { path = \"./crates/biome_migrate\" }\nbiome_service        = { path = \"./crates/biome_service\" }\nbiome_test_utils     = { path = \"./crates/biome_test_utils\" }\ntests_macros         = { path = \"./crates/tests_macros\" }\n\n# Crates needed in the workspace\nanyhow               = \"1.0.98\"\nbpaf                 = { version = \"0.9.20\", features = [\"derive\"] }\ncamino               = \"1.1.11\"\ncfg-if               = \"1.0.1\"\ncountme              = \"3.0.1\"\ncrossbeam            = \"0.8.4\"\ndashmap              = \"6.1.0\"\ndirs                 = \"6.0.0\"\nenumflags2           = \"0.7.12\"\ngetrandom            = \"0.2.15\"\nglobset              = \"0.4.16\"\ngrit-pattern-matcher = \"0.5.1\"\ngrit-util            = \"0.5.1\"\nhashbrown            = { version = \"0.15.5\", default-features = false }\nignore               = \"0.4.23\"\nindexmap             = { version = \"2.10.0\" }\ninsta                = \"1.43.1\"\nmimalloc             = \"0.1.47\"\npapaya               = \"0.2.3\"\npath-absolutize      = { version = \"3.1.1\", optional = false, features = [\"use_unix_paths_on_wasm\"] }\nproc-macro-error2    = { version = \"2.0.1\", default-features = false }\nproc-macro2          = \"1.0.96\"\nquickcheck           = \"1.0.3\"\nquickcheck_macros    = \"1.1.0\"\nquote                = \"1.0.40\"\nrayon                = \"1.10.0\"\nregex                = \"1.11.1\"\nrust-lapper          = \"1.2.0\"\nrustc-hash           = \"2.1.1\"\nschemars             = { version = \"0.8.22\", features = [\"indexmap2\", \"smallvec\"] }\nserde                = { version = \"1.0.219\", features = [\"derive\"] }\nserde_json           = \"1.0.142\"\nsimilar              = \"2.7.0\"\nsmallvec             = { version = \"1.15.1\", features = [\"union\", \"const_new\", \"serde\"] }\nstatic_assertions    = \"1.1\"\nsyn                  = \"1.0.109\"\ntermcolor            = \"1.4.1\"\nterminal_size        = \"0.4.2\"\ntikv-jemallocator    = \"0.6.0\"\ntokio                = \"1.47.1\"\ntower                = \"0.5.2\"\ntower-lsp-server     = \"0.22.1\"\ntracing              = { version = \"0.1.41\", default-features = false, features = [\"std\", \"attributes\"] }\ntracing-subscriber   = \"0.3.19\"\nunicode-bom          = \"2.0.3\"\nunicode-width        = \"0.1.12\"\nureq                 = \"3.0.12\"\nurl                  = \"2.5.4\"\nwalkdir              = \"2.5.0\"\nweb-time             = \"1.1.0\"\n\n[profile.dev.package.biome_wasm]\ndebug     = true\nopt-level = \"s\"\n\n[profile.test.package.biome_wasm]\ndebug     = true\nopt-level = \"s\"\n\n[profile.release.package.biome_wasm]\ndebug     = false\nopt-level = 3\n\n#[patch.crates-io]\n#grit-pattern-matcher = { path = \"../gritql/crates/grit-pattern-matcher\" }\n#grit-util            = { path = \"../gritql/crates/grit-util\" }\n\n\n\n================================================\nFILE: CHANGELOG_v1.md\n================================================\n# Biome changelog\n\nThis project follows [Semantic Versioning](https://semver.org/spec/v2.0.0.html).\nDue to the nature of Biome as a toolchain,\nit can be unclear what changes are considered major, minor, or patch.\nRead our [guidelines to categorize a change](https://biomejs.dev/internals/versioning).\n\nNew entries must be placed in a section entitled `Unreleased`.\nRead\nour [guidelines for writing a good changelog entry](https://github.com/biomejs/biome/blob/main/CONTRIBUTING.md#changelog).\n\n## v1.9.4 (2024-10-17)\n\n### Analyzer\n\n#### Bug fixes\n\n- Implement [GraphQL suppression action](https://github.com/biomejs/biome/pull/4312). Contributed by @vohoanglong0107\n\n- Improved the message for unused suppression comments. Contributed by @dyc3\n\n- Fix [#4228](https://github.com/biomejs/biome/issues/4228), where the rule `a11y/noInteractiveElementToNoninteractiveRole` incorrectly reports a `role` for non-interactive elements. Contributed by @eryue0220\n\n- `noSuspiciousSemicolonInJsx` now catches suspicious semicolons in React fragments. Contributed by @vasucp1207\n\n- The syntax rule `noTypeOnlyImportAttributes` now ignores `.cts` files ([#4361](https://github.com/biomejs/biome/issues/4361)).\n\n  Since TypeScript 5.3, type-only imports can be associated to an import attribute in CommonJS-enabled files.\n  See the [TypeScript docs](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-5-3.html#stable-support-resolution-mode-in-import-types).\n\n  The following code is no longer reported as a syntax error:\n\n  ```cts\n  import type { TypeFromRequire } from \"pkg\" with {\n      \"resolution-mode\": \"require\"\n  };\n  ```\n\n  Note that this is only allowed in files ending with the `cts` extension.\n\n  Contributed by @Conaclos\n\n### CLI\n\n#### Enhancements\n\n- The `--summary` reporter now reports parsing diagnostics too. Contributed by @ematipico\n\n- Improved performance of GritQL queries by roughly 25-30%. Contributed by @arendjr\n\n### Configuration\n\n#### Bug fixes\n\n- Fix an issue where the JSON schema marked lint rules options as mandatory. Contributed by @ematipico\n\n### Editors\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#4121](https://github.com/biomejs/biome/issues/4121). Respect line width when printing multiline strings. Contributed by @ah-yu\n- Fix [#4384](https://github.com/biomejs/biome/issues/4384). Keep `@charset` dobule quote under any situation for css syntax rule. Contributed by @fireairforce\n\n### JavaScript APIs\n\n### Linter\n\n#### New features\n\n- Add [useGuardForIn](https://biomejs.dev/linter/rules/use-guard-for-in/). Contributed by @fireairforce\n- Add [noDocumentCookie](https://biomejs.dev/linter/rules/no-document-cookie/). Contributed by @tunamaguro\n- Add [noDocumentImportInPage](https://biomejs.dev/linter/rules/no-document-import-in-page/). Contributed by @kaioduarte\n- Add [noDuplicateProperties](https://biomejs.dev/linter/rules/no-duplicate-properties/). Contributed by @togami2864\n- Add [noHeadElement](https://biomejs.dev/linter/rules/no-head-element/). Contributed by @kaioduarte\n- Add [noHeadImportInDocument](https://biomejs.dev/linter/rules/no-head-import-in-document/). Contributed by @kaioduarte\n- Add [noImgElement](https://biomejs.dev/linter/rules/no-img-element/). Contributed by @kaioduarte\n- Add [noUnknownTypeSelector](https://biomejs.dev/linter/rules/no-unknown-type-selector/). Contributed by @Kazuhiro-Mimaki\n- Add [useAtIndex](https://biomejs.dev/linter/rules/use-at-index/). Contributed by @GunseiKPaseri\n- Add [noUselessStringRaw](https://biomejs.dev/linter/rules/no-useless-string-raw/). Contributed by @fireairforce\n- Add [nursery/useCollapsedIf](https://biomejs.dev/linter/rules/use-collapsed-if/). Contributed by @siketyan\n- Add [useGoogleFontDisplay](https://biomejs.dev/linter/rules/use-google-font-display/). Contributed by @kaioduarte\n- Add [useExportsLast](https://biomejs.dev/linter/rules/use-exports-last/). Contributed by @tommymorgan\n\n#### Bug Fixes\n\n- Biome no longer crashes when it encounters a string that contain a multibyte character ([#4181](https://github.com/biomejs/biome/issues/4181)).\n\n  This fixes a regression introduced in Biome 1.9.3\n  The regression affected the following linter rules:\n\n  - `nursery/useSortedClasses`\n  - `nursery/useTrimStartEnd`\n  - `style/useTemplate`\n  - `suspicious/noMisleadingCharacterClass`\n\n  Contributed by @Conaclos\n\n- Fix [#4190](https://github.com/biomejs/biome/issues/4190), where the rule `noMissingVarFunction` wrongly reported a variable as missing when used inside a `var()`  function that was a newline. Contributed by @ematipico\n\n- Fix [#4041](https://github.com/biomejs/biome/issues/4041). Now the rule `useSortedClasses` won't be triggered if `className` is composed only by inlined variables. Contributed by @ematipico\n\n- [useImportType](https://biomejs.dev/linter/rules/use-import-type/) and [useExportType](https://biomejs.dev/linter/rules/use-export-type/) now report useless inline type qualifiers ([#4178](https://github.com/biomejs/biome/issues/4178)).\n\n  The following fix is now proposed:\n\n  ```diff\n  - import type { type A, B } from \"\";\n  + import type { A, B } from \"\";\n\n  - export type { type C, D };\n  + export type { C, D };\n  ```\n\n  Contributed by @Conaclos\n\n- [useExportType](https://biomejs.dev/linter/rules/use-export-type/) now reports ungrouped `export from`.\n\n  The following fix is now proposed:\n\n  ```diff\n  - export { type A, type B } from \"\";\n  + export type { A, B } from \"\";\n  ```\n\n  Contributed by @Conaclos\n\n- [noVoidTypeReturn](https://biomejs.dev/linter/rules/no-void-type-return/) now accepts `void` expressions in return position ([#4173](https://github.com/biomejs/biome/issues/4173)).\n\n  The following code is now accepted:\n\n  ```ts\n  function f(): void {\n    return void 0;\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/) now correctly handles fragments containing HTML escapes (e.g. `&nbsp;`) inside expression escapes `{ ... }` ([#4059](https://github.com/biomejs/biome/issues/4059)).\n\n  The following code is no longer reported:\n\n  ```jsx\n  function Component() {\n    return (\n      <div key={index}>{line || <>&nbsp;</>}</div>\n    )\n  }\n  ```\n\n  Contributed by @fireairforce\n\n- [noUnusedFunctionParameters](https://biomejs.dev/linter/rules/no-unused-function-parameters/) and [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) no longer reports a parameter as unused when another parameter has a constructor type with the same parameter name ([#4227](https://github.com/biomejs/biome/issues/4227)).\n\n  In the following code, the `name` parameter is no longer reported as unused.\n\n  ```ts\n  export class Foo {\n    bar(name: string, _class: new (name: string) => any) {\n      return name\n    }\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/) now accepts dependency names with dots. Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now correctly handles renamed exports ([#4254](https://github.com/biomejs/biome/issues/4254)).\n\n  The rule allows the filename to be named as one of the exports of the module.\n  For instance, the file containing the following export can be named `Button`.\n\n  ```js\n  class Button {}\n  export { Button }\n  ```\n\n  The rule now correctly handles the renaming of an export.\n  For example, the file containing the following export can only be named `Button`.\n  Previously the rule expected the file to be named `A`.\n\n  ```js\n  class A {}\n  export { A as Button }\n  ```\n\n  Contributed by @Conaclos\n\n- [useConsistentMemberAccessibility](https://biomejs.dev/linter/rules/use-consistent-member-accessibility/) now ignore private class members such as `#property` ([#4276](https://github.com/biomejs/biome/issues/4276)). Contributed by @Conaclos\n\n- [noUnknownFunction](https://biomejs.dev/linter/rules/no-unknown-function/) correctly handles `calc-size` function ([#4212](https://github.com/biomejs/biome/issues/4212)).\n\n   The following code `calc-size` is no longer reported as unknown:\n\n   ```css\n   .a { height: calc-size(0px); }\n   ```\n\n   Contributed by @fireairforce\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) now allows configuring conventions for readonly index signatures.\n\n  Contributed by @sepruko\n\n- [noDuplicateCustomProperties](https://biomejs.dev/linter/rules/no-duplicate-custom-properties/) now correctly handles custom properties and ignores non-custom properties.\n  Previously, the rule incorrectly reported duplicates for all properties, including non-custom ones. Contributed by @togami2864\n\n### Parser\n\n#### Bug Fixes\n\n- The CSS parser now accepts more emoji in identifiers ([#3627](https://github.com/biomejs/biome/issues/3627#issuecomment-2392388022)).\n\n  Browsers accept more emoji than the standard allows.\n  Biome now accepts these additional emojis.\n\n  The following code is now correctly parsed:\n\n  ```css\n  p {\n    --✨-color: red;\n    color: var(--✨-color);\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- Add support for parsing typescript's `resolution-mode` in Import Types([#2115](https://github.com/biomejs/biome/issues/2115))\n\n  ```ts\n  export type Fs = typeof import('fs', { with: { 'resolution-mode': 'import' } });\n  export type TypeFromRequire =\n    import(\"pkg\", { with: { \"resolution-mode\": \"require\" } }).TypeFromRequire;\n  export type TypeFromImport =\n    import(\"pkg\", { with: { \"resolution-mode\": \"import\" } }).TypeFromImport;\n  ```\n\n  Contributed by @fireairforce\n\n## v1.9.3 (2024-10-01)\n\n### CLI\n\n#### New features\n\n- GritQL queries that match functions or methods will now match async functions or methods as well.\n\n  If this is not what you want, you can capture the `async` keyword (or its absence) in a metavariable and assert its emptiness:\n\n  ```grit\n  $async function foo() {} where $async <: .\n  ```\n\n  Contributed by @arendjr\n\n#### Bug fixes\n\n- Fix [#4077](https://github.com/biomejs/biome/issues/4077): Grit queries no longer need to match the statement's trailing semicolon. Contributed by @arendjr\n\n- Fix [#4102](https://github.com/biomejs/biome/issues/4102). Now the CLI command `lint` doesn't exit with an error code when using `--write`/`--fix`. Contributed by @ematipico\n\n### Configuration\n\n#### Bug fixes\n- Fix [#4125](https://github.com/biomejs/biome/issues/4125), where `noLabelWithoutControl` options where incorrectly marked as mandatory. Contributed by @ematipico\n\n### Editors\n\n- Fix a case where CSS files weren't correctly linted using the default configuration. Contributed by @ematipico\n\n#### Bug fixes\n\n- Fix [#4116](https://github.com/biomejs/biome/issues/4116). Unify LSP code action kinds. Contributed by @vitallium\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#3924](https://github.com/biomejs/biome/issues/3924) where GraphQL formatter panics in block comments with empty line. Contributed by @vohoanglong0107\n- Fix [#3364](https://github.com/biomejs/biome/issues/3364) where the `useSelfClosingElements` rule forces the `script` tag to be self-closing. Previously, this rule applies to all elements and cannot be disabled for native HTML elements.\n\n  Now, this rule accepts a `ignoreHtmlElements` option, which when set to `true`, ignores native HTML elements and allows them to be non-self-closing.\n\n  Contributed by @abidjappie\n\n- Fix a case where raw values inside `url()` functions weren't properly trimmed.\n  ```diff\n  .value {\n  -  background: url(\n  -   whitespace-around-string\n  -  );\n  + background: url(whitespace-around-string);\n  }\n  ```\n  Contributed by @ematipico\n\n- Fixed [#4076](https://github.com/biomejs/biome/issues/4076), where a media query wasn't correctly formatted:\n  ```diff\n  .class {\n  -  @media (1024px <= width <=1280px) {\n  +  @media (1024px <= width <= 1280px) {\n     color: red;\n     }\n  }\n  ```\n  Contributed by @blaze-d83\n\n### JavaScript API\n\n#### Bug fixes\n\n- Fix [#3881](https://github.com/biomejs/biome/issues/3881), by updating the APIs to use the latest WASM changes. Contributed by @ematipico\n\n### Linter\n\n#### New features\n\n- Add [noDescendingSpecificity](https://biomejs.dev/linter/rules/no-descending-specificity/). Contributed by @tunamaguro\n\n- Add [noNestedTernary](https://biomejs.dev/linter/rules/no-nested-ternary/). Contributed by @kaykdm\n\n- Add [noTemplateCurlyInString](https://biomejs.dev/linter/rules/no-template-curly-in-string/). Contributed by @fireairforce\n\n- Add [noOctalEscape](https://biomejs.dev/linter/rules/no-octal-escape/). Contributed by @fireairforce\n\n#### Enhancements\n\n- Add an option `reportUnnecessaryDependencies` to [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/).\n\n  Defaults to true. When set to false, errors will be suppressed for React hooks that declare dependencies but do not use them.\n\n  Contributed by @simon-paris\n\n- Add an option `reportMissingDependenciesArray` to [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/). Contributed by @simon-paris\n\n#### Bug fixes\n\n- [noControlCharactersInRegex](https://www.biomejs.dev/linter/rules/no-control-characters-in-regex) no longer panics on regexes with incomplete escape sequences. Contributed by @Conaclos\n\n- [noMisleadingCharacterClass](https://biomejs.dev/linter/rules/no-misleading-character-class/) no longer reports issues outside of character classes.\n\n  The following code is no longer reported:\n\n  ```js\n  /[a-z]👍/;\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/) no longer reports Node.js builtin modules as undeclared dependencies.\n\n  The rule no longer reports the following code:\n\n  ```js\n  import * as fs from \"fs\";\n  ```\n\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) no longer panics when suggesting the renaming of a variable at the start of a file ([#4114](https://github.com/biomejs/biome/issues/4114)). Contributed by @Conaclos\n\n- [noUselessEscapeInRegex](https://biomejs.dev/linter/rules/no-useless-escape-in-regex/) no longer panics on regexes that start with an empty character class. Contributed by @Conaclos\n\n- [noUselessStringConcat](https://biomejs.dev/linter/rules/no-useless-string-concat/) no longer panics when it encounters malformed code. Contributed by @Conaclos\n\n- [noUnusedFunctionParameters](https://biomejs.dev/linter/rules/no-unused-function-parameters/) no longer reports unused parameters inside an object pattern with a rest parameter.\n\n  In the following code, the rule no longer reports `a` as unused.\n\n  ```js\n  function f({ a, ...rest }) {\n    return rest;\n  }\n  ```\n\n  This matches the behavior of [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/).\n\n  Contributed by @Conaclos\n\n- [useButtonType](https://biomejs.dev/linter/rules/use-button-type/) no longer reports dynamically created button with a valid type ([#4072](https://github.com/biomejs/biome/issues/4072)).\n\n  The following code is no longer reported:\n\n  ```js\n  React.createElement(\"button\", { type: \"button\" }, \"foo\")\n  ```\n\n  Contributed by @Conaclos\n\n- [useSemanticElements](https://biomejs.dev/linter/rules/use-semantic-elements/) now ignores elements with the `img` role ([#3994](https://github.com/biomejs/biome/issues/3994)).\n\n  [MDN recommends](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/img_role) using `role=\"img\"` for grouping images or creating an image from other elements.\n  The following code is no longer reported:\n\n  ```jsx\n  <div role=\"img\" aria-label=\"That cat is so cute\">\n    <p>&#x1F408; &#x1F602;</p>\n  </div>\n  ```\n\n  Contributed by @Conaclos\n\n- [useSemanticElements](https://biomejs.dev/linter/rules/use-semantic-elements/) now ignores `alert` and `alertdialog` roles ([#3858](https://github.com/biomejs/biome/issues/3858)). Contributed by @Conaclos\n\n- [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/) don't create invalid JSX code when Fragments children contains JSX Expression and in a LogicalExpression. Contributed by @fireairforce\n\n### Parser\n\n#### Bug fixes\n\n- Forbid undefined as type name for typescript parser. Contributed by @fireairforce\n\n## v1.9.2 (2024-09-19)\n\n### CLI\n\n#### New features\n\n- Added support for custom GritQL definitions, including:\n  - Pattern and predicate definitions: https://docs.grit.io/guides/patterns\n  - Function definitions: https://docs.grit.io/language/functions#function-definitions\n\n  Contributed by @arendjr\n\n#### Bug fixes\n\n- Fix [#3917](https://github.com/biomejs/biome/issues/3917), where the fixed files were incorrectly computed. Contributed by @ematipico\n- Fixed an issue that caused GritQL `contains` queries to report false positives when the matched\n  node appeared inside a sibling node. Contributed by @arendjr\n\n### Editors\n\n#### Bug fixes\n\n- Fix [#3923](https://github.com/biomejs/biome/issues/3923). Now the `.editorconfig` is correctly parsed by the LSP, and the options are correctly applied to files when formatting is triggered.\n  Plus, the Biome LSP now watches for any change to the `.editorconfig`, and updates the formatting settings.\n- Reduced the number of log files generated by the LSP server. Now the maximum number of logs saved on disk is **seven**. Contributed by @ematipico\n- Fix the code actions capabilities available in the LSP Biome server. Before, the LSP was using the default capabilities, which resulted in pulling code actions even when they were disabled by the editor.\n\n  This means that the code actions are pulled by the client **only** when the editor enables `quickfix.biome`, `source.organizeImports.biome` and `source.fixAll.biome`.\n\n  Now, if you enable `organizeImports.enabled: true` in the `biome.json`, and then you configure your editor with the following code action `source.organizeImports.biome: false`, the editor **won't** sort the imports.\n\n  Contributed by @ematipico\n\n### Linter\n\n#### New features\n\n- Add [nursery/noMissingVarFunction](https://biomejs.dev/linter/rules/no-missing-var-function). Contributed by @michellocana\n- Add [nursery/useComponentExportOnlyModules](https://biomejs.dev/linter/rules/use-component-export-only-modules). Use this rule in React projects to enforce a code styling that fits React Refresh. Contributed by @GunseiKPaseri\n\n#### Bug fixes\n\n- [noLabelWithoutControl](https://biomejs.dev/linter/rules/no-label-without-control/) now accept JSX expression as label value ([#3875](https://github.com/biomejs/biome/issues/3875)). Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) no longer suggests names with a disallowed case ([#3952](https://github.com/biomejs/biome/issues/3952)). Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now recognizes file names starting with ASCII digits as lowercase ([#3952](https://github.com/biomejs/biome/issues/3952)).\n\n  Thus, `2024-09-17-filename`, `2024_09_17_filename` and `20240917FileName` are in `kebab-case`, `snake_case`, and `camelCase` respectively.\n\n  Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now applies the configured formats to the file extensions ([#3650](https://github.com/biomejs/biome/discussions/3650)). Contributed by @Conaclos\n\n### Parser\n\n#### Bug fixes\n\n- [useStrictMode](https://biomejs.dev/linter/rules/use-strict-mode/) now reports Script files with some directives, but without the `use strict` directive. Contributed by @Conaclos\n\n- The CSS parser now accepts the characters U+FFDCF and U+FFFD in identifiers. Contributed by @Conaclos\n\n## v1.9.1 (2024-09-15)\n\n### CLI\n\n#### Bug fixes\n\n- `useEditorConfig` now loads the editorconfig when running `biome ci` [#3864](https://github.com/biomejs/biome/issues/3864). Contributed by @dyc3\n\n### Editors\n\n#### Bug fixes\n\n- Revert [#3731](https://github.com/biomejs/biome/pull/3731) to fix broken quick fixes and code actions. Contributed by @nhedger\n\n### Linter\n\n#### New Features\n\n- Add [nursery/noProcessEnv](https://biomejs.dev/linter/rules/no-process-env/). Contributed by @unvalley\n\n#### Bug fixes\n\n- [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/) now ignores `@/` imports and recognizes type imports from Definitely Typed and `bun` imports. Contributed by @Conaclos\n\n## v1.9.0 (2024-09-12)\n\n### Analyzer\n\n- Implement the [semantic model for CSS](https://github.com/biomejs/biome/pull/3546). Contributed by @togami2864\n\n### CLI\n\n#### New features\n\n- Add `--graphql-linter-enabled` option, to control whether the linter should be enabled or not for GraphQL files. Contributed by @ematipico\n\n- New EXPERIMENTAL `search` command. The search command allows you to search a Biome project using [GritQL syntax](https://biomejs.dev/reference/gritql).\n\n  GritQL is a powerful language that lets you do _structural_ searches on your codebase. This means that trivia such as whitespace or even the type of strings quotes used will be ignored in your search query. It also has many features for querying the structure of your code, making it much more elegant for searching code than regular expressions.\n\n  While we believe this command may already be useful to users in some situations (especially when integrated in the IDE extensions!), we also had an ulterior motive for adding this command: We intend to utilize GritQL for our plugin efforts, and by allowing our users to try it out in a first iteration, we hope to gain insight in the type of queries you want to do, as well as the bugs we need to focus on.\n\n  For now, the `search` command is explicitly marked as EXPERIMENTAL, since many bugs remain. Keep this in mind when you try it out, and please [let us know](https://github.com/biomejs/biome/issues) your issues!\n\n  Note: GritQL escapes code snippets using backticks, but most shells interpret backticks as command invocations. To avoid this, it's best to put _single quotes_ around your Grit queries.\n\n  ```shell\n  biome search '`console.log($message)`' # find all `console.log` invocations\n  ```\n\n  Contributed by @arendjr and @BackupMiles\n\n- The option `--max-diagnostics` now accept a `none` value, which lifts the limit of diagnostics shown. Contributed by @ematipico\n  - Add a new reporter `--reporter=gitlab`, that emits diagnostics for using the [GitLab Code Quality report](https://docs.gitlab.com/ee/ci/testing/code_quality.html#implement-a-custom-tool).\n\n    ```json\n    [\n      {\n        \"description\": \"Use === instead of ==. == is only allowed when comparing against `null`\",\n        \"check_name\": \"lint/suspicious/noDoubleEquals\",\n        \"fingerprint\": \"6143155163249580709\",\n        \"severity\": \"critical\",\n        \"location\": {\n          \"path\": \"main.ts\",\n          \"lines\": {\n            \"begin\": 4\n          }\n        }\n      }\n    ]\n    ```\n\n    Contributed by @NiclasvanEyk\n\n- Add new options to the `lsp-proxy` and `start` commands:\n  - `--log-path`: a directory where to store the daemon logs. The commands also accepts the environment variable `BIOME_LOG_PATH`.\n  - `--log-prefix-name`: a prefix that's added to the file name of the logs. It defaults to `server.log`. The commands also accepts the environment variable `BIOME_LOG_PREFIX_NAME`.\n\n  @Contributed by @ematipico\n\n#### Enhancements\n\n- When a `--reporter` is provided, and it's different from the default one, the value provided by via `--max-diagnostics` is ignored and **the limit is lifted**. Contributed by @ematipico\n\n- `biome init` now generates a new config file with more options set.\n  This change intends to improve discoverability of the options and to set the more commonly used options to their default values.\n  Contributed by @Conaclos\n\n- The `--verbose` flag now reports the list of files that were evaluated, and the list of files that were fixed.\n  The **evaluated** files are the those files that can be handled by Biome, files that are ignored, don't have an extension or have an extension that Biome can't evaluate are excluded by this list.\n  The **fixed** files are those files that were handled by Biome and *changed*. Files that stays the same after the process are excluded from this list.\n\n  ```shell\n   VERBOSE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n    ℹ Files processed:\n\n    - biome/biome.json\n    - biome/packages/@biomejs/cli-win32-arm64/package.json\n    - biome/packages/tailwindcss-config-analyzer/package.json\n\n   VERBOSE  ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n    ℹ Files fixed:\n\n    - biome/biome/packages/tailwindcss-config-analyzer/src/generate-tailwind-preset.ts\n  ```\n\n  Contributed by @ematipico\n\n- Allow passing `nursery` to the `--only` and `--skip` filters.\n\n  The `--only` option allows you to run a given rule or rule group.\n  The `--skip` option allows you to skip the execution of a given group or a given rule.\n\n  Previously, it was not possible to pass `nursery`.\n  This restriction is now removed, as it may make sense to skip the nursery rules that a project has enabled.\n\n  Contributed by @Conaclos\n\n- The CLI now returns an error code when calling a command in `stdin` mode, and the contents of the files aren't fixed. For example, the following example will result in an error code of `1` because the `lint` command triggers some lint rules:\n\n  ```shell\n  echo \"let x = 1\" | biome lint --stdin-file-path=stdin.js\n  ```\n\n  Contributed by @ematipico\n\n#### Bug fixes\n\n- `biome lint --write` now takes `--only` and `--skip` into account ([#3470](https://github.com/biomejs/biome/issues/3470)). Contributed by @Conaclos\n\n- Fix [#3368](https://github.com/biomejs/biome/issues/3368), now the reporter `github` tracks the diagnostics that belong to formatting and organize imports. Contributed by @ematipico\n\n- Fix [#3545](https://github.com/biomejs/biome/issues/3545), display a warning, 'Avoid using unnecessary Fragment,' when a Fragment contains only one child element that is placed on a new line. Contributed by @satojin219\n\n- Migrating from Prettier or ESLint no longer overwrite the `overrides` field from the configuration ([#3544](https://github.com/biomejs/biome/issues/3544)). Contributed by @Conaclos\n\n- Fix JSX expressions for `noAriaHiddenOnFocusable` ([#3708](https://github.com/biomejs/biome/pull/3708)). Contributed by @anthonyshew\n\n- Fix edge case for `<canvas>` elements that use `role=\"img\"` ([#3728](https://github.com/biomejs/biome/pull/3728)). Contributed by @anthonyshew\n\n- Fix [#3633](https://github.com/biomejs/biome/issues/3633), where diagnostics where incorrectly printed if the code has errors. Contributed by @ematipico\n\n- Allow `aria-label` on heading to prevent `useHeadingContent` diagnostic ([#3767](https://github.com/biomejs/biome/pull/3767)). Contributed by @anthonyshew\n\n- Fix edge case [#3791](https://github.com/biomejs/biome/issues/3791) for rule `noFocusedTests` being used with non-string-like expressions ([#3793](https://github.com/biomejs/biome/pull/3793)). Contributed by @h-a-n-a\n\n- Fix optional ARIA properties for `role=\"separator\"` in `useAriaPropsForRole` ([#3856](https://github.com/biomejs/biome/pull/3856)). Contributed by @anthonyshew\n\n### Configuration\n\n- Add support for loading configuration from `.editorconfig` files ([#1724](https://github.com/biomejs/biome/issues/1724)).\n\n  Configuration supplied in `.editorconfig` will be overridden by the configuration in `biome.json`. Support is disabled by default and can be enabled by adding the following to your formatter configuration in `biome.json`:\n\n  ```json\n  {\n    \"formatter\": {\n      \"useEditorconfig\": true\n    }\n  }\n  ```\n\n  Contributed by @dyc3\n\n- `overrides` from an extended configuration is now merged with the `overrides` of the extension.\n\n  Given the following shared configuration `biome.shared.json`:\n\n  ```json5\n  {\n    \"overrides\": [\n      {\n        \"include\": [\"**/*.json\"],\n        // ...\n      }\n    ]\n  }\n  ```\n\n  and the following configuration:\n\n  ```json5\n  {\n    \"extends\": [\"./biome.shared.json\"],\n    \"overrides\": [\n      {\n        \"include\": [\"**/*.ts\"],\n        // ...\n      }\n    ]\n  }\n  ```\n\n  Previously, the `overrides` from `biome.shared.json` was overwritten.\n  It is now merged and results in the following configuration:\n\n  ```json5\n  {\n    \"extends\": [\"./biome.shared.json\"],\n    \"overrides\": [\n      {\n        \"include\": [\"**/*.json\"],\n        // ...\n      },\n      {\n        \"include\": [\"**/*.ts\"],\n        // ...\n      }\n    ]\n  }\n  ```\n\n  Contributed by @Conaclos\n\n### Editors\n\n- Fix [#3577](https://github.com/biomejs/biome/issues/3577), where the update of the configuration file was resulting in the creation of a new internal project. Contributed by @ematipico\n\n- Fix [#3696](https://github.com/biomejs/biome/issues/3696), where `biome.jsonc` was incorrectly parsed with incorrect options. Contributed by @ematipico\n\n### Formatter\n\n- The CSS formatter is enabled by default. Which means that you don't need to opt-in anymore using the configuration file `biome.json`:\n\n  ```diff\n  {\n  -  \"css\": {\n  -    \"formatter\": {\n  -      \"enabled\": true\n  -    }\n  -  }\n  }\n  ```\n\n  Contributed by @ematipico\n\n- Add parentheses for nullcoalescing in ternaries.\n\n  This change aligns on [Prettier 3.3.3](https://github.com/prettier/prettier/blob/main/CHANGELOG.md#333).\n  This adds clarity to operator precedence.\n\n  ```diff\n  - foo ? bar ?? foo : baz;\n  + foo ? (bar ?? foo) : baz;\n  ```\n\n  Contributed by @Conaclos\n\n- Keep the parentheses around `infer ... extends` declarations in type unions and type intersections ([#3419](https://github.com/biomejs/biome/issues/3419)). Contributed by @Conaclos\n\n- Keep parentheses around a `yield` expression inside a type assertion.\n\n  Previously, Biome removed parentheses around some expressions that require them inside a type assertion.\n  For example, in the following code, Biome now preserves the parentheses.\n\n  ```ts\n  function* f() {\n    return <T>(yield 0);\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- Remove parentheses around expressions that don't need them inside a decorator.\n\n  Biome now matches Prettier in the following cases:\n\n  ```diff\n    class {\n  -   @(decorator)\n  +   @decorator\n      method() {}\n    },\n    class {\n  -   @(decorator())\n  +   @decorator()\n      method() {}\n    },\n    class {\n      @(decorator?.())\n      method() {}\n    },\n  ```\n\n  Contributed by @Conaclos\n\n- Keep parentheses around objects preceded with a `@satisfies` comment.\n\n  In the following example, parentheses are no longer removed.\n\n  ```ts\n  export const PROPS = /** @satisfies {Record<string, string>} */ ({\n    prop: 0,\n  });\n  ```\n\n  Contributed by @Conaclos\n\n### Linter\n\n#### Promoted rules\n\nNew rules are incubated in the nursery group.\nOnce stable, we promote them to a stable group.\n\nThe following CSS rules are promoted:\n\n- [a11y/useGenericFontNames](https://biomejs.dev/linter/rules/use-generic-font-names/)\n- [correctness/noInvalidDirectionInLinearGradient](https://biomejs.dev/linter/rules/no-invalid-direction-in-linear-gradient/)\n- [correctness/noInvalidGridAreas](https://biomejs.dev/linter/rules/no-invalid-grid-areas/)\n- [correctness/noInvalidPositionAtImportRule](https://biomejs.dev/linter/rules/no-invalid-position-at-import-rule/)\n- [correctness/noUnknownFunction](https://biomejs.dev/linter/rules/no-unknown-function/)\n- [correctness/noUnknownMediaFeatureName](https://biomejs.dev/linter/rules/no-unknown-media-feature-name/)\n- [correctness/noUnknownProperty](https://biomejs.dev/linter/rules/no-unknown-property/)\n- [correctness/noUnknownUnit](https://biomejs.dev/linter/rules/no-unknown-unit/)\n- [correctness/noUnmatchableAnbSelector](https://biomejs.dev/linter/rules/no-unmatchable-anb-selector/)\n- [suspicious/noDuplicateAtImportRules](https://biomejs.dev/linter/rules/no-duplicate-at-import-rules/)\n- [suspicious/noDuplicateFontNames](https://biomejs.dev/linter/rules/no-duplicate-font-names/)\n- [suspicious/noDuplicateSelectorsKeyframeBlock](https://biomejs.dev/linter/rules/no-duplicate-selectors-keyframe-block/)\n- [suspicious/noEmptyBlock](https://biomejs.dev/linter/rules/no-empty-block/)\n- [suspicious/noImportantInKeyframe](https://biomejs.dev/linter/rules/no-important-in-keyframe/)\n- [suspicious/noShorthandPropertyOverrides](https://biomejs.dev/linter/rules/no-shorthand-property-overrides/)\n\nThe following JavaScript rules are promoted:\n\n- [a11y/noLabelWithoutControl](https://biomejs.dev/linter/rules/no-label-without-control/)\n- [a11y/useFocusableInteractive](https://biomejs.dev/linter/rules/use-focusable-interactive/)\n- [a11y/useSemanticElements](https://biomejs.dev/linter/rules/use-semantic-elements/)\n- [complexity/noUselessStringConcat](https://biomejs.dev/linter/rules/no-useless-string-concat/)\n- [complexity/noUselessUndefinedInitialization](https://biomejs.dev/linter/rules/no-useless-undefined-initialization/)\n- [complexity/useDateNow](https://biomejs.dev/linter/rules/use-date-now/)\n- [correctness/noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/)\n- [correctness/noInvalidBuiltinInstantiation](https://biomejs.dev/linter/rules/no-invalid-builtin-instantiation/)\n- [correctness/noUnusedFunctionParameters](https://biomejs.dev/linter/rules/no-unused-function-parameters/)\n- [correctness/useImportExtensions](https://biomejs.dev/linter/rules/use-import-extensions/)\n- [performance/useTopLevelRegex](https://biomejs.dev/linter/rules/use-top-level-regex/)\n- [style/noDoneCallback](https://biomejs.dev/linter/rules/no-done-callback/)\n- [style/noYodaExpression](https://biomejs.dev/linter/rules/no-yoda-expression/)\n- [style/useConsistentBuiltinInstantiation](https://biomejs.dev/linter/rules/use-consistent-builtin-instantiation/)\n- [style/useDefaultSwitchClause](https://biomejs.dev/linter/rules/use-default-switch-clause/)\n- [style/useExplicitLengthCheck](https://biomejs.dev/linter/rules/use-explicit-length-check/)\n- [style/useThrowNewError](https://biomejs.dev/linter/rules/use-throw-new-error/)\n- [style/useThrowOnlyError](https://biomejs.dev/linter/rules/use-throw-only-error/)\n- [suspicious/noConsole](https://biomejs.dev/linter/rules/no-console/)\n- [suspicious/noEvolvingTypes](https://biomejs.dev/linter/rules/no-evolving-types/)\n- [suspicious/noMisplacedAssertion](https://biomejs.dev/linter/rules/no-misplaced-assertion/)\n- [suspicious/noReactSpecificProps](https://biomejs.dev/linter/rules/no-react-specific-props/)\n- [suspicious/useErrorMessage](https://biomejs.dev/linter/rules/use-error-message/)\n- [suspicious/useNumberToFixedDigitsArgument](https://biomejs.dev/linter/rules/use-number-to-fixed-digits-argument/)\n\n#### Deprecated rules\n\n- `correctness/noInvalidNewBuiltin` is deprecated. Use [correctness/noInvalidBuiltinInstantiation](https://biomejs.dev/linter/rules/no-invalid-builtin-instantiation/) instead.\n- `style/useSingleCaseStatement` is deprecated. Use [correctness/noSwitchDeclarations](https://biomejs.dev/linter/rules/no-switch-declarations/) instead.\n- `suspicious/noConsoleLog` is deprecated. Use [suspicious/noConsole](https://biomejs.dev/linter/rules/no-console/) instead.\n\n#### New features\n\n- Implement [css suppression action](https://github.com/biomejs/biome/issues/3278). Contributed by @togami2864\n\n- Add support for GraphQL linting. Contributed by @ematipico\n\n- Add [nursery/noCommonJs](https://biomejs.dev/linter/rules/no-common-js/). Contributed by @minht11\n\n- Add [nursery/noDuplicateCustomProperties](https://biomejs.dev/linter/rules/no-duplicate-custom-properties/). Contributed by @chansuke\n\n- Add [nursery/noEnum](https://biomejs.dev/linter/rules/no-enum/). Contributed by @nickfla1\n\n- Add [nursery/noDynamicNamespaceImportAccess](https://biomejs.dev/linter/no-dynamic-namespace-import-access/). Contributed by @minht11\n\n- Add [nursery/noIrregularWhitespace](https://biomejs.dev/linter/rules/no-irregular-whitespace). Contributed by @michellocana\n\n- Add [nursery/noRestrictedTypes](https://biomejs.dev/linter/no-restricted-types/). Contributed by @minht11\n\n- Add [nursery/noSecrets](https://biomejs.dev/linter/rules/no-secrets/). Contributed by @SaadBazaz\n\n- Add [nursery/noUselessEscapeInRegex](https://biomejs.dev/linter/rules/no-useless-escape-in-regex/). Contributed by @Conaclos\n\n- Add [nursery/noValueAtRule](https://biomejs.dev/linter/rules/no-value-at-rule/). Contributed by @rishabh3112\n\n- Add [nursery/useAriaPropsSupportedByRole](https://biomejs.dev/linter/rules/use-aria-props-supported-by-role/). Contributed by @ryo-ebata\n\n- Add [nursery/useConsistentMemberAccessibility](https://biomejs.dev/linter/rules/use-consistent-member-accessibility/). Contributed by @seitarof\n\n- Add [nursery/useStrictMode](https://biomejs.dev/linter/rules/use-strict-mode/). Contributed by @ematipico\n\n- Add [nursery/useTrimStartEnd](https://biomejs.dev/linter/rules/use-trim-start-end/). Contributed by @chansuke\n\n- Add [nursery/noIrregularWhitespace](https://biomejs.dev/linter/rules/no-irreguluar-whitespace/). Contributed by @DerTimonius\n\n#### Enhancements\n\n- Rename `nursery/noUnknownSelectorPseudoElement` to `nursery/noUnknownPseudoElement`. Contributed by @togami2864\n\n- The CSS linter is now enabled by default. Which means that you don't need to opt-in anymore using the configuration file `biome.json`:\n\n  ```diff\n  {\n  -  \"css\": {\n  -    \"linter\": {\n  -      \"enabled\": true\n  -    }\n  -  }\n  }\n  ```\n\n  Contributed by @ematipico\n\n- The JavaScript linter recognizes TypeScript 5.5 and 5.6 globals. Contributed by @Conaclos\n\n- [noBlankTarget](https://biomejs.dev/linter/rules/no-blank-target/) now supports an array of allowed domains.\n\n  The following configuration allows `example.com` and `example.org` as blank targets.\n\n  ```json\n  \"linter\": {\n    \"rules\": {\n      \"a11y\": {\n        \"noBlankTarget\": {\n        \"level\": \"error\",\n          \"options\": {\n             \"allowDomains\": [\"example.com\", \"example.org\"]\n            }\n          }\n        }\n      }\n    }\n  ```\n\n  Contributed by @Jayllyz\n\n- [noConsole](https://biomejs.dev/linter/rules/no-console/) now accepts an option that specifies some allowed calls on `console`. Contributed by @Conaclos\n\n- Add an `ignoreNull` option for [noDoubleEquals](https://biomejs.dev/linter/rules/no-double-equals/).\n\n  By default the rule allows loose comparisons against `null`.\n  The option `ignoreNull` can be set to `false` for reporting loose comparison against `null`.\n\n  Contributed by @peaBerberian.\n\n- [noDuplicateObjectKeys](https://biomejs.dev/linter/rules/no-duplicate-object-keys/) now works for JSON and JSONC files. Contributed by @ematipico\n\n- [noInvalidUseBeforeDeclaration](https://biomejs.dev/linter/rules/no-invalid-use-before-declaration) now reports direct use of an enum member before its declaration.\n\n  In the following code, `A` is reported as use before its declaration.\n\n  ```ts\n  enum E {\n    B = A << 1,\n    A = 1,\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noNodejsModules](https://biomejs.dev/linter/rules/no-nodejs-modules/) now ignores imports of a package which has the same name as a Node.js module. Contributed by @Conaclos\n\n- [noNodejsModules](https://biomejs.dev/linter/rules/no-nodejs-modules/) now ignores type-only imports ([#1674](https://github.com/biomejs/biome/issues/1674)).\n\n  The rule no longer reports type-only imports such as:\n\n  ```ts\n  import type assert from \"assert\";\n  import type * as assert2 from \"assert\";\n  ```\n\n  Contributed by @Conaclos\n\n- [noRedundantUseStrict](https://biomejs.dev/linter/rules/no-redundant-use-strict/) no longer reports `\"use strict\"` directives when the `package.json` marks explicitly the file as a script using the field `\"type\": \"commonjs\"`. Contributed by @ematipico\n\n- [noStaticOnlyClass](https://biomejs.dev/linter/rules/no-static-only-class/) no longer reports a class that extends another class ([#3612](https://github.com/biomejs/biome/issues/3612)). Contributed by @errmayank\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) no longer reports a direct reference to an enum member ([#2974](https://github.com/biomejs/biome/issues/2974)).\n\n  In the following code, the `A` reference is no longer reported as an undeclared variable.\n\n  ```ts\n  enum E {\n    A = 1,\n    B = A << 1,\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) recognized Svelte 5 runes in Svelte components and svelte files.\n\n  Svelte 5 introduced runes.\n  The rule now recognizes Svelte 5 runes in files ending with the `.svelte`, `.svelte.js` or `.svelte.ts` extensions.\n\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) now checks TypeScript declaration files.\n\n  This allows to report a type that is unused because it isn't exported.\n  Global declarations files (declarations files without exports and imports) are still ignored.\n\n  Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now supports [unicase](https://en.wikipedia.org/wiki/Unicase) letters.\n\n  [unicase](https://en.wikipedia.org/wiki/Unicase) letters have a single case: they are neither uppercase nor lowercase.\n  Biome now accepts filenames in unicase.\n  For example, the filename `안녕하세요` is now accepted.\n\n  We still reject a name that mixes unicase characters with lowercase or uppercase characters.\n  For example, the filename `A안녕하세요` is rejected.\n\n  This change also fixes [#3353](https://github.com/biomejs/biome/issues/3353).\n  Filenames consisting only of numbers are now accepted.\n\n  Contributed by @Conaclos\n\n- [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now supports Next.js/Nuxt/Astro dynamic routes ([#3465](https://github.com/biomejs/biome/issues/3465)).\n\n  [Next.js](https://nextjs.org/docs/pages/building-your-application/routing/dynamic-routes#catch-all-segments), [SolidStart](https://docs.solidjs.com/solid-start/building-your-application/routing#renaming-index), [Nuxt](https://nuxt.com/docs/guide/directory-structure/server#catch-all-route), and [Astro](https://docs.astro.build/en/guides/routing/#rest-parameters) support dynamic routes such as `[...slug].js` and `[[...slug]].js`.\n\n  Biome now recognizes this syntax. `slug` must contain only alphanumeric characters.\n\n  Contributed by @Conaclos\n\n- [useExportType](https://biomejs.dev/linter/rules/use-export-type/) no longer reports empty `export` ([#3535](https://github.com/biomejs/biome/issues/3535)).\n\n  An empty `export {}` allows you to force TypeScript to consider a file with no imports and exports as an EcmaScript module.\n  While `export type {}` is valid, it is more common to use `export {}`.\n  Users may find it confusing that the linter asks them to convert it to `export type {}`.\n  Also, a bundler should be able to remove `export {}` as well as `export type {}`.\n  So it is not so useful to report `export {}`.\n\n  Contributed by @Conaclos\n\n#### Bug fixes\n\n- [noControlCharactersInRegex](https://www.biomejs.dev/linter/rules/no-control-characters-in-regex) now corretcly handle `\\u` escapes in unicode-aware regexes.\n\n  Previously, the rule didn't consider regex with the `v` flags as unicode-aware regexes.\n  Moreover, `\\uhhhh` was not handled in unicode-aware regexes.\n\n  Contributed by @Conaclos\n\n- [noControlCharactersInRegex](https://www.biomejs.dev/linter/rules/no-control-characters-in-regex) now reports control characters and escape sequence of control characters in string regexes. Contributed by @Conaclos\n\n- `noExcessiveNestedTestSuites`: fix an edge case where the rule would alert on heavily nested zod schemas. Contributed by @dyc3\n\n- `noExtraNonNullAssertion` no longer reports a single non-null assertion enclosed in parentheses ([#3352](https://github.com/biomejs/biome/issues/3352)). Contributed by @Conaclos\n\n- [noMultipleSpacesInRegularExpressionLiterals](https://biomejs.dev/linter/rules/no-multiple-spaces-in-regular-expression-literals/) now correctly provides a code fix when Unicode characters are used. Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) no longer report redeclartions for lexically scoped function declarations [#3664](https://github.com/biomejs/biome/issues/3664).\n\n  In JavaScript strict mode, function declarations are lexically scoped:\n  they cannot be accessed outside the block where they are declared.\n\n  In non-strict mode, function declarations are hoisted to the top of the enclosing function or global scope.\n\n  Previously Biome always hoisted function declarations.\n  It now takes into account whether the code is in strict or non strict mode.\n\n  Contributed by @Conaclos\n\n- [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/) now ignores self package imports.\n\n  Given teh following `package.json`:\n\n  ```json\n  {\n    \"name\": \"my-package\",\n    \"main\": \"index.js\"\n  }\n  ```\n\n  The following import is no longer reported by the rule:\n\n  ```js\n  import * as mod from \"my-package\";\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [[#3149](https://github.com/biomejs/biome/issues/3149)] crashes that occurred when applying the `noUselessFragments` unsafe fixes in certain scenarios. Contributed by @unvalley\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) no longer reports a variable named as the function expression where it is declared. Contributed by @Conaclos\n\n- `useAdjacentOverloadSignatures` no longer reports a `#private` class member and a public class member that share the same name ([#3309](https://github.com/biomejs/biome/issues/3309)).\n\n  The following code is no longer reported:\n\n  ```js\n  class C {\n    #f() {}\n    g() {}\n    f() {}\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [useAltText](https://www.biomejs.dev/linter/rules/use-alt-text) n olonger requests alt text for elements hidden from assistive technologies ([#3316](https://github.com/biomejs/biome/issues/3316)). Contributed by @robintown\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) now accepts applying custom convention on abstract classes. Contributed by @Conaclos\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) no longer suggests an empty fix when a name doesn't match strict Pascal case ([#3561](https://github.com/biomejs/biome/issues/3561)).\n\n  Previously the following code led `useNamingConvention` to suggest an empty fix.\n  The rule no longer provides a fix for this case.\n\n  ```ts\n  type AAb = any\n  ```\n\n  Contributed by @Conaclos\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) no longer provides fixes for global TypeScript declaration files.\n\n  Global TypeScript declaration files have no epxorts and no imports.\n  All the declared types are available in all files of the project.\n  Thus, it is not safe to propose renaming only in the declaration file.\n\n  Contributed by @Conaclos\n\n- [useSortedClasses](https://biomejs.dev/linter/rules/use-sorted-classes/) lint error with Template literals ([#3394](https://github.com/biomejs/biome/issues/3394)). Contributed by @hangaoke1\n\n- [useValidAriaValues](https://biomejs.dev/linter/rules/use-valid-aria-values/) now correctly check property types ([3748](https://github.com/biomejs/biome/issues/3748)).\n\n  Properties that expect a string now accept arbitrary text.\n  An identifiers can now be made up of any characters except ASCII whitespace.\n  An identifier list can now be separated by any ASCII whitespace.\n\n  Contributed by @Conaclos\n\n### Parser\n\n#### Enhancements\n\n- The JSON parser now allows comments in `turbo.json` and `jest.config.json`. Contributed by @Netail and @Conaclos\n\n- The JSON parser now allows comments in files with the `.json` extension under the `.vscode` and `.zed` directories.\n\n  Biome recognizes are well known JSON files that allows comments and/or trailing commas.\n  Previously, Biome did not recognize JSON files under the `.vscode` and the `.zed` directories as JSON files that allow comments.\n  You had to configure Biome to recognize them:\n\n  ```json\n  {\n    \"overrides\": [\n      {\n        \"include\": [\"**/.vscode/*.json\", \"**/.zed/*.json\"],\n        \"json\": { \"parser\": { \"allowComments\": true } }\n      }\n    ]\n  }\n  ```\n\n  This override is no longer needed!\n  Note that JSON files under the `.vscode` and the `.zed` directories don't accept trailing commas.\n\n  Contributed by @Conaclos\n\n#### Bug fixes\n\n- The CSS parser now accepts emoji in identifiers ([3627](https://github.com/biomejs/biome/issues/3627)).\n\n  The following code is now correctly parsed:\n\n  ```css\n  p {\n    --🥔-color: red;\n    color: var(--🥔-color);\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [#3287](https://github.com/biomejs/biome/issues/3287) nested selectors with pseudo-classes. Contributed by @denbezrukov\n\n- Fix [#3349](https://github.com/biomejs/biome/issues/3349) allow CSS multiple ampersand support. Contributed by @denbezrukov\n\n  ```css\n  .class {\n    && {\n      color: red;\n    }\n  }\n  ```\n\n- Fix [#3410](https://github.com/biomejs/biome/issues/3410) by correctly parsing break statements containing keywords.\n  ```js\n  out: while (true) {\n    break out;\n  }\n  ```\n  Contributed by @ah-yu\n\n- Fix [#3464](https://github.com/biomejs/biome/issues/3464) by enabling JSX in `.vue` files that use the `lang='jsx'` or `lang='tsx'` attribute. Contributed by @ematipico\n\n\n## v1.8.3 (2024-06-27)\n\n### CLI\n\n#### Bug fixes\n\n- Fix [#3104](https://github.com/biomejs/biome/issues/3104) by suppressing node warnings when using `biome migrate`. Contributed by @SuperchupuDev\n\n- Force colors to be off when using the GitHub reporter to properly create annotations in GitHub actions ([#3148](https://github.com/biomejs/biome/issues/3148)). Contributed by @Sec-ant\n\n### Parser\n\n#### Bug fixes\n\n- Implement [CSS unicode range](https://github.com/biomejs/biome/pull/3251). Contributed by @denbezrukov\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#3184](https://github.com/biomejs/biome/issues/3184) CSS formatter converts custom identifiers to lowercase. Contributed by @denbezrukov\n- Fix [#3256](https://github.com/biomejs/biome/issues/3256) constant crashes when editing css files #3256. Contributed by @denbezrukov\n\n### Linter\n\n#### New features\n\n- Add `nursery/useDeprecatedReason` rule. Contributed by @vohoanglong0107.\n- Add [nursery/noExportedImports](https://biomejs.dev/linter/rules/no-exported-imports/). Contributed by @Conaclos\n\n#### Enhancements\n\n- Implement [suggestedExtensions option](https://github.com/biomejs/biome/pull/3274) for `useImportExtensions` rule. Contributed by @drdaemos\n\n#### Bug fixes\n\n- `useConsistentArrayType` and `useShorthandArrayType` now ignore `Array` in the `extends` and `implements` clauses. Fix [#3247](https://github.com/biomejs/biome/issues/3247). Contributed by @Conaclos\n- Fixes [#3066](https://github.com/biomejs/biome/issues/3066) by taking into account the dependencies declared in the `package.json`. Contributed by @ematipico\n- The code action of the `useArrowFunction` rule now preserves a trailing comma when there is only a single type parameter in the arrow function and JSX is enabled. Fixes [#3292](https://github.com/biomejs/biome/issues/3292). Contributed by @Sec-ant\n\n#### Enhancements\n- Enhance tailwind sorting lint rule [#1274](https://github.com/biomejs/biome/issues/1274) with variant support.\n\n  Every preconfigured variant is assigned a `weight` that concurs on establishing the output sorting order.\n  Since nesting variants on the same utility class is possible, the resulting `weight` is the Bitwise XOR of all the variants weight for that class.\n  Dynamic variants (e.g. `has-[.custom-class]`, `group-[:checked]`) are also supported and they take the `weight` of their base variant name the custom value attached (e.g. `has-[.custom-class]` takes `has` weight).\n  Arbitrary variants (e.g. `[&nth-child(2)]`) don't have a weight assigned and they are placed after every known variant.\n  Classes with the same amount of arbitrary variants follow lexicographical order. The class that has the highest number of nested arbitrary variants is placed last.\n  Screen variants (e.g. `sm:`, `max-md:`, `min-lg:`) are not supported yet.\n\n  Contributed by @lutaok\n\n## v1.8.2 (2024-06-20)\n\n### CLI\n\n#### Bug fixes\n\n- Fix [#3201](https://github.com/biomejs/biome/issues/3201) by correctly injecting the source code of the file when printing the diagnostics. Contributed by @ematipico\n- Fix [#3179](https://github.com/biomejs/biome/issues/3179) where comma separators are not correctly removed after running `biome migrate` and thus choke the parser. Contributed by @Sec-ant\n- Fix [#3232](https://github.com/biomejs/biome/issues/3232) by correctly using the colors set by the user. Contributed by @ematipico\n\n#### Enhancement\n\n- Reword the reporter message `No fixes needed` to `No fixes applied`.\n\n  The former message is misleading when there're still errors or warnings in the files that should be taken care of manually. For example:\n\n  ```block\n  Checked 2 files in <TIME>. No fixes needed.\n  Found 2 errors.\n  ```\n\n  The new message suits better in these cases.\n\n  Contributed by @Sec-ant\n\n### Configuration\n\n#### Bug fixes\n\n- Don't conceal previous overrides ([#3176](https://github.com/biomejs/biome/issues/3176)).\n\n  Previously, each override inherited the unset configuration of the base configuration.\n  This means that setting a configuration in an override can be concealed by a subsequent override that inherits of the value from the base configuration.\n\n  For example, in the next example, `noDebugger` was disabled for the `index.js` file.\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"suspicious\": { \"noDebugger\": \"off\" }\n      }\n    },\n    \"overrides\": [\n      {\n        \"include\": [\"index.js\"],\n        \"linter\": {\n          \"rules\": {\n            \"suspicious\": { \"noDebugger\": \"warn\" }\n          }\n        }\n      }, {\n        \"include\": [\"index.js\"],\n        \"linter\": {\n          \"rules\": {\n            \"suspicious\": { \"noDoubleEquals\": \"off\" }\n          }\n        }\n      }\n    ]\n  }\n  ```\n\n  The rule is now correctly enabled for the `index.js` file.\n\n  Contributed by @Conaclos\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#3103](https://github.com/biomejs/biome/issues/3103) by correctly resolving CSS formatter options. Contributed by @ah-yu\n- Fix [#3192](https://github.com/biomejs/biome/issues/3192) don't add an extra whitespace within :has. Contributed by @denbezrukov\n\n### JavaScript APIs\n\n#### Bug fixes\n\n- Fix a regression introduced by the release of `v1.8.0`\n\n### Linter\n\n#### New features\n\n- Add [nursery/noSubstr](https://biomejs.dev/linter/rules/no-substr/). Contributed by @chansuke\n\n- Add [nursery/useConsistentCurlyBraces](https://biomejs.dev/linter/rules/use-consistent-curly-braces/). Contributed by @dyc3\n\n- Add [nursery/useValidAutocomplete](https://biomejs.dev/linter/rules/use-valid-autocomplete/). Contributed by @unvalley\n\n#### Enhancements\n\n- Add a code action for [noUselessCatch](https://biomejs.dev/linter/rules/no-useless-catch/). Contributed by @chansuke\n\n#### Bug fixes\n\n- Add [nursery/noShorthandPropertyOverrides](https://biomejs.dev/linter/rules/no-shorthand-property-overrides). [#2958](https://github.com/biomejs/biome/issues/2958) Contributed by @neokidev\n- Fix [[#3084](https://github.com/biomejs/biome/issues/3084)] false positive by correctly recognize parenthesized return statement. Contributed by @unvalley\n- [useImportExtensions](https://biomejs.dev/linter/rules/use-import-extensions/) now suggests a correct fix for `import '.'` and `import './.'`. Contributed by @minht11\n- Fix [useDateNow](https://biomejs.dev/linter/rules/use-date-now/) false positive when new Date object has arguments `new Date(0).getTime()`. Contributed by @minht11.\n- The [`noUnmatchableAnbSelector`](https://biomejs.dev/linter/rules/no-unmatchable-anb-selector/) rule is now able to catch unmatchable `an+b` selectors like `0n+0` or `-0n+0`. Contributed by @Sec-ant.\n- The [`useHookAtTopLevel`](https://biomejs.dev/linter/rules/use-hook-at-top-level/) rule now recognizes properties named as hooks like `foo.useFoo()`. Contributed by @ksnyder9801\n- Fix [#3092](https://github.com/biomejs/biome/issues/3092), prevent warning for `Custom properties (--*)`. Contributed by @chansuke\n- Fix a false positive in the [`useLiteralKeys`](https://biomejs.dev/linter/rules/use-literal-keys/) rule. ([#3160](https://github.com/biomejs/biome/issues/3160))\n\n  This rule now ignores the following kind of computed member name:\n\n  ```js\n  const a = {\n    [`line1\n    line2`]: true,\n  };\n  ```\n\n  Contributed by @Sec-ant\n\n- The [noUnknownProperty](https://biomejs.dev/linter/rules/no-unknown-property/) rule now ignores the `composes` property often used in css modules. [#3000](https://github.com/biomejs/biome/issues/3000) Contributed by @chansuke\n\n- Fix false positives of the [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/) rule.\n\n  The component itself is considered stable when it is used recursively inside a hook closure defined inside of it:\n\n  ```jsx\n  import { useMemo } from \"react\";\n\n  function MyRecursiveComponent() {\n    // MyRecursiveComponent is stable, we don't need to add it to the dependencies list.\n    const children = useMemo(() => <MyRecursiveComponent />, []);\n    return <div>{children}</div>;\n  }\n  ```\n\n  Also, `export default function` and `export default class` are considered stable now because they can only appear at the top level of a module.\n\n  Contributed by @Sec-ant\n\n- Fix missing `withDefaults` macro in vue files for globals variables. Contributed by @Shyam-Chen\n\n### Parser\n\n#### Bug fixes\n\n- Fix CSS modules settings mapping. Contributed by @denbezrukov\n\n## v1.8.1 (2024-06-10)\n\n### CLI\n\n#### Bug fixes\n\n- Fix [#3069](https://github.com/biomejs/biome/issues/3069), prevent overwriting paths when using `--staged` or `--changed` options. Contributed by @unvalley\n- Fix a case where the file link inside a diagnostic wasn't correctly displayed inside a terminal run by VSCode. Contributed by @uncenter\n\n### Configuration\n\n#### Bug fixes\n\n- Fix [#3067](https://github.com/biomejs/biome/issues/3067), by assigning the correct default value to `indentWidth`. Contributed by @ematipico\n\n### Formatter\n\n#### Bug fixes\n- Fix the bug where whitespace after the & character in CSS nesting was incorrectly trimmed, ensuring proper targeting of child classes [#3061](https://github.com/biomejs/biome/issues/3061). Contributed by @denbezrukov\n- Fix [#3068](https://github.com/biomejs/biome/issues/3068) where the CSS formatter was inadvertently converting variable declarations and function calls to lowercase. Contributed by @denbezrukov\n- Fix the formatting of CSS grid layout properties. Contributed by @denbezrukov\n\n### Linter\n\n#### New features\n\n- Add [noUnknownPseudoClass](https://biomejs.dev/linter/rules/no-unknown-pseudo-class/). Contributed by  @tunamaguro\n\n#### Bug fixes\n\n- The `noEmptyBlock` css lint rule now treats empty blocks containing comments as valid ones. Contributed by @Sec-ant\n\n- [useLiteralKeys](https://biomejs.dev/linter/rules/use-literal-keys/) no longer reports quoted member names ([#3085](https://github.com/biomejs/biome/issues/3085)).\n\n  Previously [useLiteralKeys](https://biomejs.dev/linter/rules/use-literal-keys/) reported quoted member names that can be unquoted.\n  For example, the rule suggested the following fix:\n\n  ```diff\n  - const x = { \"prop\": 0 };\n  + const x = { prop: 0 };\n  ```\n\n  This conflicted with the option [quoteProperties](https://biomejs.dev/reference/configuration/#javascriptformatterquoteproperties) of our formatter.\n\n  The rule now ignores quoted member names.\n\n  Contributed by @Conaclos\n\n- [noEmptyInterface](https://biomejs.dev/linter/rules/no-empty-interface/) now ignores empty interfaces in ambient modules ([#3110](https://github.com/biomejs/biome/issues/3110)). Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) and [noUnusedFunctionParameters](https://biomejs.dev/linter/rules/no-unused-function-parameters/) no longer report the parameters of a constructor type ([#3135](https://github.com/biomejs/biome/issues/3135)).\n\n  Previously, `arg` was reported as unused in a constructor type like:\n\n  ```ts\n  export type Classlike = new (arg: unknown) => string;\n  ```\n\n  Contributed by @Conaclos\n\n- [noStringCaseMismatch](https://biomejs.dev/linter/rules/no-string-case-mismatch/) now ignores escape sequences ([#3134](https://github.com/biomejs/biome/issues/3134)).\n\n  The following code is no longer reported by the rule:\n\n  ```js\n  s.toUpperCase() === \"\\u001b\";\n  ```\n\n  Contributed by @Conaclos\n\n### Parser\n\n#### Bug fixes\n\n- Implemented CSS Unknown At-Rule parsing, allowing the parser to gracefully handle unsupported or unrecognized CSS at-rules. Contributed by @denbezrukov\n- Fix [#3055](https://github.com/biomejs/biome/issues/3055) CSS: Layout using named grid lines is now correctly parsed. Contributed by @denbezrukov\n- Fix [#3091](https://github.com/biomejs/biome/issues/3091). Allows the parser to handle nested style rules and at-rules properly, enhancing the parser's compatibility with the CSS Nesting Module. Contributed by @denbezrukov\n\n## 1.8.0 (2024-06-04)\n\n### Analyzer\n\n#### New features\n\n- Allow suppression comments to suppress individual instances of rules. This is\n  used for the lint rule `useExhaustiveDependencies`, which is now able to\n  suppress specific dependencies. Fixes #2509. Contributed by @arendjr\n\n#### Enhancements\n\n- Assume `Astro` object is always a global when processing `.astro` files. Contributed by @minht11\n- Assume Vue compiler macros are globals when processing `.vue` files. ([#2771](https://github.com/biomejs/biome/pull/2771)) Contributed by @dyc3\n\n### CLI\n\n#### New features\n\n- New `clean` command. Use this new command to clean after the `biome-logs` directory, and remove all the log files.\n\n  ```shell\n  biome clean\n  ```\n\n- Add two new options `--only` and `--skip` to the command `biome lint` ([#58](https://github.com/biomejs/biome/issues/58)).\n\n  The `--only` option allows you to run a given rule or rule group,\n  For example, the following command runs only the `style/useNamingConvention` and `style/noInferrableTypes` rules.\n  If the rule is disabled in the configuration, then its severity level is set to `error` for a recommended rule or `warn` otherwise.\n\n  ```shell\n  biome lint --only=style/useNamingConvention --only=style/noInferrableTypes\n  ```\n\n  Passing a group does not change the severity level of the rules in the group.\n  All the disabled rules in the group will remain disabled.\n  To ensure that the group is run, the `recommended` field of the group is enabled.\n  The `nursery` group cannot be passed, as no rules are enabled by default in the nursery group.\n\n  The `--skip` option allows you to skip the execution of a given group or a given rule.\n  For example, the following command skips the `style` group and the `suspicious/noExplicitAny` rule.\n\n  ```shell\n  biome lint --skip=style --skip=suspicious/noExplicitAny\n  ```\n\n  You can also use `--only` and `--skip` together. `--skip` overrides `--only`.\n  The following command executes only the rules from the `style` group, but the `style/useNamingConvention` rule.\n\n  ```shell\n  biome lint --only=style --skip=style/useNamingConvention\n  ```\n\n  These options are compatible with other options such as `--write` (previously `--apply`), and `--reporter`.\n\n  Contributed by @Conaclos\n\n- Add new command `biome clean`. Use this command to purge all the logs emitted by the Biome daemon. This command is really useful, because the Biome daemon tends\n  log many files and contents during its lifecycle. This means that if your editor is open for hours (or even days), the `biome-logs` folder could become quite heavy. Contributed by @ematipico\n\n- Add support for formatting and linting CSS files from the CLI. These operations are **opt-in** for the time being.\n\n  If you don't have a configuration file, you can enable these features with `--css-formatter-enabled` and `--css-linter-enabled`:\n\n  ```shell\n  biome check --css-formatter-enabled=true --css-linter-enabled=true ./\n  ```\n  Contributed by @ematipico\n\n- Add new CLI options to control the CSS formatting. Check the [CLI reference page](https://biomejs.dev/reference/cli/) for more details. Contributed by @ematipico\n\n- Add new options `--write`, `--fix` (alias of `--write`) and `--unsafe` to the command `biome lint` and `biome check`.\n  Add a new option `--fix` (alias of `--write`) to the command `biome format` and `biome migrate`.\n\n  ```shell\n  biome <lint|check> --<write|fix> [--unsafe]\n  biome format --<write|fix>\n  biome migrate --<write|fix>\n  ```\n\n  The `biome <lint|check> --<write|fix>` has the same behavior as `biome <lint|check> --apply`.\n  The `biome <lint|check> --<write|fix> --unsafe` has the same behavior as `biome <lint|check> --apply-unsafe`.\n  The `biome format --fix` has the same behavior as `biome format --write`.\n  The `biome migrate --fix` has the same behavior as `biome migrate --write`.\n\n  This change allows these commands to write modifications in the same options.\n  With this change, the `--apply` and `--apply-unsafe` options are deprecated.\n\n  Contributed by @unvalley\n\n#### Enhancements\n\n- Biome now executes commands (lint, format, check and ci) on the working directory by default. [#2266](https://github.com/biomejs/biome/issues/2266) Contributed by @unvalley\n\n  ```diff\n  - biome check .\n  + biome check    # You can run the command without the path\n  ```\n\n- `biome migrate eslint` now tries to convert ESLint ignore patterns into Biome ignore patterns.\n\n  ESLint uses [gitignore patterns](https://git-scm.com/docs/gitignore#_pattern_format).\n  Biome now tries to convert these patterns into Biome ignore patterns.\n\n  For example, the gitignore pattern `/src` is a relative path to the file in which it appears.\n  Biome now recognizes this and translates this pattern to `./src`.\n\n  Contributed by @Conaclos\n\n- `biome migrate eslint` now supports the `eslintIgnore` field in `package.json`.\n\n  ESLint allows the use of `package.json` as an ESLint configuration file.\n  ESLint supports two fields: `eslintConfig` and `eslintIgnore`.\n  Biome only supported the former. It now supports both.\n\n  Contributed by @Conaclos\n\n- `biome migrate eslint` now propagates NodeJS errors to the user.\n\n  This will help users to identify why Biome is unable to load some ESLint configurations.\n\n  Contributed by @Conaclos\n\n- Add a new `--reporter` called `summary`. This reporter will print diagnostics in a different way, based on the tools (formatter, linter, etc.) that are executed.\n  Import sorting and formatter shows the name of the files that require formatting. Instead, the linter will group the number of rules triggered and the number of errors/warnings:\n\n  ```\n  Formatter ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n  The following files needs to be formatted:\n  main.ts\n  index.ts\n\n  Organize Imports ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n  The following files needs to have their imports sorted:\n  main.ts\n  index.ts\n\n  Analyzer ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n  Some analyzer rules were triggered\n\n  Rule Name                                               Diagnostics\n  lint/suspicious/noImplicitAnyLet                        12 (12 error(s), 0 warning(s), 0 info(s))\n  lint/suspicious/noDoubleEquals                          8 (8 error(s), 0 warning(s), 0 info(s))\n  lint/suspicious/noRedeclare                             12 (12 error(s), 0 warning(s), 0 info(s))\n  lint/suspicious/noDebugger                              20 (20 error(s), 0 warning(s), 0 info(s))\n  ```\n  Contributed by @ematipico\n\n- `biome ci` now enforces printing the output using colours. If you were previously using `--colors=force`, you can remove it because it's automatically set. Contributed by @ematipico\n- Add a new `--reporter` called `github`. This reporter will print diagnostics using [GitHub workflow commands](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#about-workflow-commands):\n\n  ```\n  ::error title=lint/suspicious/noDoubleEquals,file=main.ts,line=4,endLine=4,col=3,endColumn=5::Use === instead of ==\n  ::error title=lint/suspicious/noDebugger,file=main.ts,line=6,endLine=6,col=1,endColumn=9::This is an unexpected use of the debugger statement.\n  ::error title=lint/nursery/noEvolvingAny,file=main.ts,line=8,endLine=8,col=5,endColumn=6::This variable's type is not allowed to evolve implicitly, leading to potential any types.\n  ```\n  Contributed by @ematipico\n- Add a new `--reporter` called `junit`. This reporter will print diagnostics using [GitHub workflow commands](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#about-workflow-commands):\n\n  ```xml\n  <?xml version=\"1.0\" encoding=\"UTF-8\"?>\n  <testsuites name=\"Biome\" tests=\"16\" failures=\"16\" errors=\"20\" time=\"<TIME>\">\n    <testsuite name=\"main.ts\" tests=\"1\" disabled=\"0\" errors=\"0\" failures=\"1\" package=\"org.biome\">\n        <testcase name=\"org.biome.lint.suspicious.noDoubleEquals\" line=\"4\" column=\"3\">\n            <failure message=\"Use === instead of ==. == is only allowed when comparing against `null`\">line 3, col 2, Use === instead of ==. == is only allowed when comparing against `null`</failure>\n        </testcase>\n    </testsuite>\n    <testsuite name=\"main.ts\" tests=\"1\" disabled=\"0\" errors=\"0\" failures=\"1\" package=\"org.biome\">\n        <testcase name=\"org.biome.lint.suspicious.noDebugger\" line=\"6\" column=\"1\">\n            <failure message=\"This is an unexpected use of the debugger statement.\">line 5, col 0, This is an unexpected use of the debugger statement.</failure>\n        </testcase>\n    </testsuite>\n    <testsuite name=\"main.ts\" tests=\"1\" disabled=\"0\" errors=\"0\" failures=\"1\" package=\"org.biome\">\n        <testcase name=\"org.biome.lint.nursery.noEvolvingAny\" line=\"8\" column=\"5\">\n            <failure message=\"This variable&apos;s type is not allowed to evolve implicitly, leading to potential any types.\">line 7, col 4, This variable&apos;s type is not allowed to evolve implicitly, leading to potential any types.</failure>\n        </testcase>\n    </testsuite>\n  </testsuites>\n  ```\n  Contributed by @ematipico\n\n#### Bug fixes\n\n- Fix  [#3024](https://github.com/biomejs/biome/issues/3024), where running `biome init` would create `biome.json` even if `biome.jsonc` already exists.  Contributed by @minht11\n\n### Configuration\n\n#### New features\n\n- Add an rule option `fix` to override the code fix kind of a rule ([#2882](https://github.com/biomejs/biome/issues/2882)).\n\n  A rule can provide a safe or an **unsafe** code **action**.\n  You can now tune the kind of code actions thanks to the `fix` option.\n  This rule option takes a value among:\n\n  - `none`: the rule no longer emits code actions.\n  - `safe`: the rule emits safe code action.\n  - `unsafe`: the rule emits unsafe code action.\n\n  The following configuration disables the code actions of `noUnusedVariables`, makes the emitted code actions of `style/useConst` and `style/useTemplate` unsafe and safe respectively.\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"correctness\": {\n          \"noUnusedVariables\": {\n            \"level\": \"error\",\n            \"fix\": \"none\"\n          },\n          \"style\": {\n            \"useConst\": {\n              \"level\": \"warn\",\n              \"fix\": \"unsafe\"\n            },\n            \"useTemplate\": {\n              \"level\": \"warn\",\n              \"fix\": \"safe\"\n            }\n          }\n        }\n      }\n    }\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- Add option `javascript.linter.enabled` to control the linter for JavaScript (and its super languages) files. Contributed by @ematipico\n- Add option `json.linter.enabled` to control the linter for JSON (and its super languages) files. Contributed by @ematipico\n- Add option `css.linter.enabled` to control the linter for CSS (and its super languages) files. Contributed by @ematipico\n- Add option `css.formatter`, to control the formatter options for CSS (and its super languages) files. Contributed by @ematipico\n- You can now change the severity of lint rules down to `\"info\"`. The `\"info\"` severity doesn't emit error codes, and it isn't affected by other options like `--error-on-warnings`:\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"suspicious\": {\n          \"noDebugger\": \"info\"\n        }\n      }\n    }\n  }\n  ```\n  Contributed by @ematipico\n\n#### Enhancements\n\n- The `javascript.formatter.trailingComma` option is deprecated and renamed to `javascript.formatter.trailingCommas`. The corresponding CLI option `--trailing-comma` is also deprecated and renamed to `--trailing-commas`. Details can be checked in [#2492](https://github.com/biomejs/biome/pull/2492). Contributed by @Sec-ant\n\n#### Bug fixes\n\n- Fix a bug where if the formatter was disabled at the language level, it could be erroneously enabled by an\n  override that did not specify the formatter section [#2924](https://github.com/biomejs/biome/issues/2924). Contributed by @dyc3\n- Fix [#2990](https://github.com/biomejs/biome/issues/2990), now Biome doesn't add a trailing comma when formatting `biome.json`. Contributed by @dyc3\n\n### Editors\n\n#### New features\n\n- Add support for LSP Workspaces\n\n#### Enhancements\n\n- The LSP doesn't crash anymore when the configuration file contains errors. If the configuration contains errors, Biome now shows a pop-up to the user, and it will only parse files using the default configuration.\n  Formatting and linting is disabled until the configuration file is fixed. Contributed by @ematipico\n\n#### Bug fixes\n\n- Fixes [#2781](https://github.com/biomejs/biome/issues/2781), by correctly computing the configuration to apply to a specific file. Contributed by @ematipico\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#2470](https://github.com/biomejs/biome/issues/2470) by avoid introducing linebreaks in single line string interpolations. Contributed by @ah-yu\n- Resolve deadlocks by narrowing the scope of locks. Contributed by @mechairoi\n- Fix [#2782](https://github.com/biomejs/biome/issues/2782) by computing the enabled rules by taking the override settings into consideration. Contributed by @ematipico\n- Fix [https://github.com/biomejs/biome/issues/2877] by correctly handling line terminators in JSX string. Contributed by @ah-yu\n\n### Linter\n\n#### Promoted rules\n\nNew rules are incubated in the nursery group. Once stable, we promote them to a stable group. The following rules are promoted:\n\n- [useImportRestrictions](https://biomejs.dev/linter/rules/use-import-restrictions/)\n- [noNodejsModules](https://biomejs.dev/linter/rules/no-nodejs-modules/)\n- [useArrayLiterals](https://biomejs.dev/linter/rules/use-array-literals/)\n- [noConstantMathMinMaxClamp](https://biomejs.dev/linter/rules/no-constant-math-min-max-clamp/)\n- [noFlatMapIdentity](https://biomejs.dev/linter/rules/no-flat-map-identity/)\n\n#### New features\n\n- Add [nursery/useDateNow](https://biomejs.dev/linter/rules/use-date-now/). Contributed by @minht11\n- Add [nursery/useErrorMessage](https://biomejs.dev/linter/rules/use-error-message/). Contributed by @minht11\n- Add [nursery/useThrowOnlyError](https://biomejs.dev/linter/rules/use-throw-only-error/). Contributed by @minht11\n- Add [nursery/useImportExtensions](https://biomejs.dev/linter/rules/use-import-extensions/). Contributed by @minht11\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) now supports an option to enforce custom conventions ([#1900](https://github.com/biomejs/biome/issues/1900)).\n\n  For example, you can enforce the use of a prefix for private class members:\n\n  ```json\n  {\n  \t\"linter\": {\n  \t\t\"rules\": {\n  \t\t\t\"style\": {\n  \t\t\t\t\"useNamingConvention\": {\n  \t\t\t\t\t\"level\": \"error\",\n  \t\t\t\t\t\"options\": {\n  \t\t\t\t\t\t\"conventions\": [\n  \t\t\t\t\t\t\t{\n  \t\t\t\t\t\t\t\t\"selector\": {\n  \t\t\t\t\t\t\t\t\t\"kind\": \"classMember\",\n  \t\t\t\t\t\t\t\t\t\"modifiers\": [\"private\"]\n  \t\t\t\t\t\t\t\t},\n  \t\t\t\t\t\t\t\t\"match\": \"_(.*)\",\n                  \"formats\": [\"camelCase\"]\n  \t\t\t\t\t\t\t}\n  \t\t\t\t\t\t]\n  \t\t\t\t\t}\n  \t\t\t\t}\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n  ```\n\n  Please, find more details in the [rule documentation](https://biomejs.dev/linter/rules/use-naming-convention/#options).\n\n  Contributed by @Conaclos\n\n- Add [nursery/useNumberToFixedDigitsArgument](https://biomejs.dev/linter/rules/use-number-to-fixed-digits-argument/).\n  Contributed by @minht11\n\n- Add [nursery/useThrowNewError](https://biomejs.dev/linter/rules/use-throw-new-error/).\n  Contributed by @minht11\n- Add [nursery/useTopLevelRegex](https://biomejs.dev/linter/rules/use-top-level-regex), which enforces defining regular expressions at the top level of a module. [#2148](https://github.com/biomejs/biome/issues/2148) Contributed by @dyc3.\n- Add [nursery/noCssEmptyBlock](https://biomejs.dev/linter/rules/no-css-empty-block). [#2513](https://github.com/biomejs/biome/pull/2513) Contributed by @togami2864\n- Add [nursery/noDuplicateAtImportRules](https://biomejs.dev/linter/rules/no-duplicate-at-import-rules). [#2658](https://github.com/biomejs/biome/pull/2658) Contributed by @DerTimonius\n- Add [nursery/noDuplicateFontNames](https://biomejs.dev/linter/rules/no-duplicate-font-names). [#2308](https://github.com/biomejs/biome/pull/2308) Contributed by @togami2864\n- Add [nursery/noDuplicateSelectorsKeyframeBlock](https://biomejs.dev/linter/rules/no-duplicate-selectors-keyframe-block). [#2534](https://github.com/biomejs/biome/pull/2534) Contributed by @isnakode\n- Add [nursery/noImportantInKeyframe](https://biomejs.dev/linter/rules/no-important-in-keyframe). [#2542](https://github.com/biomejs/biome/pull/2542) Contributed by @isnakode\n- Add [nursery/noInvalidPositionAtImportRule](https://biomejs.dev/linter/rules/no-invalid-position-at-import-rule). [#2717](https://github.com/biomejs/biome/issues/2717) Contributed by @t-shiratori\n- Add [nursery/noUnknownFunction](https://biomejs.dev/linter/rules/no-unknown-function). [#2570](https://github.com/biomejs/biome/pull/2570) Contributed by @neokidev\n- Add [nursery/noUnknownMediaFeatureName](https://biomejs.dev/linter/rules/no-unknown-media-feature-name). [#2751](https://github.com/biomejs/biome/issues/2751) Contributed by @Kazuhiro-Mimaki\n- Add [nursery/noUnknownProperty](https://biomejs.dev/linter/rules/no-unknown-property). [#2755](https://github.com/biomejs/biome/pull/2755) Contributed by @chansuke\n- Add [nursery/noUnknownPseudoElement](https://biomejs.dev/linter/rules/no-unknown-selector-pseudo-element). [#2655](https://github.com/biomejs/biome/issues/2655) Contributed by @keita-hino\n- Add [nursery/noUnknownUnit](https://biomejs.dev/linter/rules/no-unknown-unit). [#2535](https://github.com/biomejs/biome/issues/2535) Contributed by @neokidev\n- Add [nursery/noUnmatchableAnbSelector](https://biomejs.dev/linter/rules/no-unmatchable-anb-selector). [#2706](https://github.com/biomejs/biome/issues/2706) Contributed by @togami2864\n- Add [nursery/useGenericFontNames](https://biomejs.dev/linter/rules/use-generic-font-names). [#2573](https://github.com/biomejs/biome/pull/2573) Contributed by @togami2864\n- Add [nursery/noYodaExpression](https://biomejs.dev/linter/rules/no-yoda-expression/). Contributed by @michellocana\n- Add [nursery/noUnusedFunctionParameters](https://biomejs.dev/linter/rules/no-unused-function-parameters/) Contributed by @printfn\n- Add [nursery/UseSemanticElements](https://biomejs.dev/linter/rules/use-semantic-elements/). Contributed by @fujiyamaorange\n\n#### Enhancements\n\n- Add a code action for [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type/) and improve the diagnostics.\n\n  The rule now suggests using `undefined` instead of `void` in confusing places.\n  The diagnosis is also clearer.\n\n  Contributed by @Conaclos\n- Improve code action for [nursery/noUselessUndefinedInitialization](https://biomejs.dev/linter/rules/no-useless-undefined-initialization/) to handle comments.\n\n  The rule now places inline comments after the declaration statement, instead of removing them.\n  The code action is now safe to apply.\n\n  Contributed by @lutaok\n\n- Make [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/) report duplicate dependencies. Contributed by @tunamaguro\n\n- Rename `noEvolvingAny` into `noEvolvingTypes` ([#48](https://github.com/biomejs/website/issues/48)). Contributed by @Conaclos\n\n#### Bug fixes\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) and [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports) now correctly handle import namespaces ([#2796](https://github.com/biomejs/biome/issues/2796)).\n\n  Previously, Biome bound unqualified type to import namespaces.\n  Import namespaces can only be used as qualified names in a type (ambient) context.\n\n  ```ts\n  // Unused import\n  import * as Ns1 from \"\";\n  // This doesn't reference the import namespace `Ns1`\n  type T1 = Ns1; // Undeclared variable `Ns1`\n\n  // Unused import\n  import type * as Ns2 from \"\";\n  // This doesn't reference the import namespace `Ns2`\n  type T2 = Ns2; // Undeclared variable `Ns2`\n\n  import type * as Ns3 from \"\";\n  // This references the import namespace because it is a qualified name.\n  type T3 = Ns3.Inner;\n  // This also references the import namespace.\n  export type { Ns3 }\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) now correctly handle ambient computed member names ([#2975](https://github.com/biomejs/biome/issues/2975)).\n\n  A constant can be imported as a type and used in a computed member name of a member signature.\n  Previously, Biome was unable to bind the value imported as a type to the computed member name.\n\n  ```ts\n  import type { NAME } from \"./constants.js\";\n  type X = { [NAME]: number };\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) now ignores `this` in JSX components ([#2636](https://github.com/biomejs/biome/issues/2636)).\n\n  The rule no longer reports `this` as undeclared in following code.\n\n  ```jsx\n  import { Component } from 'react';\n\n  export class MyComponent extends Component {\n    render() {\n      return <this.foo />\n    }\n  }\n  ```\n\n  Contributed by @printfn and @Conaclos\n\n- `useJsxKeyInIterable` now handles more cases involving fragments. See the snippets below. Contributed by @dyc3\n```jsx\n// valid\n[].map((item) => {\n\treturn <>{item.condition ? <div key={item.id} /> : <div key={item.id}>foo</div>}</>;\n});\n\n// invalid\n[].map((item) => {\n\treturn <>{item.condition ? <div /> : <div>foo</div>}</>;\n});\n```\n- `noExcessiveNestedTestSuites` no longer erroneously alerts on `describe` calls that are not invoking the global `describe` function. [#2599](https://github.com/biomejs/biome/issues/2599) Contributed by @dyc3\n```js\n// now valid\nz.object({})\n  .describe('')\n  .describe('')\n  .describe('')\n  .describe('')\n  .describe('')\n  .describe('');\n```\n- `noEmptyBlockStatements` no longer reports empty constructors using typescript parameter properties. [#3005](https://github.com/biomejs/biome/issues/3005) Contributed by @dyc3\n- `noEmptyBlockStatements` no longer reports empty private or protected constructors. Contributed by @dyc3\n\n- [noExportsInTest](https://biomejs.dev/linter/rules/no-exports-in-test/) rule no longer treats files with in-source testing as test files https://github.com/biomejs/biome/issues/2859. Contributed by @ah-yu\n- [useSortedClasses](https://biomejs.dev/linter/rules/use-sorted-classes/) now keeps leading and trailing spaces when applying the code action inside template literals:\n\n  ```\n  i Unsafe fix: Sort the classes.\n\n    1 1 │   <>\n    2   │ - → <div·class={`${variable}·px-2·foo·p-4·bar`}/>\n      2 │ + → <div·class={`${variable}·foo·bar·p-4·px-2`}/>\n    3 3 │   \t<div class={`px-2 foo p-4 bar ${variable}`}/>\n    4 4 │   </>\n  ```\n- [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/) is correctly triggered when running `biome ci`. Contributed by @ematipico\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) no longer panics when a certain combination of characters is typed. Contributed by @ematipico\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) no logger alerts on `arguments` object in a function scope. Contributed by @ah-yu\n### Parser\n\n#### Enhancements\n\n- `lang=\"tsx\"` is now supported in Vue Single File Components. [#2765](https://github.com/biomejs/biome/issues/2765) Contributed by @dyc3\n\n#### Bug fixes\n\n- The `const` modifier for type parameters is now accepted for TypeScript `new` signatures ([#2825](https://github.com/biomejs/biome/issues/2825)).\n\n  The following code is now correctly parsed:\n\n  ```ts\n  interface I {\n    new<const T>(x: T): T\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- Some invalid TypeScript syntax caused the Biome parser to crash.\n\n  The following invalid syntax no longer causes the Biome parser to crash:\n\n  ```ts\n  declare using x: null;\n  declare qwait using x: null;\n  ```\n\n  Contributed by @Conaclos\n\n## 1.7.3 (2024-05-06)\n\n### CLI\n\n#### Bug fixes\n\n- The [stdin-file-path](https://biomejs.dev/guides/integrate-in-editor/#use-stdin) option now works correctly for Astro/Svelte/Vue files ([#2686](https://github.com/biomejs/biome/pull/2686))\n\n  Fix [#2225](https://github.com/biomejs/biome/issues/2225) where lint output become empty for Vue files.\n\n  Contributed by @tasshi-me\n\n- `biome migrate eslint` now correctly resolve `@scope/eslint-config` ([#2705](https://github.com/biomejs/biome/issues/2705)). Contributed by @Conaclos\n\n### Linter\n\n#### New features\n\n- Add [nursery/noUselessStringConcat](https://biomejs.dev/linter/rules/no-useless-string-concat/).\n- Add [nursery/useExplicitLengthCheck](https://biomejs.dev/linter/rules/use-explicit-length-check/). Contributed by @minht11\n\n- `useExhaustiveDependencies` now recognizes (some) dependencies that change on\n  every render ([#2374](https://github.com/biomejs/biome/issues/2374)).\n  Contributed by @arendjr\n\n#### Bug fixes\n\n- [noBlankTarget](https://biomejs.dev/linter/rules/no-blank-target/) no longer hangs when applying a code fix ([#2675](https://github.com/biomejs/biome/issues/2675)).\n\n  Previously, the following code made Biome hangs when applying a code fix.\n\n  ```jsx\n  <a href=\"https://example.com\" rel=\"\" target=\"_blank\"></a>\n  ```\n\n  Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) no longer panics on conditional type ([#2659](https://github.com/biomejs/biome/issues/2659)).\n\n  This is a regression introduced by [#2394](https://github.com/biomejs/biome/issues/2394).\n  This regression makes `noRedeclare` panics on every conditional types with `infer` bindings.\n\n  Contributed by @Conaclos\n\n- [noUnusedLabels](https://biomejs.dev/linter/rules/no-unused-labels/) and [noConfusingLabels](https://biomejs.dev/linter/rules/no-confusing-labels/) now ignore svelte reactive statements ([#2571](https://github.com/biomejs/biome/issues/2571)).\n\n  The rules now ignore reactive Svelte blocks in Svelte components.\n\n  ```svelte\n  <script>\n  $: { /* reactive block */ }\n  </script>\n  ```\n\n  Contributed by @Conaclos\n\n- [useExportType](https://biomejs.dev/linter/rules/use-export-type/) no longer removes leading comments ([#2685](https://github.com/biomejs/biome/issues/2685)).\n\n  Previously, `useExportType` removed leading comments when it factorized the `type` qualifier.\n  It now provides a code fix that preserves the leading comments:\n\n  ```diff\n  - export {\n  + export type {\n      /**leading comment*/\n  -   type T\n  +   T\n    }\n  ```\n\n  Contributed by @Conaclos\n\n- [useJsxKeyInIterable](https://biomejs.dev/linter/rules/use-jsx-key-in-iterable/) no longer reports false positive when iterating on non-jsx items ([#2590](https://github.com/biomejs/biome/issues/2590)).\n\n  The following snippet of code no longer triggers the rule:\n\n  ```jsx\n  <>{data.reduce((total, next) => total + next, 0)}</>\n  ```\n\n  Contributed by @dyc3\n\n- Fix typo by renaming `useConsistentBuiltinInstatiation` to `useConsistentBuiltinInstantiation`\n  Contributed by @minht11\n- Fix the rule `useSingleCaseStatement` including `break` statements when counting the number of statements in a `switch` statement (#2696)\n\n\n## 1.7.2 (2024-04-30)\n\n### Analyzer\n\n#### Bug fixes\n\n- Import sorting now ignores side effect imports ([#817](https://github.com/biomejs/biome/issues/817)).\n\n  A side effect import consists now in its own group.\n  This ensures that side effect imports are not reordered.\n\n  Here is an example of how imports are now sorted:\n\n  ```diff\n    import \"z\"\n  - import { D } from \"d\";\n    import { C } from \"c\";\n  + import { D } from \"d\";\n    import \"y\"\n    import \"x\"\n  - import { B } from \"b\";\n    import { A } from \"a\";\n  + import { B } from \"b\";\n    import \"w\"\n  ```\n\n  Contributed by @Conaclos\n\n- Import sorting now adds spaces where needed ([#1665](https://github.com/biomejs/biome/issues/1665))\n  Contributed by @Conaclos\n\n### CLI\n\n#### Bug fixes\n\n- `biome migrate eslint` now handles cyclic references.\n\n  Some plugins and configurations export objects with cyclic references.\n  This causes `biome migrate eslint` to fail or ignore them.\n  These edge cases are now handled correctly.\n\n  Contributed by @Conaclos\n\n### Formatter\n\n#### Bug fixes\n\n- Correctly handle placement of comments inside named import clauses. [#2566](https://github.com/biomejs/biome/pull/2566). Contributed by @ah-yu\n\n### Linter\n\n#### New features\n\n- Add [nursery/noReactSpecificProps](https://biomejs.dev/linter/rules/no-react-specific-props/).\n  Contributed by @marvin-j97\n\n- Add [noUselessUndefinedInitialization](https://biomejs.dev/linter/rules/no-useless-undefined-initialization/).\n  Contributed by @lutaok\n\n- Add [nursery/useArrayLiterals](https://biomejs.dev/linter/rules/use-array-literals/).\n  Contributed by @Kazuhiro-Mimaki\n\n- Add [nursery/useConsistentBuiltinInstatiation](https://biomejs.dev/linter/rules/use-consistent-builtin-instantiation/).\n  Contributed by @minht11\n\n- Add [nursery/useDefaultSwitchClause](https://biomejs.dev/linter/rules/use-default-switch-clause/).\n  Contributed by @michellocana\n\n#### Bug fixes\n\n- [noDuplicateJsonKeys](https://biomejs.dev/linter/rules/no-duplicate-json-keys/) no longer crashes when a JSON file contains an unterminated string ([#2357](https://github.com/biomejs/biome/issues/2357)).\n  Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) now reports redeclarations of parameters in a functions body ([#2394](https://github.com/biomejs/biome/issues/2394)).\n\n  The rule was unable to detect redeclarations of a parameter or a type parameter in the function body.\n  The following two redeclarations are now reported:\n\n  ```ts\n  function f<T>(a) {\n    type T = number; // redeclaration\n    const a = 0; // redeclaration\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) no longer reports overloads in object types ([#2608](https://github.com/biomejs/biome/issues/2608)).\n\n  The rule no longer report redeclarations in the following code:\n\n  ```ts\n  type Overloads = {\n    ({ a }: { a: number }): number,\n    ({ a }: { a: string }): string,\n  };\n  ```\n\n  Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) now merge default function export declarations and types ([#2372](https://github.com/biomejs/biome/issues/2372)).\n\n  The following code is no longer reported as a redeclaration:\n\n  ```ts\n  interface Foo {}\n  export default function Foo() {}\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) no longer reports variable-only and type-only exports ([#2637](https://github.com/biomejs/biome/issues/2637)).\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) no longer crash Biome when encountering a malformed conditional type ([#1695](https://github.com/biomejs/biome/issues/1695)).\n  Contributed by @Conaclos\n\n- [useConst](https://biomejs.dev/linter/rules/use-const/) now ignores a variable that is read before its assignment.\n\n  Previously, the rule reported the following example:\n\n  ```js\n  let x;\n  x; // read\n  x = 0; // write\n  ```\n\n  It is now correctly ignored.\n\n  Contributed by @Conaclos\n\n- [useShorthandFunctionType](https://biomejs.dev/linter/rules/use-shorthand-function-type/) now suggests correct code fixes when parentheses are required ([#2595](https://github.com/biomejs/biome/issues/2595)).\n\n  Previously, the rule didn't add parentheses when they were needed.\n  It now adds parentheses when the function signature is inside an array, a union, or an intersection.\n\n  ```diff\n  - type Union = { (): number } | string;\n  + type Union = (() => number) | string;\n  ```\n\n  Contributed by @Conaclos\n\n- [useTemplate](https://biomejs.dev/linter/rules/use-template/) now correctly escapes strings ([#2580](https://github.com/biomejs/biome/issues/2580)).\n\n  Previously, the rule didn't correctly escape characters preceded by an escaped character.\n\n  Contributed by @Conaclos\n\n- [noMisplacedAssertion](https://biomejs.dev/linter/rules/no-misplaced-assertion/) now allow these matchers\n\n  - `expect.any()`\n  - `expect.anything()`\n  - `expect.closeTo`\n  - `expect.arrayContaining`\n  - `expect.objectContaining`\n  - `expect.stringContaining`\n  - `expect.stringMatching`\n  - `expect.extend`\n  - `expect.addEqualityTesters`\n  - `expect.addSnapshotSerializer`\n\n  Contributed by @fujiyamaorange\n\n### Parser\n\n#### Bug fixes\n\n- The language parsers no longer panic on unterminated strings followed by a newline and a space ([#2606](https://github.com/biomejs/biome/issues/2606), [#2410](https://github.com/biomejs/biome/issues/2410)).\n\n  The following example is now parsed without making Biome panics:\n\n  ```\n  \"\n   \"\n  ```\n\n  Contributed by @Conaclos\n\n\n## 1.7.1 (2024-04-22)\n\n### Editors\n\n#### Bug fixes\n\n- Fix [#2403](https://github.com/biomejs/biome/issues/2403) by printing the errors in the client console. Contributed by @ematipico\n\n### Formatter\n\n#### Bug fixes\n\n- Add parentheses for the return expression that has leading multiline comments. [#2504](https://github.com/biomejs/biome/pull/2504). Contributed by @ah-yu\n\n- Correctly format dangling comments of continue statements. [#2555](https://github.com/biomejs/biome/pull/2555). Contributed by @ah-yu\n\n- Prevent comments from being eaten by the formatter [#2578](https://github.com/biomejs/biome/pull/2578). Now the comments won't be eaten for the following code:\n  ```js\n  console.log((a,b/* comment */));\n  ```\n  Contributed by @ah-yu\n\n- Correctly format nested union type to avoid reformatting issue. [#2628](https://github.com/biomejs/biome/pull/2628). Contributed by @ah-yu\n\n### Linter\n\n#### Bug fixes\n\n- Fix case where `jsxRuntime` wasn't being respected by `useImportType` rule ([#2473](https://github.com/biomejs/biome/issues/2473)).Contributed by @arendjr\n- Fix [#2460](https://github.com/biomejs/biome/issues/2460), where the rule `noUselessFragments` was crashing the linter in some cases. Now cases like these are correctly handled:\n  ```jsx\n  callFunction(<>{bar}</>)\n  ```\n  Contributed by @ematipico\n- Fix [#2366](https://github.com/biomejs/biome/issues/2366), where `noDuplicateJsonKeys` incorrectly computed the kes to highlight. Contributed by @ematipico\n#### Enhancements\n\n- The rule `noMisplacedAssertions` now considers valid calling `expect` inside `waitFor`:\n  ```js\n  import { waitFor } from '@testing-library/react';\n\n  await waitFor(() => {\n    expect(111).toBe(222);\n  });\n  ```\n  Contributed by @ematipico\n\n\n## 1.7.0 (2024-04-15)\n\n### Analyzer\n\n#### Bug fixes\n\n- Now Biome can detect the script language in Svelte and Vue script blocks more reliably ([#2245](https://github.com/biomejs/biome/issues/2245)). Contributed by @Sec-ant\n\n- `useExhaustiveDependencies` no longer reports recursive calls as missing\n  dependencies ([#2361](https://github.com/biomejs/biome/issues/2361)).\n  Contributed by @arendjr\n\n- `useExhaustiveDependencies` correctly reports missing dependencies declared\n  using function declarations ([#2362](https://github.com/biomejs/biome/issues/2362)).\n  Contributed by @arendjr\n\n- Biome now can handle `.svelte` and `.vue` files with `CRLF` as the end-of-line sequence. Contributed by @Sec-ant\n\n- `noMisplacedAssertion` no longer reports method calls by `describe`, `test`, `it` objects (e.g. `test.each([])()`) ([#2443](https://github.com/biomejs/biome/issues/2443)). Contributed by @unvalley.\n\n- Biome now can handle `.vue` files with [generic components](https://vuejs.org/api/sfc-script-setup#generics) ([#2456](https://github.com/biomejs/biome/issues/2456)).\n  ```vue\n  <script generic=\"T extends Record<string, any>\" lang=\"ts\" setup>\n  //...\n  </script>\n  ```\n  Contributed by @Sec-ant\n\n#### Enhancements\n\n- Complete the well-known file lists for JSON-like files. Trailing commas are allowed in `.jsonc` files by default. Some well-known files like `tsconfig.json` and `.babelrc` don't use the `.jsonc` extension but still allow comments and trailing commas. While others, such as `.eslintrc.json`, only allow comments. Biome is able to identify these files and adjusts the `json.parser.allowTrailingCommas` option accordingly to ensure they are correctly parsed. Contributed by @Sec-ant\n\n- Fix dedent logic inconsistent with prettier where the indent-style is space and the indent-width is not 2. Contributed by @mdm317\n\n### CLI\n\n#### New features\n\n- Add a command to migrate from ESLint\n\n  `biome migrate eslint` allows you to migrate an ESLint configuration to Biome.\n  The command supports [legacy ESLint configurations](https://eslint.org/docs/latest/use/configure/configuration-files) and [new flat ESLint configurations](https://eslint.org/docs/latest/use/configure/configuration-files-new).\n  Legacy ESLint configurations using the YAML format are not supported.\n\n  When loading a legacy ESLint configuration, Biome resolves the `extends` field.\n  It resolves both shared configurations and plugin presets!\n  To do this, it invokes _Node.js_.\n\n  Biome relies on the metadata of its rules to determine the [equivalent rule of an ESLint rule](https://biomejs.dev/linter/rules-sources/).\n  A Biome rule is either inspired or roughly identical to an ESLint rules.\n  By default, inspired and nursery rules are excluded from the migration.\n  You can use the CLI flags `--include-inspired` and `--include-nursery` to migrate them as well.\n\n  Note that this is a best-effort approach.\n  You are not guaranteed to get the same behavior as ESLint.\n\n  Given the following ESLint configuration:\n\n  ```json\n  {\n        \"ignore_patterns\": [\"**/*.test.js\"],\n        \"globals\": { \"var2\": \"readonly\" },\n        \"rules\": {\n            \"eqeqeq\": \"error\"\n        },\n        \"overrides\": [{\n            \"files\": [\"lib/*.js\"],\n            \"rules\": {\n              \"default-param-last\": \"off\"\n            }\n        }]\n  }\n  ```\n\n  `biome migrate eslint --write` changes the Biome configuration as follows:\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"recommended\": false,\n        \"suspicious\": {\n          \"noDoubleEquals\": \"error\"\n        }\n      }\n    },\n    \"javascript\": { \"globals\": [\"var2\"] },\n    \"overrides\": [{\n      \"include\": [\"lib/*.js\"],\n      \"linter\": {\n        \"rules\": {\n          \"style\": {\n            \"useDefaultParameterLast\": \"off\"\n          }\n        }\n      }\n    }]\n  }\n  ```\n\n  Also, if the working directory contains `.eslintignore`, then Biome migrates the glob patterns.\n  Nested `.eslintignore` in subdirectories and negated glob patterns are not supported.\n\n  If you find any issue, please don't hesitate to report them.\n\n  Contributed by @Conaclos\n\n- Added two new options to customise the emitted output of the CLI: `--reporter=json` and `--reporter=json-pretty`. With `--reporter=json`, the diagnostics and the\n  summary will be printed in the **terminal** in JSON format. With `--reporter=json-pretty`, you can print the same information, but formatted using the same options of your configuration.\n\n  NOTE: the shape of the JSON is considered experimental, and the shape of the JSON might change in the future.\n\n  <details>\n  <summary>Example of output when running `biome format` command</summary>\n  ```json\n  {\n    \"summary\": {\n      \"changed\": 0,\n      \"unchanged\": 1,\n      \"errors\": 1,\n      \"warnings\": 0,\n      \"skipped\": 0,\n      \"suggestedFixesSkipped\": 0,\n      \"diagnosticsNotPrinted\": 0\n    },\n    \"diagnostics\": [\n      {\n        \"category\": \"format\",\n        \"severity\": \"error\",\n        \"description\": \"Formatter would have printed the following content:\",\n        \"message\": [\n          {\n            \"elements\": [],\n            \"content\": \"Formatter would have printed the following content:\"\n          }\n        ],\n        \"advices\": {\n          \"advices\": [\n            {\n              \"diff\": {\n                \"dictionary\": \"  statement();\\n\",\n                \"ops\": [\n                  { \"diffOp\": { \"delete\": { \"range\": [0, 2] } } },\n                  { \"diffOp\": { \"equal\": { \"range\": [2, 12] } } },\n                  { \"diffOp\": { \"delete\": { \"range\": [0, 2] } } },\n                  { \"diffOp\": { \"equal\": { \"range\": [12, 13] } } },\n                  { \"diffOp\": { \"delete\": { \"range\": [0, 2] } } },\n                  { \"diffOp\": { \"insert\": { \"range\": [13, 15] } } }\n                ]\n              }\n            }\n          ]\n        },\n        \"verboseAdvices\": { \"advices\": [] },\n        \"location\": {\n          \"path\": { \"file\": \"format.js\" },\n          \"span\": null,\n          \"sourceCode\": null\n        },\n        \"tags\": [],\n        \"source\": null\n      }\n    ],\n    \"command\": \"format\"\n  }\n  ```\n  </details>\n\n- Added new `--staged` flag to the `check`, `format` and `lint` subcommands.\n\n  This new option allows users to apply the command _only_ to the files that are staged (the\n  ones that will be committed), which can be very useful to simplify writing git hook scripts\n  such as `pre-commit`. Contributed by @castarco\n\n#### Enhancements\n\n- Improve support of `.prettierignore` when migrating from Prettier\n\n  Now, Biome translates most of the glob patterns in `.prettierignore` to the equivalent Biome ignore pattern.\n  Only negated glob patterns are not supported.\n\n  Contributed by @Conaclos\n\n- Support JavaScript configuration files when migrating from Prettier\n\n  `biome migrate prettier` is now able to migrate Prettier configuration files\n  ending with `js`, `mjs`, or `cjs` extensions.\n  To do this, Biome invokes Node.js.\n\n  Also, embedded Prettier configurations in `package.json` are now supported.\n\n  Contributed by @Conaclos\n\n- Support `overrides` field in Prettier configuration files when migrating from Prettier.\n  Contributed by @Conaclos\n\n- Support passing a file path to the `--config-path` flag or the `BIOME_CONFIG_PATH` environment variable.\n\n  Now you can pass a `.json`/`.jsonc` file path with any filename to the `--config-path` flag or the\n  `BIOME_CONFIG_PATH` environment variable. This will disable the configuration auto-resolution and Biome\n  will try to read the configuration from the said file path ([#2265](https://github.com/biomejs/biome/issues/2265)).\n\n  ```shell\n  biome format --config-path=../biome.json ./src\n  ```\n\n  Contributed by @Sec-ant\n\n#### Bug fixes\n\n- Biome now tags the diagnostics emitted by `organizeImports` and `formatter` with correct severity levels, so they will be properly filtered by the flag `--diagnostic-level` ([#2288](https://github.com/biomejs/biome/issues/2288)). Contributed by @Sec-ant\n\n- Biome now correctly filters out files that are not present in the current directory when using the `--changed` flag [#1996](https://github.com/biomejs/biome/issues/1996). Contributed by @castarco\n\n- Biome now skips traversing `fifo` or `socket` files ([#2311](https://github.com/biomejs/biome/issues/2311)). Contributed by @Sec-ant\n\n- Biome now resolves configuration files exported from external libraries in `extends` from the working directory (CLI) or project root (LSP). This is the documented behavior and previous resolution behavior is considered as a bug ([#2231](https://github.com/biomejs/biome/issues/2231)). Contributed by @Sec-ant\n\n### Configuration\n\n#### Bug fixes\n\n- Now setting group level `all` to `false` can disable recommended rules from that group when top level `recommended` is `true` or unset. Contributed by @Sec-ant\n\n- Biome configuration files can correctly extends `.jsonc` configuration files now ([#2279](https://github.com/biomejs/biome/issues/2279)). Contributed by @Sec-ant\n\n- Fixed the JSON schema for React hooks configuration ([#2396](https://github.com/biomejs/biome/issues/2396)). Contributed by @arendjr\n\n#### Enhancements\n\n- Biome now displays the location of a parsing error for its configuration file ([#1627](https://github.com/biomejs/biome/issues/1627)).\n\n  Previously, when Biome encountered a parsing error in its configuration file,\n  it didn't indicate the location of the error.\n  It now displays the name of the configuration file and the range where the error occurred.\n\n  Contributed by @Conaclos\n\n- `options` is no longer required for rules without any options ([#2313](https://github.com/biomejs/biome/issues/2313)).\n\n  Previously, the JSON schema required to set `options` to `null` when an object is used to set the diagnostic level of a rule without any option.\n  However, if `options` is set to `null`, Biome emits an error.\n\n  The schema is now fixed and it no longer requires specifying `options`.\n  This makes the following configuration valid:\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"style\": {\n          \"noDefaultExport\": {\n            \"level\": \"off\"\n          }\n        }\n      }\n    }\n  }\n  ```\n\n  Contributed by @Conaclos\n\n### Editors\n\n#### Bug fixes\n\n- Biome extension is now able to parse the JSX syntax in files that associated with the `javascript` [language identifier](https://microsoft.github.io/language-server-protocol/specifications/lsp/3.17/specification/#textDocumentItem). This is an ad hoc fix, because [in the React world, `.js` files are allowed to include JSX syntax](https://github.com/facebook/create-react-app/issues/87#issuecomment-234627904), and these files are often associated with the `javascript` language identifier in most of the editors. Plus, [some editor extensions](https://github.com/michaelgmcd/vscode-language-babel/blob/8b3a472748ad07c99dc022b66795c9eb46be4ccb/package.json#L63-L80) will also associate `.jsx` files with the `javascript` language identifier. Relative links: [discussion](https://github.com/biomejs/biome/discussions/838#discussioncomment-9047539), [#2085](https://github.com/biomejs/biome/issues/2085). Contributed by @Sec-ant\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#2291](https://github.com/biomejs/biome/issues/2291) by correctly handle comment placement for JSX spread attributes and JSX spread children. Contributed by @ah-yu\n\n### JavaScript APIs\n\n### Linter\n\n#### Promoted rules\n\nNew rules are incubated in the nursery group.\nOnce stable, we promote them to a stable group.\nThe following rules are promoted:\n\n- [complecity/noExcessiveNestedTestSuites](https://biomejs.dev/linter/rules/no-excessive-nested-test-suites)\n- [complexity/noUselessTernary](https://biomejs.dev/linter/rules/no-useless-ternary)\n- [correctness/useJsxKeyInIterable](https://biomejs.dev/linter/rules/use-jsx-key-in-iterable)\n- [performance/noBarrelFile](https://biomejs.dev/linter/rules/no-barrel-file/)\n- [performance/noReExportAll](https://biomejs.dev/linter/rules/no-re-export-all/)\n- [style/noNamespaceImport](https://biomejs.dev/linter/rules/no-namespace-import/)\n- [style/useNodeAssertStrict](https://biomejs.dev/linter/rules/use-node-assert-strict/)\n- [suspicious/noDuplicateTestHooks](https://biomejs.dev/linter/rules/no-duplicate-test-hooks/)\n- [suspicious/noExportsInTest](https://biomejs.dev/linter/rules/no-exports-in-test/)\n- [suspicious/noFocusedTests](https://biomejs.dev/linter/rules/no-focused-tests/)\n- [suspicious/noSkippedTests](https://biomejs.dev/linter/rules/no-skipped-tests/)\n- [suspicious/noSuspiciousSemicolonInJsx](https://biomejs.dev/linter/rules/no-suspicious-semicolon-in-jsx)\n\n#### New features\n\n- Add a new option `jsxRuntime` to the `javascript` configuration. When set to `reactClassic`, the [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports) and [useImportType](https://biomejs.dev/linter/rules/use-import-type) rules use this information to make exceptions for the React global that is required by the React Classic JSX transform.\n\n  This is only necessary for React users who haven't upgraded to the [new JSX transform](https://legacy.reactjs.org/blog/2020/09/22/introducing-the-new-jsx-transform.html).\n\n  Contributed by @Conaclos and @arendjr\n\n- Implement [#2043](https://github.com/biomejs/biome/issues/2043): The React rule [`useExhaustiveDependencies`](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/) is now also compatible with Preact hooks imported from `preact/hooks` or `preact/compat`. Contributed by @arendjr\n\n- Add rule [noFlatMapIdentity](https://biomejs.dev/linter/rules/no-flat-map-identity) to disallow unnecessary callback use on `flatMap`. Contributed by @isnakode\n\n- Add rule [noConstantMathMinMaxClamp](https://biomejs.dev/linter/rules/no-constant-math-min-max-clamp), which disallows using `Math.min` and `Math.max` to clamp a value where the result itself is constant. Contributed by @mgomulak\n\n#### Enhancements\n\n- [style/useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention/) now allows prefixing a filename with `+` ([#2341](https://github.com/biomejs/biome/issues/2341)).\n\n  This is a convention used by [Sveltekit](https://kit.svelte.dev/docs/routing#page) and [Vike](https://vike.dev/route).\n\n  Contributed by @Conaclos\n\n- [style/useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) now accepts `PascalCase` for local and top-level variables.\n\n  This allows supporting local variables that hold a component or a regular class.\n  The following code is now accepted:\n\n  ```tsx\n  function loadComponent() {\n    const Component = getComponent();\n    return <Component />;\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [complexity/useLiteralKeys](https://biomejs.dev/linter/rules/use-literal-keys/) no longer report computed properties named `__proto__` ([#2430](https://github.com/biomejs/biome/issues/2430)).\n\n  In JavaScript, `{[\"__proto__\"]: null}` and `{__proto__: null}` have not the same semantic.\n  The first code set a regular property to `null`.\n  The second one set the prototype of the object to `null`.\n  See the [MDN Docs](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/proto) for more details.\n\n  The rule now ignores computed properties named `__proto__`.\n\n  Contributed by @Conaclos\n\n#### Bug fixes\n\n- Lint rules `useNodejsImportProtocol`, `useNodeAssertStrict`, `noRestrictedImports`, `noNodejsModules` will no longer check `declare module` statements anymore. Contributed by @Sec-ant\n\n- [style/useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) now accepts any case for variables from object destructuring ([#2332](https://github.com/biomejs/biome/issues/2332)).\n\n  The following name is now ignored:\n\n  ```js\n  const { Strange_Style } = obj;\n  ```\n\n  Previously, the rule renamed this variable. This led to a runtime error.\n\n  Contributed by @Conaclos\n\n### Parser\n\n#### Bug fixes\n\n- Fixed an issue when Unicode surrogate pairs were encoded in JavaScript strings\n  using an escape sequence ([#2384](https://github.com/biomejs/biome/issues/2384)).\n  Contributed by @arendjr\n\n\n## 1.6.4 (2024-04-03)\n\n### Analyzer\n\n#### Bug fixes\n\n- An operator with no spaces around in a binary expression no longer breaks the js analyzer ([#2243](https://github.com/biomejs/biome/issues/2243)). Contributed by @Sec-ant\n\n### CLI\n\n#### Bug fixes\n\n- Fix the printed error count ([#2048](https://github.com/biomejs/biome/issues/2048)). Contributed by @Sec-ant\n\n### Configuration\n\n#### Bug fixes\n\n- Correctly calculate enabled rules in lint rule groups. Now a specific rule belonging to a group can be enabled even if its group-level preset option `recommended` or `all` is `false` ([#2191](https://github.com/biomejs/biome/issues/2191)). Contributed by @Sec-ant\n\n### Editors\n\n#### Bug fixes\n\n- Fix the unexpected code deletion and repetition when `quickfix.biome` is enabled and some `import`-related rules are applied ([#2222](https://github.com/biomejs/biome/issues/2222), [#688](https://github.com/biomejs/biome/issues/688), [#1015](https://github.com/biomejs/biome/issues/1015)). Contributed by @Sec-ant\n\n### Linter\n\n#### New features\n\n- Add [nursery/noMisplacedAssertion](https://biomejs.dev/linter/rules/no-misplaced-assertion/). COntributed by @ematipico\n\n#### Bug fixes\n\n- Fix [#2211](https://github.com/biomejs/biome/issues/2211). noChildrenProp should work fine when children pass as a prop in a new line. Contributed by @fireairforce\n\n- Fix [#2248](https://github.com/biomejs/biome/issues/2248). `lint/a11y/useButtonType` should not trigger when button element with spread attribute. Contributed by @fireairforce\n\n- Fix [#2216](https://github.com/biomejs/biome/issues/2216). `lint/style/useNamingConvention` should not ignore JSX Component name binding. Contributed by @fireairforce\n\n#### Enhancements\n\n- Add support for object property members in the rule `useSortedClasses`. Contributed by @ematipico\n\n### Parser\n\n- The parser doesn't throw any error when the frontmatter of `.astro` files contains an illegal return:\n\n  ```astro\n  ---\n  const condition = true;\n  if (condition) {\n    return \"Something\";\n  }\n  ---\n  <div></div>\n  ```\n  Contributed by @ematipico\n\n## 1.6.3 (2024-03-25)\n\n### CLI\n\n#### Bug fixes\n\n- Fix configuration resolution. Biome is now able to correctly find the `biome.jsonc` configuration file when `--config-path` is explicitly set ([#2164](https://github.com/biomejs/biome/issues/2164)). Contributed by @Sec-ant\n\n- JavaScript/TypeScript files of different variants (`.ts`, `.js`, `.tsx`, `.jsx`) in a single workspace now have stable formatting behaviors when running the CLI command in paths of different nested levels or in different operating systems ([#2080](https://github.com/biomejs/biome/issues/2080), [#2109](https://github.com/biomejs/biome/issues/2109)). Contributed by @Sec-ant\n\n### Configuration\n\n#### Bug fixes\n\n- Complete the documentation and overrides support for options `formatter.lineEnding`, `[language].formatter.lineEnding`, `formatter.attributePosition` and `javascript.formatter.attributePosition`. Contributed by @Sec-ant\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#2172](https://github.com/biomejs/biome/issues/2172) by breaking long object destructuring patterns. Contributed by @ah-yu\n\n### Linter\n\n#### New features\n\n- Add rule [noEvolvingTypes](https://biomejs.dev/linter/rules/no-evolving-any) to disallow variables from evolving into `any` type through reassignments. Contributed by @fujiyamaorange\n\n#### Enhancements\n\n- Rename `noSemicolonInJsx` to `noSuspiciousSemicolonInJsx`. Contributed by @fujiyamaorange\n\n### LSP\n\n#### Bug fixes\n\n- Quickfix action no longer autofixes lint rule errors on save when `linter` is disabled ([#2161](https://github.com/biomejs/biome/issues/2161)). Contributed by @Sec-ant\n- Range formatting for Astro/Svelte/Vue doesn't place code out of place, especially when formatting on paste is enabled. Contributed by @ematipico\n\n## 1.6.2 (2024-03-22)\n\n### Analyzer\n\n#### Bug fixes\n\n- The `noSuperWithoutExtends` rule now allows for calling `super()` in derived class constructors of class expressions ([#2108](https://github.com/biomejs/biome/issues/2108)). Contributed by @Sec-ant\n\n- Fix discrepancies on file source detection. Allow module syntax in `.cts` files ([#2114](https://github.com/biomejs/biome/issues/2114)). Contributed by @Sec-ant\n\n### CLI\n\n#### Bug fixes\n\n- Fixes [#2131](https://github.com/biomejs/biome/issues/2131), where folders were incorrectly ignored when running the command `check`. Now folders are correctly ignored based on their command. Contributed by @ematipico\n\n- Smoother handling of `\"endOfLine\": \"auto\"` in prettier migration: falling back to `\"lf\"` ([#2145](https://github.com/biomejs/biome/pull/2145)). Contributed by @eMerzh\n\n### Configuration\n\n#### Bug fixes\n\n- Fix enabled rules calculation. The precedence of individual rules, `all` and `recommend` presets in top-level and group-level configs is now correctly respected. More details can be seen in ([#2072](https://github.com/biomejs/biome/pull/2072)) ([#2028](https://github.com/biomejs/biome/issues/2028)). Contributed by @Sec-ant\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#1661](https://github.com/biomejs/biome/issues/1661). Now nested conditionals are aligned with Prettier's logic, and won't contain mixed spaces and tabs. Contributed by @ematipico\n\n### JavaScript APIs\n\n#### Enhancements\n\n- Support applying lint fixes when calling the `lintContent` method of the `Biome` class ([#1956](https://github.com/biomejs/biome/pull/1956)). Contributed by @mnahkies\n\n### Linter\n\n#### New features\n\n- Add [nursery/noDuplicateElseIf](https://biomejs.dev/linter/rules/no-duplicate-else-if/). COntributed by @mdm317\n\n#### Bug fixes\n\n- Rule `noUndeclaredDependencies` now also validates `peerDependencies` and `optionalDependencies` ([#2122](https://github.com/biomejs/biome/issues/2122)). Contributed by @Sec-ant\n\n- Rule `noUndeclaredDependencies` won't check `declare module` statements anymore ([#2123](https://github.com/biomejs/biome/issues/2123)). Contributed by @Sec-ant\n\n- Fix [#1925](https://github.com/biomejs/biome/issues/1925). The fix for `useOptionalChain` would sometimes suggest an incorrect fix that discarded optional chaining operators on the left-hand side of logical expressions. These are now preserved. Contributed by @arendjr\n\n- Rule `noUndeclaredVariables` now also checks for worker globals ([#2121](https://github.com/biomejs/biome/issues/2121)). Contributed by @Sec-ant\n\n### LSP\n\n#### Bug fixes\n\n- Correctly parse `.jsonc` files. Contributed by @Sec-ant\n\n- Correctly resolve external `extends` configs. Contributed by @Sec-ant\n\n## 1.6.1 (2024-03-12)\n\n### CLI\n\n#### Bug fixes\n\n- CLI is now able to automatically search and resolve `biome.jsonc` ([#2008](https://github.com/biomejs/biome/issues/2008)). Contributed by @Sec-ant\n- Fix a false positive where some files were counted as \"fixed\" even though they weren't modified. Contributed by @ematipico\n\n### Configuration\n\n#### Bug fixes\n\n- `json.formatter.trailingCommas` option now works in `overrides` ([#2009](https://github.com/biomejs/biome/issues/2009)). Contributed by @Sec-ant\n\n### Linter\n\n#### New features\n\n- Add rule [noDoneCallback](https://biomejs.dev/linter/rules/no-done-callback), this rule checks the function parameter of hooks & tests\n  for use of the done argument, suggesting you return a promise instead. Contributed by @vasucp1207\n\n  ```js\n  beforeEach(done => {\n    // ...\n  });\n  ```\n\n#### Bug fixes\n\n- [useJsxKeyInIterable](https://biomejs.dev/linter/rules/use-jsx-key-in-iterable) now recognizes function bodies wrapped in parentheses ([#2011](https://github.com/biomejs/biome/issues/2011)). Contributed by @Sec-ant\n\n- [useShorthandFunctionType](https://biomejs.dev/linter/rules/use-shorthand-function-type) now preserves type parameters of generic interfaces when applying fixes ([#2015](https://github.com/biomejs/biome/issues/2015)). Contributed by @Sec-ant\n\n- Code fixes of [useImportType](https://biomejs.dev/linter/rules/use-import-type) and [useExportType](https://biomejs.dev/linter/rules/use-export-type) now handle multiline statements ([#2041](https://github.com/biomejs/biome/issues/2041)). Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare) no longer reports type parameter and parameter with identical names ([#1992](https://github.com/biomejs/biome/issues/1992)).\n\n  The following code is no longer reported:\n\n  ```ts\n  function f<a>(a: a) {}\n  ```\n\n  Contributed by @Conaclos\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare) now reports duplicate type parameters in a same declaration.\n\n  The following type parameters are now reported as a redeclaration:\n\n  ```ts\n  function f<T, T>() {}\n  ```\n\n  Contributed by @Conaclos\n\n- [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies/) now recognizes imports of subpath exports.\n\n  E.g., the following import statements no longer report errors if `@mui/material` and `tailwindcss` are installed as dependencies:\n\n  ```ts\n  import Button from \"@mui/material/Button\";\n  import { fontFamily } from \"tailwindcss/defaultTheme\";\n  ```\n\n  Contributed by @Sec-ant\n\n### Parser\n\n#### Bug fixes\n\n- JavaScript lexer is now able to lex regular expression literals with escaped non-ascii chars ([#1941](https://github.com/biomejs/biome/issues/1941)).\n\n  Contributed by @Sec-ant\n\n## 1.6.0 (2024-03-08)\n\n### Analyzer\n\n#### New features\n\n- Add partial for `.astro` files. Biome is able to sort imports inside the frontmatter of the Astro files. Contributed\n  by @ematipico\n\n  ```diff\n  ---\n  - import { getLocale } from \"astro:i18n\";\n  - import { Code } from \"astro:components\";\n  + import { Code } from \"astro:components\";\n  + import { getLocale } from \"astro:i18n\";\n  ---\n\n  <div></div>\n  ```\n- Add partial for `.vue` files. Biome is able to sort imports inside the script block of Vue files. Contributed by\n  @nhedger\n\n  ```diff\n  <script setup lang=\"ts\">\n  - import Button from \"./components/Button.vue\";\n  - import * as vueUse from \"vue-use\";\n  + import * as vueUse from \"vue-use\";\n  + import Button from \"./components/Button.vue\";\n  </script/>\n\n  <template></template>\n  ```\n\n- Add partial for `.svelte` files. Biome is able to sort imports inside the script block of Svelte files. Contributed by\n  @ematipico\n\n  ```diff\n  <script setup lang=\"ts\">\n  - import Button from \"./components/Button.svelte\";\n  - import * as svelteUse from \"svelte-use\";\n  + import * as svelteUse from \"svelte-use\";\n  + import Button from \"./components/Button.svelte\";\n  </script/>\n\n  <div></div>\n  ```\n\n- The analyzer now **infers** the correct quote from `javascript.formatter.quoteStyle`, if set. This means that code fixes suggested by the analyzer will use the same quote of the formatter. Contributed by @ematipico\n\n#### Enhancements\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) ignores unused rest spread siblings.\n\n  The following code is now valid:\n\n  ```js\n  const { a, ...rest } = { a: 0, b: 1 };\n  console.log(rest);\n  ```\n\n  Contributed by @ah-yu\n\n- Fix [#1931](https://github.com/biomejs/biome/issues/1931). Built-in React hooks such as\n  `useEffect()` can now be validated by the\n  [`useExhaustiveDependendies`](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/), even\n  when they're not being imported from the React library. To do so, simply configure them like\n  any other user-provided hooks.\n\n  Contributed by @arendjr\n\n- Implemented [#1128](https://github.com/biomejs/biome/issues/1128). User-provided React hooks can\n  now be configured to track stable results. For example:\n\n  ```json\n  \"useExhaustiveDependencies\": {\n      \"level\": \"error\",\n      \"options\": {\n          \"hooks\": [{\n              \"name\": \"useMyState\",\n              \"stableResult\": [\n                  1\n              ]\n          }]\n      }\n  }\n  ```\n\n  This will allow the following to be validated:\n\n  ```js\n  const [myState, setMyState] = useMyState();\n  const toggleMyState = useCallback(() => {\n    setMyState(!myState);\n  }, [myState]); // Only `myState` needs to be specified here.\n  ```\n\n  Contributed by @arendjr\n\n#### Bug fixes\n\n- Fix [#1748](https://github.com/biomejs/biome/issues/1748). Now for the following case we won't provide an unsafe fix\n  for the `noNonNullAssertion` rule:\n\n  ```ts\n  x[y.z!];\n  ```\n\n  Contributed by @ah-yu\n\n- Imports that contain the protocol `:` are now sorted after the `npm:` modules, and before the `URL` modules.\n  Contributed by @ematipico\n\n  ```diff\n  import express from \"npm:express\";\n  - import Component from \"./component.js\"\n  - import { sortBy } from \"virtual:utils\";\n  + import { sortBy } from \"virtual:utils\";\n  + import Component from \"./component.js\"\n  ```\n\n- Fix [#1081](https://github.com/biomejs/biome/issues/1081). The `useAwait` rule does not report `for await...of`.\n  Contributed by @unvalley\n\n- Fix [#1827](https://github.com/biomejs/biome/issues/1827) by properly analyzing nested `try-finally` statements. Contributed by @ah-yu\n\n- Fix [#1924](https://github.com/biomejs/biome/issues/1924) Use the correct export name to sort in the import clause. Contributed by @ah-yu\n- Fix [#1805](https://github.com/biomejs/biome/issues/1805) fix formatting arrow function which has conditional expression body  Contributed by @mdm317\n\n- Fix [#1781](https://github.com/biomejs/biome/issues/1781) by avoiding the retrieval of the entire static member expression for the reference if the static member expression does not start with the reference. Contributed by @ah-yu\n\n### CLI\n\n#### New features\n\n- Add a new command `biome migrate prettier`. The command will read the file `.prettierrc`/`prettier.json`\n  and `.prettierignore` and map its configuration to Biome's one.\n  Due to the different nature of `.prettierignore` globs and Biome's globs, it's **highly** advised to make sure that\n  those still work under Biome.\n\n- Now the file name printed in the diagnostics is clickable. If you run the CLI from your editor, you can <kbd>\n  Ctrl</kbd>/<kbd title=\"Cmd\">⌘</kbd> + Click on the file name, and the editor will open said file. If row and columns\n  are specified e.g. `file.js:32:7`, the editor will set the cursor right in that position. Contributed by @ematipico\n\n- Add an option `--linter` to `biome rage`. The option needs to check Biome linter configuration. Contributed by\n  @seitarof\n\n- Add an option `--formatter` to `biome rage`. The option needs to check Biome formatter configuration. Contributed by\n  @seitarof\n- The CLI now consistently reports the number of files tha were changed, out of the total files that were analysed. Contributed by @ematipico\n- The CLI now consistently shows the number of errors and warnings emitted. Contributed by @ematipico\n\n#### Bug fixes\n\n- Don't process files under an ignored directory.\n\n  Previously, Biome processed all files in the traversed hierarchy,\n  even the files under an ignored directory.\n  Now, it completely skips the content of ignored directories.\n\n  For now, directories cannot be ignored using `files.include` in the configuration file.\n  This is a known limitation that we want to address in a future release.\n\n  For instance, if you have a project with a folder `src` and a folder `test`,\n  the following configuration doesn't completely ignore `test`.\n\n  ```json\n  {\n    \"files\": {\n      \"include\": [\"src\"]\n    }\n  }\n  ```\n\n  Biome will traverse `test`,\n  however all files of the directory are correctly ignored.\n  This can result in file system errors,\n  if Biome encounters dangling symbolic links or files with higher permissions.\n\n  To avoid traversing the `test` directory,\n  you should ignore the directory using `ignore`:\n\n  ```json\n  {\n    \"files\": {\n      \"include\": [\"src\"],\n      \"ignore\": [\"test\"]\n    }\n  }\n  ```\n\n- Fix [#1508](https://github.com/biomejs/biome/issues/1508) by excluding deleted files from being processed. Contributed\n  by @ematipico\n\n- Fix [#1173](https://github.com/biomejs/biome/issues/1173). Fix the formatting of a single instruction with commented\n  in a control flow body to ensure consistency. Contributed by @mdm317\n\n- Fix overriding of `javascript.globals`. Contributed by @arendjr\n- Fix a bug where syntax rules weren't run when pulling the diagnostics. Now Biome will emit more parsing diagnostics,\n  e.g.\n  ```\n  check.js:1:17 parse/noDuplicatePrivateClassMembers ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n    × Duplicate private class member \"#foo\"\n\n    > 1 │ class A { #foo; #foo }\n        │                 ^^^^\n\n  ```\n  Contributed by @ematipico\n\n- Fix [#1774](https://github.com/biomejs/biome/issues/1774) by taking into account the option `--no-errors-on-unmatched` when running the CLI using `--changed`. Contributed by @antogyn\n\n#### Enhancements\n\n- Removed a superfluous diagnostic that was printed during the linting/check phase of a file:\n\n  ```\n  test.js check ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n    × The file contains diagnostics that needs to be addressed.\n  ```\n  Contributed by @ematipico\n- The command `format` now emits parsing diagnostics if there are any, and it will terminate with a non-zero exit code. Contributed by @ematipico\n\n### Configuration\n\n#### New features\n\n- Add the ability to resolve the configuration files defined inside `extends` from the `node_modules/` directory.\n\n  If you want to resolve a configuration file that matches the specifier `@org/configs/biome`, then your `package.json`\n  file must look this:\n\n  ```json\n  {\n    \"name\": \"@org/configs\",\n    \"exports\": {\n      \"./biome\": \"./biome.json\"\n    }\n  }\n  ```\n\n  And the `biome.json` file that \"imports\" said configuration, will look like this:\n  ```json\n  {\n    \"extends\": \"@org/configs/biome\"\n  }\n  ```\n  Read the [documentation](https://biomejs.dev/guides/how-biome-works#the-extends-option) to better understand how it\n  works, expectations and restrictions.\n\n### Editors\n\n#### Bug fixes\n\n- Fix a regression where ignored files where formatted in the editor. Contributed by @ematipico\n- Fix a bug where syntax rules weren't run when pulling the diagnostics. Now Biome will emit more parsing diagnostics,\n  e.g.\n  ```\n  check.js:1:17 parse/noDuplicatePrivateClassMembers ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n    × Duplicate private class member \"#foo\"\n\n    > 1 │ class A { #foo; #foo }\n        │                 ^^^^\n\n  ```\n  Contributed by @ematipico\n\n### Formatter\n\n#### New features\n\n- Biome now allows to format the `package.json` file. This is now the default behaviour and users can remove their\n  workarounds.\n  If you rely on other tools to format `package.json`, you'll have to ignore it via configuration. Contributed by\n  @pattrickrice\n- New formatter option `attributePosition` that have similar behavior as\n  Prettier `singleAttributePerLine` [#1706](https://github.com/biomejs/biome/issues/1706). Contributed by @octoshikari\n- Add partial for `.astro` files. Biome is able to format the frontmatter of the Astro files. Contributed by @ematipico\n\n  ```diff\n  ---\n  - statement ( );\n  + statement();\n  ---\n\n  <div></div>\n  ```\n- Add partial for `.vue` files. Biome is able to format the script block of Vue files. Contributed by @nhedger\n\n  ```diff\n  <script setup lang=\"ts\">\n  - statement ( );\n  + statement();\n  </script/>\n\n  <template></template>\n  ```\n\n- Add partial for `.svelte` files. Biome is able to format the script block of Svelte files. Contributed by @ematipico\n\n  ```diff\n  <script setup lang=\"ts\">\n  - statement ( );\n  + statement();\n  </script/>\n\n  <div></div>\n  ```\n\n#### Enhancements\n\n- `composer.json`, `deno.json`, `jsconfig.json`, `package.json` and `tsconfig.json` are no longer protected files.\n\n  This means that you can now format them.\n\n  If you want to ignore these files, you can use the [files.ignore](https://biomejs.dev/reference/configuration/#filesignore) configuration:\n\n  ```json\n  {\n    \"files\": {\n      \"ignore\": [\n        \"composer.json\",\n        \"jsconfig.json\",\n        \"package.json\",\n        \"tsconfig.json\",\n        \"typescript.json\",\n        \"deno.json\",\n        \"deno.jsonc\"\n      ]\n    }\n  }\n  ```\n\n  The following files are still protected, and thus ignored:\n\n  - `composer.lock`\n  - `npm-shrinkwrap.json`\n  - `package-lock.json`\n  - `yarn.lock`\n\n   Contributed by @pattrickrice and @Conaclos\n\n#### Bug fixes\n\n- Fix [#1039](https://github.com/biomejs/biome/issues/1039). Check unicode width instead of number of bytes when\n  checking if regex expression is a simple argument.\n\n  This no longer breaks.\n\n  ```js\n  s(/🚀🚀/).s().s();\n  ```\n\n   Contributed by @kalleep\n\n- Fix [#1218](https://github.com/biomejs/biome/issues/1218), by correctly preserving empty lines in member chains.\n  Contributed by @ah-yu\n- Fix [#1659](https://github.com/biomejs/biome/issues/1659) and [#1662](https://github.com/biomejs/biome/issues/1662), by correctly taking into account the leading comma inside the formatter options. Contributed by @ematipico\n\n- Fix [#1934](https://github.com/biomejs/biome/pull/1934). Fix invalid formatting of long arrow function for AsNeeded arrow parens Contributed by @fireairforce\n\n### JavaScript APIs\n\n### Linter\n\n#### Promoted rules\n\nNew rules are incubated in the nursery group.\nOnce stable, we promote them to a stable group.\nThe following rules are promoted:\n\n- [complexity/noEmptyTypeParameters](https://biomejs.dev/linter/rules/no-empty-type-parameters)\n- [complexity/noUselessLoneBlockStatements](https://biomejs.dev/linter/rules/no-useless-lone-block-statements)\n- [correctness/noInvalidUseBeforeDeclaration](https://biomejs.dev/linter/rules/no-invalid-use-before-declaration)\n- [correctness/noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports)\n- [correctness/noUnusedPrivateClassMembers](https://biomejs.dev/linter/rules/no-unused-private-class-members)\n- [security/noGlobalEval](https://biomejs.dev/linter/rules/no-global-eval)\n- [style/useConsistentArrayType](https://biomejs.dev/linter/rules/use-consistent-array-type)\n- [style/useExportType](https://biomejs.dev/linter/rules/use-export-type)\n- [style/useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention)\n- [style/useForOf](https://biomejs.dev/linter/rules/use-for-of)\n- [style/useImportType](https://biomejs.dev/linter/rules/use-import-type)\n- [style/useNodejsImportProtocol](https://biomejs.dev/linter/rules/use-nodejs-import-protocol)\n- [style/useNumberNamespace](https://biomejs.dev/linter/rules/use-number-namespace)\n- [style/useShorthandFunctionType](https://biomejs.dev/linter/rules/use-shorthand-function-type)\n- [suspicious/noEmptyBlockStatements](https://biomejs.dev/linter/rules/no-empty-block-statements)\n- [suspicious/noGlobalAssign](https://biomejs.dev/linter/rules/no-global-assign)\n- [suspicious/noMisleadingCharacterClass](https://biomejs.dev/linter/rules/no-misleading-character-class)\n- [suspicious/noThenProperty](https://biomejs.dev/linter/rules/no-then-property)\n- [suspicious/useAwait](https://biomejs.dev/linter/rules/use-await)\n\nAdditionally, the following rules are now recommended:\n\n- [suspicious/noApproximativeNumericConstant](https://biomejs.dev/linter/rules/no-approximative-numeric-constant)\n- [suspicious/noMisrefactoredShorthandAssign](https://biomejs.dev/linter/rules/no-misrefactored-shorthand-assign)\n\n#### Removed rules\n\n- Remove `nursery/useGroupedTypeImport`. The rule [style/useImportType](https://biomejs.dev/linter/rules/use-import-type) covers the behavior of this rule.\n\n  Note that removing a nursery rule is not considered a breaking change according to our [semantic versioning](https://biomejs.dev/internals/versioning).\n\n  Contributed by @Conaclos\n\n#### New features\n\n- Add the rule [noSkippedTests](https://biomejs.dev/linter/rules/no-skipped-tests), to disallow skipped tests:\n\n  ```js\n  describe.skip(\"test\", () => {});\n  it.skip(\"test\", () => {});\n  ```\n  Contributed by @ematipico\n\n- Add the rule [noFocusedTests](https://biomejs.dev/linter/rules/no-focused-tests), to disallow skipped tests:\n\n  ```js\n  describe.only(\"test\", () => {});\n  it.only(\"test\", () => {});\n  ```\n  Contributed by @ematipico\n\n- Add rule [useSortedClasses](https://biomejs.dev/linter/rules/use-sorted-classes), to sort CSS utility classes:\n\n  ```diff\n  - <div class=\"px-2 foo p-4 bar\" />\n  + <div class=\"foo bar p-4 px-2\" />\n  ```\n  Contributed by @DaniGuardiola\n\n- Add rule [noUndeclaredDependencies](https://biomejs.dev/linter/rules/no-undeclared-dependencies), to detect the use of\n  dependencies that aren't present in the `package.json`.\n\n  The rule ignores imports using a protocol such as `node:`, `bun:`, `jsr:`, `https:`.\n\n  Contributed by @ematipico and @Conaclos\n\n- Add rule [noNamespaceImport](https://biomejs.dev/linter/rules/no-namespace-import), to report namespace imports:\n\n  ```js\n  import * as foo from \"foo\";\n  ```\n  Contributed by @unvalley\n- Add partial support for `.astro` files. Biome is able to lint and fix the frontmatter of the Astro files. Contributed\n  by @ematipico\n\n  ```diff\n  ---\n  - delete a.b\n  + a.b = undefined\n  ---\n\n  <div></div>\n  ```\n\n- Add partial support for `.vue` files. Biome is able to lint and fix the script block of the Vue files.\n\n  ```diff\n  <script setup lang=\"ts\">\n  - delete a.b\n  + a.b = undefined\n  <script>\n\n  <template></template>\n  ```\n\n  Contributed by @nhedger\n\n- Add rule [useNodeAssertStrict](https://biomejs.dev/linter/rules/use-node-assert-strict), which promotes the use\n  of `node:assert/strict` over `node:assert`. Contributed by @ematipico\n\n- Add rule [noExportsInTest](https://biomejs.dev/linter/rules/no-exports-in-test) which disallows `export` or `modules.exports` in files\n  containing test. Contributed by @ah-yu\n\n- Add rule [noSemicolonInJsx](https://biomejs.dev/linter/rules/no-suspicious-semicolon-in-jsx/) to detect possible wrong semicolons inside JSX elements.\n\n  ```jsx\n  const Component = () => {\n    return (\n      <div>\n        <div />;\n      </div>\n    );\n  }\n  ```\n\n  Contributed by @fujiyamaorange\n- Add rule [noBarrelFile](https://biomejs.dev/linter/rules/no-barrel-file), to report the usage of barrel file:\n\n  ```js\n  export * from \"foo\";\n  ```\n  Contributed by @togami2864\n\n- Add rule [noReExportAll](https://biomejs.dev/linter/rules/no-re-export-all/) that report `export * from \"mod\"`.\n  Contributed by @mdm317\n\n- Add rule [noExcessiveNestedTestSuites](https://biomejs.dev/linter/rules/no-excessive-nested-test-suites/).\n  Contributed by @vasucp1207\n\n- Add rule [useJsxKeyInIterable](https://biomejs.dev/linter/rules/use-jsx-key-in-iterable/).\n  Contributed by @vohoanglong0107\n\n#### Enhancements\n\n- [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/) now rule not triggered for jsx attributes when\n   the fragment child is simple text.\n\n  ```js\n  export function SomeComponent() {\n    return <div x-some-prop={<>Foo</>} />;\n  }\n  ```\n\n   Also fixes code action when the fragment child is of type `JsxExpressionChild`.\n\n  ```js\n  <>\n    <Hello leftIcon={<>{provider?.icon}</>} />\n    {<>{provider?.icon}</>}\n    <>{provider?.icon}</>\n  </>\n  ```\n\n  Contributed by @vasucp1207\n\n- [noUselessTernary](https://biomejs.dev/linter/rules/no-useless-ternary) now provides unsafe code fixes. Contributed by\n  @vasucp1207\n\n- [noApproximativeNumericConstant](https://biomejs.dev/linter/rules/no-approximative-numeric-constant) now provides\n  unsafe code fixes and handle numbers without leading zero and numbers with digit separators.\n\n  The following numbers are now reported as approximated constants.\n\n  ```js\n  3.14_15; // PI\n  .4342; // LOG10E\n  ```\n\n  Contributed by @Conaclos\n\n- [noPrecisionLoss](https://biomejs.dev/linter/rules/no-precision-loss) no longer reports number with extra zeros.\n\n  The following numbers are now valid.\n\n  ```js\n  .1230000000000000000000000;\n  1230000000000000000000000.0;\n  ```\n\n  Contributed by @Conaclos\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention) now\n  supports [unicase](https://en.wikipedia.org/wiki/Unicase)\n  letters ([#1786](https://github.com/biomejs/biome/issues/1786)).\n\n  [unicase](https://en.wikipedia.org/wiki/Unicase) letters have a single case: they are neither uppercase nor lowercase.\n  Previously, Biome reported names in unicase as invalid.\n  It now accepts a name in unicase everywhere.\n\n  The following code is now accepted:\n\n  ```js\n  const 안녕하세요 = { 안녕하세요: 0 };\n  ```\n\n  We still reject a name that mixes unicase characters with lowercase or uppercase characters:\n  The following names are rejected:\n\n  ```js\n  const A안녕하세요 = { a안녕하세요: 0 };\n  ```\n\n  Contributed by @Conaclos\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention)\n  and [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now provides a new option `requireAscii` to require identifiers to\n  be in ASCII.\n\n  To avoid any breaking change, this option is turned off by default.\n  We intend to turn it on in the next major release of Biome (Biome 2.0).\n\n  Set the `requireAscii` rule option to `true` to require identifiers to be in ASCII.\n\n  ```json\n  {\n    \"linter\": {\n      \"rules\": {\n        \"style\": {\n          \"useNamingConvention\": { \"options\": { \"requireAscii\": false } }\n        },\n        \"nursery\": {\n          \"useFilenamingConvention\": { \"options\": { \"requireAscii\": false } }\n        }\n      }\n    }\n  }\n  ```\n\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) no longer reports unused imports.\n\n  We now have a dedicated rule for reporting unused imports:\n  [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports)\n\n  Contributed by @Conaclos\n\n#### Bug fixes\n\n- Fix missing link in [noStaticOnlyClass](https://biomejs.dev/linter/rules/no-static-only-class) documentation.\n  Contributed by @yndajas\n\n- [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type) no longer reports valid use of the void\n  type in conditional types ([#1812](https://github.com/biomejs/biome/issues/1812)).\n\n  The rule no longer reports the following code:\n\n  ```ts\n  type Conditional<T> = T extends void ? Record<string, never> : T\n  ```\n\n  Contributed by @lucasweng\n\n- [noInvalidUseBeforeDeclaration](https://biomejs.dev/linter/rules/no-invalid-use-before-declaration) no longer reports\n  valid use of binding patterns ([#1648](https://github.com/biomejs/biome/issues/1648)).\n\n  The rule no longer reports the following code:\n\n  ```js\n  const { a = 0, b = a } = {};\n  ```\n\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) no longer reports used binding\n  patterns ([#1652](https://github.com/biomejs/biome/issues/1652)).\n\n  The rule no longer reports `a` as unused the following code:\n\n  ```js\n  const { a = 0, b = a } = {};\n  export { b };\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [#1651](https://github.com/biomejs/biome/issues/1651). [noVar](https://biomejs.dev/linter/rules/no-var/) now\n  ignores TsGlobalDeclaration. Contributed by @vasucp1207\n\n- Fix [#1640](https://github.com/biomejs/biome/issues/1640). [useEnumInitializers](https://biomejs.dev/linter/rules/use-enum-initializers) code action now generates valid code when last member has a comment but no comma. Contributed by @kalleep\n\n- Fix [#1653](https://github.com/biomejs/biome/issues/1653). Handle a shorthand value in `useForOf` to avoid the false-positive case. Contributed by @togami2864\n\n- Fix [#1656](https://github.com/biomejs/biome/issues/1656). [useOptionalChain](https://biomejs.dev/linter/rules/use-optional-chain/) code action now correctly handles logical and chains where methods with the same name are invoked with different arguments:\n\n  ```diff\n  - tags && tags.includes('a') && tags.includes('b')\n  + tags?.includes('a') && tags.includes('b')\n  ```\n\n  Contributed by @lucasweng\n\n- Fix [#1704](https://github.com/biomejs/biome/issues/1704). Convert `/` to escaped slash `\\/` to avoid parsing error in\n  the result of autofix. Contributed by @togami2864\n\n- Fix[#1697](https://github.com/biomejs/biome/issues/1697). Preserve leading trivia in autofix of suppression rules.\n  Contributed by @togami2864\n\n- Fix [#603](https://github.com/biomejs/biome/issues/603). Trim trailing whitespace to avoid double insertion.\n  Contributed by @togami2864\n\n- Fix [#1765](https://github.com/biomejs/biome/issues/1765). Now the rule `noDelete` doesn't trigger when deleting a\n  dataset:\n  ```js\n  delete element.dataset.prop;\n  ```\n  Contributed by @ematipico\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention)\n  and [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention) now reject identifiers with consecutive delimiters.\n\n  The following name is now invalid because it includes two underscores:\n\n  ```js\n  export const MY__CONSTANT = 0;\n  ```\n\n  Note that we still allow consecutive leading and consecutive trailing underscores.\n\n  Contributed by @Conaclos\n\n- Fix [#1932](https://github.com/biomejs/biome/issues/1932) Allow redeclaration of type parameters in different declarations.\n  Contributed by @keita-hino\n\n- Fix [#1945](https://github.com/biomejs/biome/issues/1945) Allow constructor with default parameters in `noUselessConstructor`\n\n- Fix [#1982](https://github.com/biomejs/biome/issues/1982) Change to iterate over the module item lists and ignore .d.ts files. Contributed by @togami2864\n\n### Parser\n\n#### Bug fixes\n\n- Fix [#1728](https://github.com/biomejs/biome/issues/1728). Correctly parse the global declaration when the `{` token\n  is on the line following the `global` keyword.\n\n  Now the following code is correctly parsed:\n\n  ```ts\n  declare global\n  { }\n\n  declare module foo {\n    global\n    { }\n  }\n  ```\n\n  Contributed by @ah-yu\n\n- Fix [#1730](https://github.com/biomejs/biome/issues/1730). Correctly parse `delete` expressions with operands that are\n  not simple member expressions.\n\n  ```js\n  delete(a.b);\n  delete console.log(1);\n  delete(() => {});\n  ```\n\n  Contributed by @printfn\n\n### Website\n\n#### Bug fixes\n\n- Fix [#1981](https://github.com/biomejs/biome/issues/1981). Identify TypeScript definition files by their file path within the playground. Contributed by @ah-yu\n\n## 1.5.3 (2024-01-22)\n\n### LSP\n\n#### Bug fixes\n\n- Fix [#1584](https://github.com/biomejs/biome/issues/1584). Ensure the LSP only registers the formatter once.\n  Contributed by @nhedger\n\n- Fix [#1589](https://github.com/biomejs/biome/issues/1589). Fix invalid formatting of own line comments when they were\n  at the end of an import/export list. Contributed by @spanishpear\n\n### Configuration\n\n#### Bug fixes\n\n- Override correctly the recommended preset ([#1349](https://github.com/biomejs/biome/issues/1349)).\n\n  Previously, if unspecified, Biome turned on the recommended preset in overrides.\n  This resulted in reporting diagnostics with a severity level set to `off`.\n  This in turn caused Biome to fail.\n\n  Now Biome won't switch on the recommended preset in `overrides` unless told to do so.\n\n  Contributed by @Conaclos\n\n- Don't format **ignored** files that are well-known JSONC files when `files.ignoreUnknown` is\n  enabled ([#1607](https://github.com/biomejs/biome/issues/1607)).\n\n  Previously, Biome always formatted files that are known to be JSONC files (e.g. `.eslintrc`)\n  when `files.ignoreUnknown` was enabled.\n\n  Contributed by @Conaclos\n\n### Formatter\n\n#### New features\n\n- Add option `json.formatter.trailingCommas`, to provide a better control over the trailing comma in JSON/JSONC files. Its default value is `\"none\"`.\n\n#### Bug fixes\n\n- Fix [#1178](https://github.com/biomejs/biome/issues/1178), where the line ending option wasn't correctly applied.\n  Contributed by @ematipico\n- Fix [#1571](https://github.com/biomejs/biome/issues/1571). Fix invalid formatting of nested multiline comments.\n  Contributed by @ah-yu\n\n### Linter\n\n#### Bug fixes\n\n-\nFix [#1575](https://github.com/biomejs/biome/issues/1575). [noArrayIndexKey](https://biomejs.dev/linter/rules/no-array-index-key/)\nnow captures array index value inside template literals and with string concatenation. Contributed by @vasucp1207\n\n- Linter rules that inspect regexes now handle multibyte characters\n  correctly ([#1522](https://github.com/biomejs/biome/issues/1522)).\n\n  Previously, [noMisleadingCharacterClass](https://biomejs.dev/linter/no-misleading-character-class), [noMultipleSpacesInRegularExpressionLiterals](https://biomejs.dev/linter/no-multiple-spaces-in-regular-expression-literals),\n  and [noEmptyCharacterClassInRegex](https://biomejs.dev/linter/no-empty-character-class-in-regex) made Biome errors on\n  multi-bytes characters.\n  Multibyte characters are now handled correctly.\n\n  The following code no longer raises an internal error:\n\n  ```js\n  // Cyrillic characters\n  /[\\u200E\\u2066-\\u2069]/gu;\n  ```\n\n  Contributed by @Conaclos\n\n- [useExhaustiveDependencies](https://biomejs.dev/linter/use-exhaustive-dependencies) no longer made Biome errors in\n  code TypeScript import equal declarations ([#1194](https://github.com/biomejs/biome/issues/1194)). Contributed by\n  @Conaclos\n\n- Fix typo in the diagnostic of [noNodejsModules](https://biomejs.dev/linter/rules/no-nodejs-modules). Contributed by\n  @huseeiin\n\n### Parser\n\n#### Bug fixes\n\n- Accept the `const` modifier for type parameter in method type\n  signature ([#1624](https://github.com/biomejs/biome/issues/1624)).\n\n  The following code is now correctly parsed:\n\n  ```ts\n  type Foo = {\n    <const T>();\n    method<const T>();\n  };\n  ```\n\n  Contributed by @magic-akari\n\n- Correctly parse type arguments in expression([#1184](https://github.com/biomejs/biome/issues/1184)).\n\n  The following code is now correctly parsed in typescript:\n\n  ```ts\n  0 < (0 >= 1);\n  ```\n\n  Contributed by @ah-yu\n\n### Website\n\n#### New\n\n- Add a [page that maps the Biome rule to its source](https://biomejs.dev/linter/rules-sources/). Contributed by\n  @ematipico\n\n#### Fixes\n\n- Generate Open Graph images based on the linked page. Contributed by @ematipico\n\n- Fix examples of the [git hook page](https://biomejs.dev/recipes/git-hooks/). Contributed by @9renpoto, @lmauromb, and\n  @Conaclos\n\n- Fix dead and erroneous hyperlinks. Contributed by @Sec-ant and Conaclos\n\n## 1.5.2 (2024-01-15)\n\n### CLI\n\n### Bug fixes\n\n- Fix [#1512](https://github.com/biomejs/biome/issues/1512) by skipping verbose diagnostics from the count. Contributed\n  by @ematipico\n\n- Correctly handle cascading `include` and `ignore`.\n\n  Previously Biome incorrectly included files that were included at tool level and ignored at global level.\n  In the following example, `file.js` was formatted when it should have been ignored.\n  Now, Biome correctly ignores the directory `./src/sub/`.\n\n  ```shell\n  ❯ tree src\n    src\n    └── sub\n        └── file.js\n\n  ❯ cat biome.json\n    {\n      \"files\": { \"ignore\": [\"./src/sub/\"] },\n      \"formatter\": { \"include\": [\"./src\"] }\n    }\n  ```\n\n  Contributed by @Conaclos\n\n- Don't emit verbose warnings when a protected file is ignored.\n\n  Some files, such as `package.json` and `tsconfig.json`,\n  are [protected](https://biomejs.dev/guides/how-biome-works/#protected-files).\n  Biome emits a verbose warning when it encounters a protected file.\n\n  Previously, Biome emitted this verbose warning even if the file was ignored by the configuration.\n  Now, it doesn't emit verbose warnings for protected files that are ignored.\n\n  Contributed by @Conaclos\n\n- `overrides` no longer affect which files are ignored. Contributed by @Conaclos\n\n- The file `biome.json` can't be ignored anymore. Contributed by @ematipico\n\n- Fix [#1541](https://github.com/biomejs/biome/issues/1541) where the content of protected files wasn't returned\n  to `stdout`. Contributed by @ematipico\n\n- Don't handle CSS files, the formatter isn't ready yet. Contributed by @ematipico\n\n### Configuration\n\n#### Bug fixes\n\n- Fix [1440](https://github.com/biomejs/biome/issues/1440), a case where `extends` and `overrides` weren't correctly\n  emitting the final configuration. Contributed by @arendjr\n\n- Correctly handle `include` when `ignore` is set (#1468). Contributed by @Conaclos\n\n  Previously, Biome ignored `include` if `ignore` was set.\n  Now, Biome check both `include` and `ignore`.\n  A file is processed if it is included and not ignored.\n  If `include` is not set all files are considered included.\n\n### Formatter\n\n#### Bug fixes\n\n- Fix placement of comments before `*` token in generator methods with\n  decorators. [#1537](https://github.com/biomejs/biome/pull/1537) Contributed by @ah-yu\n\n- Fix [#1406](https://github.com/biomejs/biome/issues/1406). Ensure comments before the `async` keyword are placed\n  before it. Contributed by @ah-yu\n\n- Fix [#1172](https://github.com/biomejs/biome/issues/1172). Fix placement of line comment after function expression\n  parentheses, they are now attached to first statement in body. Contributed by @kalleep\n\n- Fix [#1511](https://github.com/biomejs/biome/issues/1511) that made the JavaScript formatter crash. Contributed\n  @Conaclos\n\n### Linter\n\n#### Enhancements\n\n- Add an unsafe code fix for [noConsoleLog](https://biomejs.dev/linter/rules/no-console-log/). Contributed by\n  @vasucp1207\n\n- [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function) no longer reports function in `extends`\n  clauses or in a `new` expression. Contributed by @Conaclos\n\n  These cases require the presence of a prototype.\n\n- Add dependency variable names on error message when useExhaustiveDependencies rule shows errors. Contributed by\n  @mehm8128\n\n#### Bug fixes\n\n- The fix of [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function) now adds parentheses around the\n  arrow function in more cases where it is needed ([#1524](https://github.com/biomejs/biome/issues/1524)).\n\n  A function expression doesn't need parentheses in most expressions where it can appear.\n  This is not the case with the arrow function.\n  We previously added parentheses when the function appears in a call or member expression.\n  We now add parentheses in binary-like expressions and other cases where they are needed, hopefully covering all cases.\n\n  Previously:\n\n  ```diff\n  - f = f ?? function() {};\n  + f = f ?? () => {};\n  ```\n\n  Now:\n\n  ```diff\n  - f = f ?? function() {};\n  + f = f ?? (() => {});\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [#1514](https://github.com/biomejs/biome/issues/1514). Fix autofix suggestion to avoid the syntax error\n  in `no_useless_fragments`. Contributed by @togami2864\n\n## 1.5.1 (2024-01-10)\n\n### CLI\n\n#### Bug fixes\n\n- The diagnostics `files/missingHandler` are now shown only when the option `--verbose` is passed. Contributed by\n  @ematipico\n- The diagnostics for protected files are now shown only when the option `--verbose` is passed. Contributed by\n  @ematipico\n- Fix [#1465](https://github.com/biomejs/biome/issues/1465), by taking in consideration the workspace folder when\n  matching a pattern. Contributed by @ematipico\n- Fix [#1465](https://github.com/biomejs/biome/issues/1465), by correctly process globs that contain file names.\n  Contributed by @ematipico\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#1170](https://github.com/biomejs/biome/issues/1170). Fix placement of comments inside default switch clause. Now\n  all line comments that have a preceding node will keep their position. Contributed by @kalleep\n\n### Linter\n\n#### Bug fixes\n\n-\nFix [#1335](https://github.com/biomejs/biome/issues/1335). [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/)\nnow ignores code action on component props when the fragment is empty. Contributed by @vasucp1207\n\n- [useConsistentArrayType](https://biomejs.dev/linter/rules/use-consistent-array-type) was accidentally placed in\n  the `style` rule group instead of the `nursery` group. It is now correctly placed under `nursery`.\n\n-\nFix [#1483](https://github.com/biomejs/biome/issues/1483). [useConsistentArrayType](https://biomejs.dev/linter/rules/use-consistent-array-type)\nnow correctly handles its option. Contributed by @Conaclos\n\n-\nFix [#1502](https://github.com/biomejs/biome/issues/1502). [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function)\nnow correctly handle functions that return a (comma) sequence expression. Contributed by @Conaclos\n\nPreviously the rule made an erroneous suggestion:\n\n```diff\n- f(function() { return 0, 1; }, \"\");\n+ f(() => 0, 1, \"\")\n```\n\nNow, the rule wraps any comma sequence between parentheses:\n\n```diff\n- f(function() { return 0, 1; }, \"\");\n+ f(() => (0, 1), \"\")\n```\n\n-\nFix [#1473](https://github.com/biomejs/biome/issues/1473): [useHookAtTopLevel](https://biomejs.dev/linter/rules/use-hook-at-top-level/)\nnow correctly handles React components and hooks that are nested inside other functions. Contributed by @arendjr\n\n## 1.5.0 (2024-01-08)\n\nBiome now scores 97% compatibility with Prettier and features more than 180 linter rules.\n\n### Analyzer\n\n### CLI\n\n#### New features\n\n- Biome now shows a diagnostic when it encounters a protected file. Contributed by @ematipico\n\n- The command `biome migrate` now updates the `$schema` if there's an outdated version.\n\n- The CLI now takes in consideration the `.gitignore` in the home directory of the user, if it exists. Contributed by\n  @ematipico\n- The `biome ci` command is now able to\n  print [GitHub Workflow Commands](https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions)\n  when there are diagnostics in our code. Contributed by @nikeee\n  This **might** require setting the proper permissions on your GitHub action:\n  ```yaml\n  permissions:\n    pull-requests: write\n  ```\n- The commands `format`, `lint`, `check` and `ci` now accept two new arguments: `--changed` and `--since`. Use these\n  options with the VCS integration\n  is enabled to process only the files that were changed. Contributed by @simonxabris\n\n  ```shell\n  biome format --write --changed\n  ```\n\n- Introduced a new command called `biome explain`, which has the capability to display documentation for lint rules.\n  Contributed by @kalleep\n- You can use the command `biome explain` to print the documentation of lint rules. Contributed by @kalleep\n  ```shell\n  biome explain noDebugger\n  biome explain useAltText\n  ```\n- You can use the command `biome explain` to print the directory where daemon logs are stored. Contributed by @ematipico\n  ```shell\n  biome explain daemon-logs\n  ```\n- Removed the hard coded limit of 200 printable diagnostics. Contributed by @ematipico\n\n#### Bug fixes\n\n- Fix [#1247](https://github.com/biomejs/biome/issues/1247), Biome now prints a **warning** diagnostic if it encounters\n  files that can't handle. Contributed by @ematipico\n\n  You can ignore unknown file types using\n  the [`files.ignoreUnknown`](https://biomejs.dev/reference/configuration/#filesignoreunknown) configuration\n  in `biome.json`:\n\n  ```jsonc\n  {\n    \"files\": {\n      \"ignoreUnknown\": true\n    }\n  }\n  ```\n\n  Or the `--files-ignore-unknown` CLI option:\n\n  ```shell\n  biome format --files-ignore-unknown=true --write .\n  ```\n\n- Fix [#709](https://github.com/biomejs/biome/issues/709) and [#805](https://github.com/biomejs/biome/issues/805) by\n  correctly parsing `.gitignore` files. Contributed by @ematipico\n\n- Fix [#1117](https://github.com/biomejs/biome/issues/1117) by correctly respecting the matching. Contributed by\n  @ematipico\n\n- Fix [#691](https://github.com/biomejs/biome/issues/691) and [#1190](https://github.com/biomejs/biome/issues/1190), by\n  correctly apply the configuration when\n  computing [`overrides` configuration](https://biomejs.dev/reference/configuration/#overrides). Contributed by\n  @ematipico\n\n### Configuration\n\n#### New features\n\n- Users can specify _git ignore patterns_ inside `ignore` and `include` properties, for example it's possible to **allow\n  list** globs of files using the `!` character:\n\n  ```jsonc\n  {\n    \"files\": {\n      \"ignore\": [\n        \"node_modules/**\",\n        \"!**/dist/**\" // this is now accepted and allow files inside the `dist` folder\n      ]\n    }\n  }\n  ```\n\n### Editors\n\n#### New features\n\n- The LSP registers formatting without the need of using dynamic capabilities from the client.\n\n  This brings formatting services to the editors that don't support or have limited support for dynamic capabilities.\n\n### Formatter\n\n#### Bug fixes\n\n- Fix [#1169](https://github.com/biomejs/biome/issues/1169). Account for escaped strings when computing layout for\n  assignments. Contributed by @kalleep\n- Fix [#851](https://github.com/biomejs/biome/issues/851). Allow regular function expressions to group and break as call\n  arguments, just like arrow function expressions. [#1003](https://github.com/biomejs/biome/issues/1003) Contributed by\n  @faultyserver\n- Fix [#914](https://github.com/biomejs/biome/issues/914). Only parenthesize type-casted function expressions as default\n  exports. [#1023](https://github.com/biomejs/biome/issues/1023) Contributed by @faultyserver\n- Fix [#1112](https://github.com/biomejs/biome/issues/1112). Break block bodies in case clauses onto their own lines and\n  preserve trailing fallthrough comments. [#1035](https://github.com/biomejs/biome/pull/1035) Contributed by\n  @faultyserver\n- Fix `RemoveSoftLinesBuffer` behavior to also removed conditional expanded content, ensuring no accidental, unused line\n  breaks are included [#1032](https://github.com/biomejs/biome/pull/1032) Contributed by @faultyserver\n- Fix [#1024](https://github.com/biomejs/biome/issues/1024). Allow JSX expressions to nestle in arrow\n  chains [#1033](https://github.com/biomejs/biome/pull/1033) Contributed by @faultyserver\n- Fix incorrect breaking on the left side of assignments by always using fluid\n  assignment. [#1021](https://github.com/biomejs/biome/pull/1021) Contributed by @faultyserver\n- Fix breaking strategy for nested object patterns in function\n  parameters [#1054](https://github.com/biomejs/biome/pull/1054) Contributed by @faultyserver\n- Fix over-indention of arrow chain expressions by simplifying the way each chain is\n  grouped [#1036](https://github.com/biomejs/biome/pull/1036), [#1136](https://github.com/biomejs/biome/pull/1136),\n  and [#1162](https://github.com/biomejs/biome/pull/1162) Contributed by @faultyserver.\n- Fix \"simple\" checks for calls and member expressions to correctly handle array accesses, complex arguments to\n  single-argument function calls, and multiple-argument function\n  calls. [#1057](https://github.com/biomejs/biome/pull/1057) Contributed by @faultyserver\n- Fix text wrapping and empty line handling for JSX Text elements to match Prettier's\n  behavior. [#1075](https://github.com/biomejs/biome/pull/1075) Contributed by @faultyserver\n- Fix leading comments in concisely-printed arrays to prevent unwanted line\n  breaks. [#1135](https://github.com/biomejs/biome/pull/1135) Contributed by @faultyserver\n- Fix `best_fitting` and interned elements preventing expansion propagation from sibling\n  elements. [#1141](https://github.com/biomejs/biome/pull/1141) Contributed by @faultyserver\n- Fix heuristic for grouping function parameters when type parameters with constraints are\n  present. [#1153](https://github.com/biomejs/biome/pull/1153). Contributed by @faultyserver.\n- Fix binary-ish and type annotation handling for grouping call arguments in function expressions and call\n  signatures. [#1152](https://github.com/biomejs/biome/pull/1152)\n  and [#1160](https://github.com/biomejs/biome/pull/1160) Contributed by @faultyserver\n- Fix handling of nestled JSDoc comments to preserve behavior for\n  overloads. [#1195](https://github.com/biomejs/biome/pull/1195) Contributed by @faultyserver\n- Fix [#1208](https://github.com/biomejs/biome/issues/1208). Fix extraction of inner types when checking for simple type\n  annotations in call arguments. [#1195](https://github.com/biomejs/biome/pull/1195) Contributed by @faultyserver\n\n- Fix [#1220](https://github.com/biomejs/biome/issues/1220). Avoid duplicating comments in type unions for mapped, empty\n  object, and empty tuple types. [#1240](https://github.com/biomejs/biome/pull/1240) Contributed by @faultyserver\n\n- Fix [#1356](https://github.com/biomejs/biome/issues/1356). Ensure `if_group_fits_on_line` content is always written\n  in `RemoveSoftLinesBuffer`s. [#1357](https://github.com/biomejs/biome/pull/1357) Contributed by @faultyserver\n\n- Fix [#1171](https://github.com/biomejs/biome/issues/1171). Correctly format empty statement with comment inside arrow\n  body when used as single argument in call expression. Contributed by @kalleep\n\n- Fix [#1106](https://github.com/biomejs/biome/issues/1106). Fix invalid formatting of single bindings when Arrow\n  Parentheses is set to \"AsNeeded\" and the expression breaks over multiple\n  lines. [#1449](https://github.com/biomejs/biome/pull/1449) Contributed by @faultyserver\n\n### JavaScript APIs\n\n### Linter\n\n#### Promoted rules\n\nNew rules are incubated in the nursery group.\nOnce stable, we promote them to a stable group.\nThe following rules are promoted:\n\n- [a11y/noAriaHiddenOnFocusable](https://www.biomejs.dev/linter/rules/no-aria-hidden-on-focusable)\n- [a11y/useValidAriaRole](https://www.biomejs.dev/linter/rules/use-valid-aria-role)\n- [complexity/useRegexLiterals](https://www.biomejs.dev/linter/rules/use-regex-literals)\n- [suspicious/noImplicitAnyLet](https://www.biomejs.dev/linter/rules/no-implicit-any-let)\n- [style/noDefaultExport](https://www.biomejs.dev/linter/rules/no-default-export)\n\n#### New features\n\n- Add [useExportType](https://biomejs.dev/linter/rules/use-export-type) that enforces the use of type-only exports for\n  types. Contributed by @Conaclos\n\n  ```diff\n    interface A {}\n    interface B {}\n    class C {}\n\n  - export type { A, C }\n  + export { type A, C }\n\n  - export { type B }\n  + export type { B }\n  ```\n\n- Add [useImportType](https://biomejs.dev/linter/rules/use-import-type) that enforces the use of type-only imports for\n  types. Contributed by @Conaclos\n\n  ```diff\n  - import { A, B } from \"./mod.js\";\n  + import { type A, B } from \"mod\";\n    let a: A;\n    const b: B = new B();\n  ```\n\n  Also, the rule groups type-only imports:\n\n  ```diff\n  - import { type A, type B } from \"./mod.js\";\n  + import type { A, B } from \"./mod.js\";\n  ```\n\n- Add [useFilenamingConvention](https://biomejs.dev/linter/rules/use-filenaming-convention), that enforces naming\n  conventions for JavaScript and TypeScript filenames. Contributed by @Conaclos\n\n  By default, the rule requires that a filename be in `camelCase`, `kebab-case`, `snake_case`, or matches the name of\n  an `export` in the file.\n  The rule provides options to restrict the allowed cases.\n\n- Add [useNodejsImportProtocol](https://biomejs.dev/linter/rules/use-nodejs-import-protocol) that enforces the use of\n  the `node:` protocol when importing _Node.js_ modules. Contributed by @2-NOW, @vasucp1207, and @Conaclos\n\n  ```diff\n  - import fs from \"fs\";\n  + import fs from \"node:fs\";\n  ```\n\n- Add [useNumberNamespace](https://biomejs.dev/linter/rules/use-number-namespace) that enforces the use of the `Number`\n  properties instead of the global ones.\n\n  ```diff\n  - parseInt;\n  + Number.parseInt;\n  - - Infinity;\n  + Number.NEGATIVE_INFINITY;\n  ```\n\n- Add [useShorthandFunctionType](https://biomejs.dev/linter/rules/use-shorthand-function-type) that enforces using\n  function types instead of object type with call signatures. Contributed by @emab, @ImBIOS, and @seitarof\n\n  ```diff\n  - interface Example {\n  -   (): string;\n  - }\n  + type Example = () => string\n\n```\n\n- Add [noNodejsModules](https://biomejs.dev/linter/rules/no-nodejs-modules), that disallows the use of _Node.js_ modules. Contributed by @anonrig, @ematipico, and @Conaclos\n\n- Add [noInvalidUseBeforeDeclaration](https://biomejs.dev/linter/rules/no-invalid-use-before-declaration) that reports variables and function parameters used before their declaration. Contributed by @Conaclos\n\n  ```js\n  function f() {\n    console.log(c); // Use of `c` before its declaration.\n    const c = 0;\n  }\n  ```\n\n- Add [useConsistentArrayType](https://biomejs.dev/linter/rules/use-consistent-array-type) that enforces the use of a\n  consistent syntax for array types. Contributed by @eryue0220\n\n  This rule will replace [useShorthandArrayType](https://biomejs.dev/linter/rules/use-shorthand-array-type).\n  It provides an option to choose between the shorthand or the generic syntax.\n\n- Add [noEmptyTypeParameters](https://biomejs.dev/linter/rules/no-empty-type-parameters) that ensures that any type\n  parameter list has at least one type parameter. Contributed by @togami2864\n\n  This will report the following empty type parameter lists:\n\n  ```ts\n  interface Foo<> {}\n  //           ^^\n  type Bar<> = {};\n  //      ^^\n  ```\n\n- Add [noGlobalEval](https://biomejs.dev/linter/rules/no-global-eval) that reports any use of the global `eval`.\n  Contributed by @you-5805\n\n- Add [noGlobalAssign](https://biomejs.dev/linter/rules/no-global-assign) that reports assignment to global variables.\n  Contributed by @chansuke\n\n  ```js\n  Object = {}; // report assignment to `Object`.\n  ```\n\n- Add [noMisleadingCharacterClass](https://biomejs.dev/linter/rules/no-misleading-character-class) that disallows\n  characters made with multiple code points in character class. Contributed by @togami2864\n\n- Add [noThenProperty](https://biomejs.dev/linter/rules/no-then-property) that disallows the use of `then` as property\n  name. Adding a `then` property makes an object _thenable_ that can lead to errors with Promises. Contributed by\n  @togami2864\n\n- Add [noUselessTernary](https://biomejs.dev/linter/rules/no-useless-ternary) that disallows conditional expressions (\n  ternaries) when simpler alternatives exist.\n\n  ```js\n  var a = x ? true : true; // this could be simplified to `x`\n  ```\n\n#### Enhancements\n\n- [noEmptyInterface](https://biomejs.dev/linter/rules/no-empty-interface) ignores empty interfaces that extend a type.\n  Address [#959](https://github.com/biomejs/biome/issues/959) and [#1157](https://github.com/biomejs/biome/issues/1157).\n  Contributed by @Conaclos\n\n  This allows supporting interface augmentation in external modules as demonstrated in the following example:\n\n  ```ts\n  interface Extension {\n    metadata: unknown;\n  }\n\n  declare module \"@external/module\" {\n    // Empty interface that extends a type.\n    export interface ExistingInterface extends Extension {}\n  }\n  ```\n\n- Preserve more comments in the code fix\n  of [useExponentiationOperator](https://biomejs.dev/linter/rules/use-exponentiation-operator). Contributed by @Conaclos\n\n  The rule now preserves comments that follow the (optional) trailing comma.\n\n  For example, the rule now suggests the following code fix:\n\n  ```diff\n  - Math.pow(\n  -    a, // a\n  -    2, // 2\n  -  );\n  +\n  +    a ** // a\n  +    2 // 2\n  +\n  ```\n\n- `<svg>` element is now considered as a non-interactive HTML\n  element ([#1095](https://github.com/biomejs/biome/issues/1095)). Contributed by @chansuke\n\n  This affects the following rules:\n  - [noAriaHiddenOnFocusable](https://biomejs.dev/linter/rules/no-aria-hidden-on-focusable)\n  - [noInteractiveElementToNoninteractiveRole](https://biomejs.dev/linter/rules/no-interactive-element-to-noninteractive-role)\n  - [noNoninteractiveElementToInteractiveRole](https://biomejs.dev/linter/rules/no-noninteractive-element-to-interactive-role)\n  - [noNoninteractiveTabindex](https://biomejs.dev/linter/rules/no-noninteractive-tabindex)\n  - [useAriaActivedescendantWithTabindex](https://biomejs.dev/linter/rules/use-aria-activedescendant-with-tabindex)\n\n- [noMultipleSpacesInRegularExpressionLiterals](https://biomejs.dev/linter/rules/no-multiple-spaces-in-regular-expression-literals/)\n  has a safe code fix. Contributed by @Conaclos\n\n- [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function/) ignores expressions that use `new.target`.\n  Contributed by @Conaclos\n\n- [noForEach](https://biomejs.dev/linter/rules/no-for-each) now reports only calls that use a callback with `0` or `1`\n  parameter. Address [#547](https://github.com/biomejs/biome/issues/547). Contributed by @Conaclos\n\n#### Bug fixes\n\n-\nFix [#1061](https://github.com/biomejs/biome/issues/1061). [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare)\nno longer reports overloads of `export default function`. Contributed by @Conaclos\n\nThe following code is no longer reported:\n\n```ts\nexport default function(a: boolean): boolean;\nexport default function(a: number): number;\nexport default function(a: number | boolean): number | boolean {\n  return a;\n}\n```\n\n-\nFix [#651](https://github.com/biomejs/biome/issues/651), [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies)\nno longer reports out of scope dependencies. Contributed by @kalleep\n\nThe following code is no longer reported:\n```ts\nlet outer = false;\n\nconst Component = ({}) => {\n  useEffect(() => {\n    outer = true;\n  }, []);\n}\n```\n\n-\nFix [#1191](https://github.com/biomejs/biome/issues/1191). [noUselessElse](https://biomejs.dev/linter/rules/no-useless-else)\nnow preserve comments of the `else` clause. Contributed by @Conaclos\n\nFor example, the rule suggested the following fix:\n\n```diff\n  function f(x) {\n    if (x <0) {\n      return 0;\n    }\n-   // Comment\n-   else {\n      return x;\n-   }\n  }\n```\n\nNow the rule suggests a fix that preserves the comment of the `else` clause:\n\n```diff\n  function f(x) {\n    if (x <0) {\n      return 0;\n    }\n    // Comment\n-   else {\n      return x;\n-   }\n  }\n```\n\n-\nFix [#1383](https://github.com/biomejs/biome/issues/1383). [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type)\nnow accepts the `void` type in type parameter lists.\n\nThe rule no longer reports the following code:\n\n```ts\nf<void>();\n```\n\n-\nFix [#728](https://github.com/biomejs/biome/issues/728). [useSingleVarDeclarator](https://biomejs.dev/linter/rules/use-single-var-declarator)\nno longer outputs invalid code. Contributed by @Conaclos\n\n-\nFix [#1167](https://github.com/biomejs/biome/issues/1167). [useValidAriaProps](https://biomejs.dev/linter/rules/use-valid-aria-props)\nno longer reports `aria-atomic` as invalid. Contributed by @unvalley\n\n-\nFix [#1192](https://github.com/biomejs/biome/issues/1192). [useTemplate](https://biomejs.dev/linter/rules/use-template/)\nnow correctly handles parenthesized expressions and respects type coercions. Contributed by @n-gude\n\nThese cases are now properly handled:\n\n```js\n\"a\" + (1 + 2) // `a${1 + 2}`\n```\n\n```js\n1 + (2 + \"a\") // `${1}${2}a`\n```\n\n-\nFix [#1456](https://github.com/biomejs/biome/issues/1456). [useTemplate](https://biomejs.dev/linter/rules/use-template/)\nnow reports expressions with an interpolated template literal and non-string expressions. Contributed by @n-gude\n\nThe following code is now reported:\n\n```js\n`a${1}` + 2;\n```\n\n-\nFix [#1436](https://github.com/biomejs/biome/issues/1436). [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function/)\nnow applies a correct fix when a function expression is used in a call expression or a member access. Contributed by\n@Conaclos\n\nFor example, the rule proposed the following fix:\n\n```diff\n- const called = function() {}();\n+ const called = () => {}();\n```\n\nIt now proposes a fix that adds the needed parentheses:\n\n```diff\n- const called = function() {}();\n+ const called = (() => {})();\n```\n\n-\nFix [#696](https://github.com/biomejs/biome/issues/696). [useHookAtTopLevel](https://biomejs.dev/linter/rules/use-hook-at-top-level)\nnow correctly detects early returns before the calls to the hook.\n\n- The code fix of [noUselessTypeCOnstraint](https://biomejs.dev/linter/rules/no-useless-type-constraint) now adds a\n  trailing comma when needed to disambiguate a type parameter list from a JSX element. COntributed by @Conaclos\n\n-\nFix [#578](https://github.com/biomejs/biome/issues/578). [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies)\nnow correctly recognizes hooks namespaced under the `React` namespace. Contributed by @XiNiHa\n\n-\nFix [#910](https://github.com/biomejs/biome/issues/910). [noSvgWithoutTitle](https://biomejs.dev/linter/rules/no-svg-without-title)\nnow ignores `<svg>` element with `aria-hidden=\"true\"`. COntributed by @vasucp1207\n\n### Parser\n\n#### BREAKING CHANGES\n\n- The representation of imports has been simplified. Contributed by @Conaclos\n\n  The new representation is closer to the ECMAScript standard.\n  It provides a single way of representing a namespace import such as `import * as ns from \"\"`.\n  It rules out some invalid states that was previously representable.\n  For example, it is no longer possible to represent a combined import with a `type` qualifier such\n  as `import type D, { N } from \"\"`.\n\n  See [#1163](https://github.com/biomejs/biome/pull/1163) for more details.\n\n#### New features\n\n- Imports and exports with both an _import attribute_ and a `type` qualifier are now reported as parse errors.\n\n  ```ts\n  import type A from \"mod\" with { type: \"json\" };\n  //     ^^^^              ^^^^^^^^^^^^^^^^^^^^^\n  //     parse error\n  ```\n\n#### Bug fixes\n\n- Fix [#1077](https://github.com/biomejs/biome/issues/1077) where parenthesized identifiers in conditional expression\n  were being parsed as arrow expressions. Contributed by @kalleep\n\n  These cases are now properly parsed:\n\n  _JavaScript_:\n\n  ```javascript\n    a ? (b) : a => {};\n  ```\n\n  _TypeScript_:\n\n  ```ts\n    a ? (b) : a => {};\n  ```\n\n  _JSX_:\n\n  ```jsx\n    bar ? (foo) : (<a>{() => {}}</a>);\n  ```\n\n- Allow empty type parameter lists for interfaces and type\n  aliases ([#1237](https://github.com/biomejs/biome/issues/1237)). COntributed by @togami2864\n\n  _TypeScript_ allows interface declarations and type aliases to have empty type parameter lists.\n  Previously Biome didn't handle this edge case.\n  Now, it correctly parses this syntax:\n\n  ```ts\n  interface Foo<> {}\n  type Bar<> = {};\n  ```\n\n### Crates\n\n#### BREAKING CHANGES\n\n- Rename the `biome_js_unicode_table` crate\n  to `biome_unicode_table` ([#1302](https://github.com/biomejs/biome/issues/1302)). COntributed by @chansuke\n\n## 1.4.1 (2023-11-30)\n\n### Editors\n\n#### Bug fixes\n\n- Fix [#933](https://github.com/biomejs/biome/issues/933). Some files are properly ignored in the LSP too.\n  E.g. `package.json`, `tsconfig.json`, etc.\n- Fix [#1394](https://github.com/biomejs/biome/issues/1394), by inferring the language extension from the internal saved\n  files. Now newly created files JavaScript correctly show diagnostics.\n\n### Formatter\n\n#### Bug fixes\n\n- Fix some accidental line breaks when printing array expressions within arrow functions and other long\n  lines [#917](https://github.com/biomejs/biome/pull/917). Contributed by @faultyserver\n\n- Match Prettier's breaking strategy for `ArrowChain` layouts [#934](https://github.com/biomejs/biome/pull/934).\n  Contributed by @faultyserver\n\n- Fix double-printing of leading comments in arrow chain expressions [#951](https://github.com/biomejs/biome/pull/951).\n  Contributed by @faultyserver\n\n### Linter\n\n#### Bug fixes\n\n- Fix [#910](https://github.com/biomejs/biome/issues/910), where the rule `noSvgWithoutTitle` should skip elements that\n  have `aria-hidden` attributes. Contributed by @vasucp1207\n\n#### New features\n\n- Add [useForOf](https://biomejs.dev/linter/rules/use-for-of) rule.\n  The rule recommends a for-of loop when the loop index is only used to read from an array that is being iterated.\n  Contributed by @victor-teles\n\n#### Enhancement\n\n- Address [#924](https://github.com/biomejs/biome/issues/924)\n  and [#920](https://github.com/biomejs/biome/issues/920). [noUselessElse](https://biomejs.dev/linter/rules/no-useless-else)\n  now ignores `else` clauses that follow at least one `if` statement that doesn't break early. Contributed by @Conaclos\n\n  For example, the following code is no longer reported by the rule:\n\n  ```js\n  function f(x) {\n      if (x < 0) {\n        // this `if` doesn't break early.\n      } else if (x > 0) {\n          return x;\n      } else {\n          // This `else` block was previously reported as useless.\n      }\n  }\n  ```\n\n#### Bug fixes\n\n-\nFix [#918](https://github.com/biomejs/biome/issues/918). [useSimpleNumberKeys](https://biomejs.dev/linter/rules/use-simple-number-keys)\nno longer reports false positive on comments. Contributed by @kalleep\n\n- Fix [#953](https://github.com/biomejs/biome/issues/953). [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare)\n  no longer reports type parameters with the same name in different mapped types as redeclarations. Contributed by\n  @Conaclos\n\n-\nFix [#608](https://github.com/biomejs/biome/issues/608). [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies)\nno longer reports missing dependencies for React hooks without dependency array. Contributed by @kalleep\n\n### Parser\n\n## 1.4.0 (2023-11-27)\n\n### CLI\n\n- Remove the CLI options from the `lsp-proxy`, as they were never meant to be passed to that command. Contributed by\n  @ematipico\n\n- Add option `--config-path` to `lsp-proxy` and `start` commands. It's now possible to tell the Daemon server to\n  load `biome.json` from a custom path. Contributed by @ematipico\n\n- Add option `--diagnostic-level`. It lets users control the level of diagnostics printed by the CLI. Possible values\n  are: `\"info\"`, `\"warn\"`, and `\"hint\"`. Contributed by @simonxabris\n\n- Add option `--line-feed` to the `format` command. Contributed by @SuperchupuDev\n\n- Add option `--bracket-same-line` to the `format` command. Contributed by @faultyserver\n\n- Add option `--bracket-spacing` to the `format` command. Contributed by @faultyserver\n\n#### Bug fixes\n\n- Fix the command `format`, now it returns a non-zero exit code when if there pending diffs. Contributed by @ematipico\n\n### Formatter\n\n#### New features\n\n- Add the configuration [`formatter.lineFeed`](https://biomejs.dev/reference/configuration/#formatterlineending). It\n  allows changing the type of line endings. Contributed by @SuperchupuDev\n\n- Add the\n  configuration [`javascript.formatter.bracketSameLine`](https://biomejs.dev/reference/configuration/#formatterbracketsameline).\n  It allows controlling whether ending `>` of a multi-line _JSX_ element should be on the last attribute line or\n  not. [#627](https://github.com/biomejs/biome/issues/627). Contributed by @faultyserver\n\n- Add the\n  configuration [`javascript.formatter.bracketSpacing`](https://biomejs.dev/reference/configuration/#formatterbracketspacing).\n  It allows controlling whether spaces are inserted around the brackets of object\n  literals. [#627](https://github.com/biomejs/biome/issues/627). Contributed by @faultyserver\n\n#### Bug fixes\n\n- Fix [#832](https://github.com/biomejs/biome/issues/832), the formatter no longer keeps an unnecessary trailing comma\n  in type parameter lists. Contributed by @Conaclos\n\n  ```diff\n  - class A<T,> {}\n  + class A<T> {}\n  ```\n\n- Fix [#301](https://github.com/biomejs/biome/issues/301), the formatter should not break before the `in` keyword.\n  Contributed by @ematipico\n\n### Linter\n\n#### Promoted rules\n\n- [a11y/noInteractiveElementToNoninteractiveRole](https://biomejs.dev/linter/rules/no-interactive-element-to-noninteractive-role)\n- [complexity/noThisInStatic](https://biomejs.dev/linter/rules/no-this-in-static)\n- [complexity/useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function)\n- [correctness/noEmptyCharacterClassInRegex](https://biomejs.dev/linter/rules/no-empty-character-class-in-regex)\n- [correctness/noInvalidNewBuiltin](https://biomejs.dev/linter/rules/no-invalid-new-builtin)\n- [style/noUselessElse](https://biomejs.dev/linter/rules/no-useless-else)\n- [style/useAsConstAssertion](https://biomejs.dev/linter/rules/use-as-const-assertion)\n- [style/useShorthandAssign](https://biomejs.dev/linter/rules/use-shorthand-assign)\n- [suspicious/noApproximativeNumericConstant](https://biomejs.dev/linter/rules/no-approximative-numeric-constant)\n- [suspicious/noMisleadingInstantiator](https://biomejs.dev/linter/rules/no-misleading-instantiator)\n- [suspicious/noMisrefactoredShorthandAssign](https://biomejs.dev/linter/rules/no-misrefactored-shorthand-assign)\n\nThe following rules are now recommended:\n\n- [a11y/noAccessKey](https://biomejs.dev/linter/rules/no-access-key)\n- [a11y/useHeadingContent](https://biomejs.dev/linter/rules/use-heading-content)\n- [complexity/useSimpleNumberKeys](https://biomejs.dev/linter/rules/use-simple-number-keys)\n\nThe following rules are now deprecated:\n\n- [correctness/noNewSymbol](https://biomejs.dev/linter/rules/no-new-symbol)\n  The rule is replaced by [correctness/noInvalidNewBuiltin](https://biomejs.dev/linter/rules/no-invalid-new-builtin)\n\n#### New features\n\n- Add [noDefaultExport](https://biomejs.dev/linter/rules/no-default-export) which disallows `export default`.\n  Contributed by @Conaclos\n\n- Add [noAriaHiddenOnFocusable](https://biomejs.dev/linter/rules/no-aria-hidden-on-focusable) which reports hidden and\n  focusable elements. Contributed by @vasucp1207\n\n- Add [noImplicitAnyLet](https://biomejs.dev/linter/rules/no-implicit-any-let) that reports variables declared\n  with `let` and without initialization and type annotation. Contributed by @TaKO8Ki and @b4s36t4\n\n- Add [useAwait](https://biomejs.dev/linter/rules/use-await) that reports `async` functions that don't use an `await`\n  expression.\n\n- Add [useValidAriaRole](https://biomejs.dev/linter/rules/use-valid-aria-role). Contributed by @vasucp1207\n\n- Add [useRegexLiterals](https://biomejs.dev/linter/rules/use-regex-literals) that suggests turning call to the regex\n  constructor into regex literals. COntributed by @Yuiki\n\n#### Enhancements\n\n- Add an unsafe code fix\n  for [a11y/useAriaActivedescendantWithTabindex](https://biomejs.dev/linter/rules/use-aria-activedescendant-with-tabindex)\n\n#### Bug fixes\n\n- Fix [#639](https://github.com/biomejs/biome/issues/639) by ignoring unused TypeScript's mapped key. Contributed by\n  @Conaclos\n\n- Fix [#565](https://github.com/biomejs/biome/issues/565) by handling several `infer` with the same name in extends\n  clauses of TypeScript's conditional types. Contributed by @Conaclos\n\n-\nFix [#653](https://github.com/biomejs/biome/issues/653). [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports)\nnow correctly removes the entire line where the unused `import` is. Contributed by @Conaclos\n\n- Fix [#607](https://github.com/biomejs/biome/issues/609) `useExhaustiveDependencies`, ignore optional chaining,\n  Contributed by @msdlisper\n\n- Fix [#676](https://github.com/biomejs/biome/issues/676), by using the correct node for the `\"noreferrer\"` when\n  applying the code action. Contributed by @ematipico\n\n- Fix [#455](https://github.com/biomejs/biome/issues/455). The CLI can now print complex emojis to the console\n  correctly.\n\n-\nFix [#727](https://github.com/biomejs/biome/issues/727). [noInferrableTypes](https://biomejs.dev/linter/rules/no-inferrable-types)\nnow correctly keeps type annotations when the initialization expression is `null`. Contributed by @Conaclos\n\n-\nFix [#784](https://github.com/biomejs/biome/issues/784), [noSvgWithoutTitle](https://biomejs.dev/linter/rules/no-svg-without-title)\nfixes false-positives to `aria-label` and reports svg's role attribute is implicit. Contributed by @unvalley\n\n- Fix [#834](https://github.com/biomejs/biome/issues/834) that\n  made [noUselessLoneBlockStatements](https://biomejs.dev/linter/rules/no-useless-lone-block-statements) reports block\n  statements of switch clauses. Contributed by @vasucp1207\n\n- Fix [#783](https://github.com/biomejs/biome/issues/834) that\n  made [noUselessLoneBlockStatements](https://biomejs.dev/linter/rules/no-useless-lone-block-statements) reports block\n  statements of `try-catch` structures. Contributed by @hougesen\n\n- Fix [#69](https://github.com/biomejs/biome/issues/69) that\n  made [correctness/noUnnecessaryContinue](https://biomejs.dev/linter/rules/no-unnecessary-continue) incorrectly reports\n  a `continue` used to break a switch clause. Contributed by @TaKO8Ki\n\n- Fix [#664](https://github.com/biomejs/biome/issues/664) by improving the diagnostic\n  of [style/useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention) when double capital are\n  detected in strict camel case mode. Contributed by @vasucp1207\n\n- Fix [#643](https://github.com/biomejs/biome/issues/643) that erroneously parsed the option\n  of [complexity/useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-naming-convention). Contributed by\n  @arendjr\n\n### Parser\n\n#### Bug fixes\n\n- Fix [#846](https://github.com/biomejs/biome/issues/846) that erroneously parsed `<const T,>() => {}` as a JSX tag\n  instead of an arrow function when both TypeScript and JSX are enabled.\n\n### VSCode\n\n## 1.3.3 (2023-10-31)\n\n### Analyzer\n\n#### Bug fixes\n\n- Fix [#604](https://github.com/biomejs/biome/issues/604) which\n  made [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type) report false positives when\n  the `void` type is used in a generic type parameter. Contributed by @unvalley\n\n### CLI\n\n#### Bug fixes\n\n- Fix how `overrides` behave. Now `ignore` and `include` apply or not the override pattern, so they override each other.\n  Now the options inside `overrides` override the top-level options.\n- Bootstrap the logger only when needed. Contributed by @ematipico\n- Fix how `overrides` are run. The properties `ignore` and `include` have different semantics and only apply/not apply\n  an override. Contributed by @ematipico\n\n### Editors\n\n#### Bug fixes\n\n- Fix [#592](https://github.com/biomejs/biome/issues/592), by changing binary resolution in the IntelliJ plugin.\n  Contributed by @Joshuabaker2\n\n### Formatter\n\n#### Bug fixes\n\n- Apply the correct layout when the right hand of an assignment expression is an `await` expression or a yield\n  expression. Contributed by @ematipico\n\n- Fix [#303](https://github.com/biomejs/biome/issues/303), where nested arrow functions didn't break. Contributed by\n  @victor-teles\n\n### Linter\n\n#### New features\n\n- Add [noUnusedPrivateClassMembers](https://biomejs.dev/linter/rules/no-unused-private-class-members) rule. The rule\n  disallow unused private class members. Contributed by @victor-teles\n\n#### Bug fixes\n\n- Fix [#175](https://github.com/biomejs/biome/issues/175) which\n  made [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare) report index signatures using the name of a variable\n  in the parent scope.\n\n- Fix [#557](https://github.com/biomejs/biome/issues/557) which\n  made [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports) report imported types used in `typeof`\n  expression. Contributed by @Conaclos\n\n- Fix [#576](https://github.com/biomejs/biome/issues/576) by removing some erroneous logic\n  in [noSelfAssign](https://biomejs.dev/linter/rules/no-self-assign/). Contributed by @ematipico\n\n- Fix [#861](https://github.com/biomejs/biome/issues/861) that\n  made [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) always reports the parameter of a\n  non-parenthesize arrow function as unused.\n\n- Fix [#595](https://github.com/biomejs/biome/issues/595) by updating unsafe-apply logic to avoid unexpected errors\n  in [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/). Contributed by @nissy-dev\n\n- Fix [#591](https://github.com/biomejs/biome/issues/591) which\n  made [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare) report type parameters with identical names but in\n  different method signatures. Contributed by @Conaclos\n\n- Support more a11y roles and fix some methods for a11y lint rules Contributed @nissy-dev\n\n- Fix [#609](https://github.com/biomejs/biome/issues/609) `useExhaustiveDependencies`, by removing `useContext`, `useId`\n  and `useSyncExternalStore` from the known hooks. Contributed by @msdlisper\n\n- Fix `useExhaustiveDependencies`, by removing `useContext`, `useId` and `useSyncExternalStore` from the known hooks.\n  Contributed by @msdlisper\n\n- Fix [#871](https://github.com/biomejs/biome/issues/871) and [#610](https://github.com/biomejs/biome/issues/610).\n  Now `useHookAtTopLevel` correctly handles nested functions. Contributed by @arendjr\n\n- The options of the rule `useHookAtTopLevel` are deprecated and will be removed in Biome 2.0. The rule now determines\n  the hooks using the naming convention set by React.\n\n  ```diff\n  {\n    \"linter\": {\n      \"rules\": {\n        \"correctness\": {\n  +        \"useHookAtTopLevel\": \"error\",\n  -        \"useHookAtTopLevel\": {\n  -          \"level\": \"error\",\n  -          \"options\": {\n  -            \"hooks\": [\n  -              {\n  -                \"name\": \"useLocation\",\n  -                \"closureIndex\": 0,\n  -                \"dependenciesIndex\": 1\n  -              },\n  -              { \"name\": \"useQuery\", \"closureIndex\": 1, \"dependenciesIndex\": 0 }\n  -            ]\n  -          }\n  -        }\n        }\n      }\n    }\n  }\n  ```\n\n### Parser\n\n#### Enhancements\n\n- Support RegExp v flag. Contributed by @nissy-dev\n- Improve error messages. Contributed by @ematipico\n\n## 1.3.1 (2023-10-20)\n\n### CLI\n\n#### Bug fixes\n\n- Fix `rage` command, now it doesn't print info about running servers. Contributed by @ematipico\n\n### Editors\n\n#### Bug fixes\n\n- Fix [#552](https://github.com/biomejs/biome/issues/552), where the formatter isn't correctly triggered in Windows\n  systems. Contributed by @victor-teles\n\n### Linter\n\n#### New features\n\n- Add [noThisInStatic](https://biomejs.dev/linter/rules/no-this-in-static) rule. Contributed by @ditorodev and @Conaclos\n\n#### Bug fixes\n\n- Fix [#548](https://github.com/biomejs/biome/issues/548) which\n  made [noSelfAssign](https://biomejs.dev/linter/rules/no-self-assign) panic.\n\n- Fix [#555](https://github.com/biomejs/biome/issues/555), by correctly map `globals` into the workspace.\n\n## 1.3.0 (2023-10-19)\n\n### Analyzer\n\n#### Enhancements\n\n- Import sorting is safe to apply now, and it will be applied when running `check --apply` instead\n  of `check --apply-unsafe`.\n\n- Import sorting now handles Bun imports `bun:<name>`, absolute path imports `/<path>`,\n  and [Node's subpath imports `#<name>`](https://nodejs.org/api/packages.html#subpath-imports).\n  See [our documentation](https://biomejs.dev/analyzer/) for more details. Contributed by @Conaclos\n\n### CLI\n\n#### Bug fixes\n\n- Fix [#319](https://github.com/biomejs/biome/issues/319). The command `biome lint` now shows the correct options.\n  Contributed by @ematipico\n- Fix [#312](https://github.com/biomejs/biome/issues/312). Running `biome --version` now exits with status code `0`\n  instead of `1`. Contributed by @nhedger\n- Fix a bug where the `extends` functionality doesn't carry over `organizeImports.ignore`. Contributed by @ematipico\n- The CLI now returns the original content when using `stdin` and the original content doesn't change. Contributed by\n  @ematipico\n\n#### New features\n\n- Add support for `BIOME_BINARY` environment variable to override the location of the binary. Contributed by @ematipico\n- Add option `--indent-width`, and deprecated the option `--indent-size`. Contributed by @ematipico\n- Add option `--javascript-formatter-indent-width`, and deprecated the option `--javascript-formatter-indent-size`.\n  Contributed by @ematipico\n- Add option `--json-formatter-indent-width`, and deprecated the option `--json-formatter-indent-size`. Contributed by\n  @ematipico\n- Add option `--daemon-logs` to `biome rage`. The option is required to view Biome daemon server logs. Contributed by\n  @unvalley\n- Add support for logging. By default, Biome doesn't log anything other than diagnostics. Logging can be enabled with\n  the new option `--log-level`:\n\n  ```shell\n  biome format --log-level=info ./src\n  ```\n  There are four different levels of logging, from the most verbose to the least verbose: `debug`, `info`, `warn`\n  and `error`. Here's how an `INFO` log will look like:\n\n  ```\n  2023-10-05T08:27:01.954727Z  INFO  Analyze file ./website/src/playground/components/Resizable.tsx\n    at crates/biome_service/src/file_handlers/javascript.rs:298 on biome::worker_5\n    in Pulling diagnostics with categories: RuleCategories(SYNTAX)\n    in Processes formatting with path: \"./website/src/playground/components/Resizable.tsx\"\n    in Process check with path: \"./website/src/playground/components/Resizable.tsx\"\n  ```\n\n  You can customize how the log will look like with a new option `--log-kind`. The supported kinds\n  are: `pretty`, `compact` and `json`.\n\n  `pretty` is the default logging. Here's how a `compact` log will look like:\n\n  ```\n  2023-10-05T08:29:04.864247Z  INFO biome::worker_2 Process check:Processes linting:Pulling diagnostics: crates/biome_service/src/file_handlers/javascript.rs: Analyze file ./website/src/playground/components/Resizable.tsx path=\"./website/src/playground/components/Resizable.tsx\" path=\"./website/src/playground/components/Resizable.tsx\" categories=RuleCategories(LINT)\n  2023-10-05T08:29:04.864290Z  INFO biome::worker_7 Process check:Processes formatting: crates/biome_service/src/file_handlers/javascript.rs: Format file ./website/src/playground/components/Tabs.tsx path=\"./website/src/playground/components/Tabs.tsx\" path=\"./website/src/playground/components/Tabs.tsx\"\n  2023-10-05T08:29:04.879332Z  INFO biome::worker_2 Process check:Processes formatting:Pulling diagnostics: crates/biome_service/src/file_handlers/javascript.rs: Analyze file ./website/src/playground/components/Resizable.tsx path=\"./website/src/playground/components/Resizable.tsx\" path=\"./website/src/playground/components/Resizable.tsx\" categories=RuleCategories(SYNTAX)\n  2023-10-05T08:29:04.879383Z  INFO biome::worker_2 Process check:Processes formatting: crates/biome_service/src/file_handlers/javascript.rs: Format file ./website/src/playground/components/Resizable.tsx path=\"./website/src/playground/components/Resizable.tsx\" path=\"./website/src/playground/components/Resizable.tsx\"\n  ```\n\n#### Enhancements\n\n- Deprecated the environment variable `ROME_BINARY`. Use `BIOME_BINARY` instead. Contributed by @ematipico\n- Biome doesn't check anymore the presence of the `.git` folder when VCS support is enabled. Contributed by @ematipico\n- `biome rage` doesn't print the logs of the daemon, use `biome rage --daemon-logs` to print them. Contributed by\n  @unvalley\n\n### Configuration\n\n#### New features\n\n- Add option `formatter.indentWidth`, and deprecated the option `formatter.indentSize`. Contributed by @ematipico\n- Add option `javascript.formatter.indentWidth`, and deprecated the option `javascript.formatter.indentSize`.\n  Contributed by @ematipico\n- Add option `json.formatter.indentWidth`, and deprecated the option `json.formatter.indentSize`. Contributed by\n  @ematipico\n- Add option `include` to multiple sections of the configuration\n  - `files.include`;\n  - `formatter.include`;\n  - `linter.include`;\n  - `organizeImports.include`;\n    When `include` and `ignore` are both specified, `ignore` takes **precedence** over `include`\n- Add option `overrides`, where users can modify the behaviour of the tools for certain files or paths.\n\n  For example, it's possible to modify the formatter `lineWidth`, and even `quoteStyle` for certain files that are\n  included in glob path `generated/**`:\n\n  ```json\n  {\n    \"formatter\": {\n      \"lineWidth\": 100\n    },\n    \"overrides\": [\n      {\n        \"include\": [\"generated/**\"],\n        \"formatter\": {\n          \"lineWidth\": 160\n        },\n        \"javascript\": {\n          \"formatter\": {\n            \"quoteStyle\": \"single\"\n          }\n        }\n      }\n    ]\n  }\n  ```\n\n  Or, you can disable certain rules for certain path, and disable the linter for other paths:\n\n  ```json\n  {\n    \"linter\": {\n      \"enabled\": true,\n      \"rules\": {\n        \"recommended\": true\n      }\n    },\n    \"overrides\": [\n      {\n        \"include\": [\"lib/**\"],\n        \"linter\": {\n          \"rules\": {\n            \"suspicious\": {\n              \"noDebugger\": \"off\"\n            }\n          }\n        }\n      },\n      {\n        \"include\": [\"shims/**\"],\n        \"linter\": {\n          \"enabled\": false\n        }\n      }\n    ]\n  }\n  ```\n\n### Bug fixes\n\n- Fix [#343](https://github.com/biomejs/biome/issues/343), `extends` was incorrectly applied to the `biome.json` file.\n  Contributed by @ematipico\n\n### Editors\n\n#### Bug fixes\n\n- Fix [#404](https://github.com/biomejs/biome/issues/404). Biome intellij plugin now works on Windows. Contributed by\n  @victor-teles\n\n- Fix [#402](https://github.com/biomejs/biome/issues/402). Biome `format` on intellij plugin now recognize biome.json.\n  Contributed by @victor-teles\n\n### Formatter\n\n#### Enhancements\n\n- Use `OnceCell` for the Memoized memory because that's what the `RefCell<Option>` implemented. Contributed by\n  @denbezrukov\n\n### Linter\n\n#### Promoted rules\n\n- [complexity/noExcessiveCognitiveComplexity](https://biomejs.dev/linter/rules/no-excessive-cognitive-complexity)\n- [complexity/noVoid](https://biomejs.dev/linter/rules/no-void)\n- [correctness/useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies)\n- [correctness/useHookAtTopLevel](https://biomejs.dev/linter/rules/use-hook-at-top-level)\n- [performance/noAccumulatingSpread](https://biomejs.dev/linter/rules/no-accumulating-spread)\n- [style/useCollapsedElseIf](https://biomejs.dev/linter/rules/use-collapsed-else-if)\n- [suspicious/noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type)\n- [suspicious/noFallthroughSwitchClause](https://biomejs.dev/linter/rules/no-fallthrough-switch-clause)\n- [suspicious/noGlobalIsFinite](https://biomejs.dev/linter/rules/no-global-is-finite)\n- [suspicious/noGlobalIsNan](https://biomejs.dev/linter/rules/no-global-is-nan)\n- [suspicious/useIsArray](https://biomejs.dev/linter/rules/use-is-array)\n\nThe following rules are now recommended:\n\n- [noAccumulatingSpread](https://biomejs.dev/linter/rules/)\n- [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type)\n- [noFallthroughSwitchClause](https://biomejs.dev/linter/rules/no-fallthrough-switch-clause)\n- [noForEach](https://biomejs.dev/linter/rules/no-for-each)\n\n#### New features\n\n- Add [noEmptyCharacterClassInRegex](https://biomejs.dev/linter/rules/no-empty-character-class-in-regex) rule. The rule\n  reports empty character classes and empty negated character classes in regular expression literals. Contributed by\n  @Conaclos\n\n- Add [noMisleadingInstantiator](https://biomejs.dev/linter/rules/no-misleading-instantiator) rule. The rule reports the\n  misleading use of the `new` and `constructor` methods. Contributed by @unvalley\n\n- Add [noUselessElse](https://biomejs.dev/linter/rules/no-useless-else) rule.\n  The rule reports `else` clauses that can be omitted because their `if` branches break.\n  Contributed by @Conaclos\n\n- Add [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports) rule.\n  The rule reports unused imports and suggests removing them.\n  Contributed by @Conaclos\n\n  [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) reports also unused imports, but don't\n  suggest their removal.\n  Once [noUnusedImports](https://biomejs.dev/linter/rules/no-unused-imports) stabilized,\n  [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) will not report unused imports.\n\n- Add [useShorthandAssign](https://biomejs.dev/linter/rules/use-shorthand-assign) rule.\n  The rule enforce use of shorthand operators that combine variable assignment and some simple mathematical operations.\n  For example, x = x + 4 can be shortened to x += 4.\n  Contributed by @victor-teles\n\n- Add [useAsConstAssertion](https://biomejs.dev/linter/rules/use-as-const-assertion) rule.\n  The rule enforce use of `as const` assertion to infer literal types.\n  Contributed by @unvalley\n\n- Add [noMisrefactoredShorthandAssign](https://biomejs.dev/linter/rules/no-misrefactored-shorthand-assign) rule.\n  The rule reports shorthand assigns when variable appears on both sides. For example `x += x + b`\n  Contributed by @victor-teles\n- Add [noApproximativeNumericConstant](https://biomejs.dev/linter/rules/no-approximative-numeric-constant/) rule.\n  Contributed by @nikeee\n\n-\nAdd [noInteractiveElementToNoninteractiveRole](https://biomejs.dev/linter/rules/no-interactive-element-to-noninteractive-role)\nrule. The rule enforces the non-interactive ARIA roles are not assigned to interactive HTML elements. Contributed by\n@nissy-dev\n\n- Add [useAriaActivedescendantWithTabindex](https://biomejs.dev/linter/rules/use-aria-activedescendant-with-tabindex)\n  rule. The rule enforces that `tabIndex` is assigned to non-interactive HTML elements with `aria-activedescendant`.\n  Contributed by @nissy-dev\n\n- Add [noUselessLoneBlockStatements](https://biomejs.dev/linter/rules/no-useless-lone-block-statements) rule.\n  The rule reports standalone blocks that don't include any lexical scoped declaration.\n  Contributed by @emab\n\n- Add [noInvalidNewBuiltin](https://biomejs.dev/linter/rules/no-invalid-new-builtin) rule.\n  The rule reports use of `new` on `Symbol` and `BigInt`. Contributed by @lucasweng\n\n#### Enhancements\n\n- The following rules have now safe code fixes:\n\n  - [noNegationElse](https://biomejs.dev/linter/rules/no-negation-else)\n  - [noUselessLabel](https://biomejs.dev/linter/rules/no-useless-label)\n  - [noUselessTypeConstraint](https://biomejs.dev/linter/rules/no-useless-type-constraint)\n  - [noUnusedLabels](https://biomejs.dev/linter/rules/no-unused-labels)\n  - [useConst](https://biomejs.dev/linter/rules/use-const)\n  - [useEnumInitializers](https://biomejs.dev/linter/rules/use-enum-initializers)\n  - [useWhile](https://biomejs.dev/linter/rules/use-while)\n\n- [noAccumulatingSpread](https://biomejs.dev/linter/rules/no-accumulating-spread) makes more check in order to reduce\n  potential false positives. Contributed by @Vivalldi\n\n- [noConstAssign](https://biomejs.dev/linter/rules/no-const-assign) now provides an unsafe code fix that\n  replaces `const` with `let`. Contributed by @vasucp1207\n\n- [noExcessiveComplexity](https://biomejs.dev/linter/rules/no-excessive-cognitive-complexity) default complexity\n  threshold is now `15`. Contributed by @arendjr\n\n- [noPositiveTabindexValue](https://biomejs.dev/linter/rules/no-positive-tabindex) now provides an unsafe code fix that\n  set to `0` the tab index. Contributed by @vasucp1207\n\n- [noUnusedLabels](https://biomejs.dev/linter/rules/no-unused-labels) no longer reports unbreakable labeled statements.\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables) now reports unused TypeScript's type\n  parameters. Contributed by @Conaclos\n\n- [useAnchorContent](https://biomejs.dev/linter/rules/use-anchor-content) now provides an unsafe code fix that removes\n  the `aria-hidden`` attribute. Contributed by @vasucp1207\n\n- [useValidAriaProps](https://biomejs.dev/linter/rules/use-valid-aria-props) now provides an unsafe code fix that\n  removes invalid properties. Contributed by @vasucp1207\n\n- `noExcessiveComplexity` was renamed to `noExcessiveCognitiveComplexity`\n\n#### Bug fixes\n\n-\nFix [#294](https://github.com/biomejs/biome/issues/294). [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type/)\nno longer reports false positives for return types. Contributed by @b4s36t4\n\n-\nFix [#313](https://github.com/biomejs/biome/issues/313). [noRedundantUseStrict](https://biomejs.dev/linter/rules/no-redundant-use-strict/)\nnow keeps leading comments.\n\n-\nFix [#383](https://github.com/biomejs/biome/issues/383). [noMultipleSpacesInRegularExpressionLiterals](https://biomejs.dev/linter/rules/no-multiple-spaces-in-regular-expression-literals)\nnow provides correct code fixes when consecutive spaces are followed by a quantifier. Contributed by @Conaclos\n\n-\nFix [#397](https://github.com/biomejs/biome/issues/397). [useNumericLiterals](https://biomejs.dev/linter/rules/use-numeric-literals)\nnow provides correct code fixes for signed numbers. Contributed by @Conaclos\n\n- Fix [452](https://github.com/biomejs/biome/pull/452). The linter panicked when it met a malformed regex (a regex not\n  ending with a slash).\n\n- Fix [#104](https://github.com/biomejs/biome/issues/104). We now correctly handle types and values with the same name.\n\n- Fix [#243](https://github.com/biomejs/biome/issues/243) a false positive case where the incorrect scope was defined\n  for the `infer` type in rule [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/).\n  Contributed by @denbezrukov\n\n- Fix [#322](ttps://github.com/biomejs/biome/issues/322),\n  now [noSelfAssign](https://biomejs.dev/linter/rules/no-self-assign/) correctly handles literals inside call\n  expressions.\n\n- Changed how [noSelfAssign](https://biomejs.dev/linter/rules/no-self-assign/) behaves. The rule is not triggered\n  anymore on function calls. Contributed by @ematipico\n\n### Parser\n\n- Enhance diagnostic for infer type handling in the parser. The 'infer' keyword can only be utilized within the '\n  extends' clause of a conditional type. Using it outside this context will result in an error. Ensure that any type\n  declarations using 'infer' are correctly placed within the conditional type structure to avoid parsing issues.\n  Contributed by @denbezrukov\n- Add support for parsing trailing commas inside JSON files:\n\n  ```json\n  {\n    \"json\": {\n      \"parser\": {\n        \"allowTrailingCommas\": true\n      }\n    }\n  }\n  ```\n\n  Contributed by @nissy-dev\n\n### VSCode\n\n## 1.2.2 (2023-09-16)\n\n### CLI\n\n#### Bug fixes\n\n- Fix a condition where import sorting wasn't applied when running `biome check --apply`\n\n## 1.2.1 (2023-09-15)\n\n### Configuration\n\n- Fix an edge case where the formatter language configuration wasn't picked.\n- Fix the configuration schema, where `json.formatter` properties weren't transformed in camel case.\n\n## 1.2.0 (2023-09-15)\n\n### CLI\n\n#### New features\n\n- Add new options to customize the behaviour the formatter based on the language of the file\n  - `--json-formatter-enabled`\n  - `--json-formatter-indent-style`\n  - `--json-formatter-indent-size`\n  - `--json-formatter-line-width`\n  - `--javascript-formatter-enabled`\n  - `--javascript-formatter-indent-style`\n  - `--javascript-formatter-indent-size`\n  - `--javascript-formatter-line-width`\n\n#### Bug fixes\n\n- Fix a bug where `--errors-on-warning` didn't work when running `biome ci` command.\n\n### Configuration\n\n#### New features\n\n- Add new options to customize the behaviour of the formatter based on the language of the file\n  - `json.formatter.enabled`\n  - `json.formatter.indentStyle`\n  - `json.formatter.indentSize`\n  - `json.formatter.lineWidth`\n  - `javascript.formatter.enabled`\n  - `javascript.formatter.indentStyle`\n  - `javascript.formatter.indentSize`\n  - `javascript.formatter.lineWidth`\n\n### Linter\n\n#### Promoted rules\n\nNew rules are incubated in the nursery group.\nOnce stable, we promote them to a stable group.\nThe following rules are promoted:\n\n- [a11y/noAriaUnsupportedElements](https://www.biomejs.dev/linter/rules/no-aria-unsupported-elements/)\n- [a11y/noNoninteractiveTabindex](https://www.biomejs.dev/linter/rules/no-noninteractive-tabindex/)\n- [a11y/noRedundantRoles](https://www.biomejs.dev/linter/rules/no-redundant-roles/)\n- [a11y/useValidAriaValues](https://www.biomejs.dev/linter/rules/use-valid-aria-values/)\n- [complexity/noBannedTypes](https://www.biomejs.dev/linter/rules/no-banned-types)\n- [complexity/noStaticOnlyClass](https://www.biomejs.dev/linter/rules/no-static-only-class)\n- [complexity/noUselessEmptyExport](https://www.biomejs.dev/linter/rules/no-useless-empty-export)\n- [complexity/noUselessThisAlias](https://www.biomejs.dev/linter/rules/no-useless-this-alias)\n- [correctness/noConstantCondition](https://www.biomejs.dev/linter/rules/no-constant-condition)\n- [correctness/noNonoctalDecimalEscape](https://www.biomejs.dev/linter/rules/no-nonoctal-decimal-escape)\n- [correctness/noSelfAssign](https://www.biomejs.dev/linter/rules/no-self-assign)\n- [style/useLiteralEnumMembers](https://www.biomejs.dev/linter/rules/use-literal-enum-members)\n- [style/useNamingConvention](https://www.biomejs.dev/linter/rules/use-naming-convention)\n- [suspicious/noControlCharactersInRegex](https://www.biomejs.dev/linter/rules/no-control-characters-in-regex)\n- [suspicious/noUnsafeDeclarationMerging](https://www.biomejs.dev/linter/rules/no-unsafe-declaration-merging)\n- [suspicious/useGetterReturn](https://www.biomejs.dev/linter/rules/use-getter-return)\n\n#### New rules\n\n- Add [noConfusingVoidType](https://biomejs.dev/linter/rules/no-confusing-void-type/) rule. The rule reports the unusual\n  use of the `void` type. Contributed by @shulandmimi\n\n#### Removed rules\n\n- Remove `noConfusingArrow`\n\n  Code formatters, such as prettier and Biome, always adds parentheses around the parameter or the body of an arrow\n  function.\n  This makes the rule useless.\n\n  Contributed by @Conaclos\n\n#### Enhancements\n\n- [noFallthroughSwitchClause](https://biomejs.dev/linter/rules/no-fallthrough-switch-clause/) now relies on control flow\n  analysis to report most of the switch clause fallthrough. Contributed by @Conaclos\n\n- [noAssignInExpressions](https://biomejs.dev/linter/rules/no-assign-in-expressions/) no longer suggest code fixes. Most\n  of the time the suggestion didn't match users' expectations. Contributed by @Conaclos\n\n- [noUselessConstructor](https://biomejs.dev/linter/rules/no-useless-constructor/) no longer emits safe code fixes.\n  Contributed by @Conaclos\n\n  All code fixes are now emitted as unsafe code fixes.\n  Removing a constructor can change the behavior of a program.\n\n- [useCollapsedElseIf](https://biomejs.dev/linter/rules/use-collapsed-else-if/) now only provides safe code fixes.\n  Contributed by @Conaclos\n\n- [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/) now reports more cases.\n\n  The rule is now able to ignore self-writes.\n  For example, the rule reports the following unused variable:\n\n  ```js\n  let a = 0;\n  a++;\n  a += 1;\n  ```\n\n  The rule is also capable of detecting an unused declaration that uses itself.\n  For example, the rule reports the following unused interface:\n\n  ```ts\n  interface I {\n    instance(): I\n  }\n  ```\n\n  Finally, the rule now ignores all _TypeScript_ declaration files,\n  including [global declaration files](https://www.typescriptlang.org/docs/handbook/declaration-files/templates/global-d-ts.html).\n\n  Contributed by @Conaclos\n\n#### Bug fixes\n\n- Fix [#182](https://github.com/biomejs/biome/issues/182),\n  making [useLiteralKeys](https://biomejs.dev/linter/rules/use-literal-keys/) retains optional chaining. Contributed by\n  @denbezrukov\n\n- Fix [#168](https://github.com/biomejs/biome/issues/168),\n  fix [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies) false positive case when\n  stable hook is on a new line. Contributed by @denbezrukov\n\n- Fix [#137](https://github.com/biomejs/biome/issues/137),\n  fix [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/) false positive case with TypeScript module\n  declaration:\n\n  ```typescript\n  declare module '*.gif' {\n      const src: string;\n  }\n\n  declare module '*.bmp' {\n      const src: string;\n  }\n  ```\n  Contributed by @denbezrukov\n\n- Fix [#258](https://github.com/biomejs/biome/issues/258),\n  fix [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/) the case where the rule removing an\n  assignment. Contributed by @denbezrukov\n- Fix [#266](https://github.com/biomejs/biome/issues/266), where `complexity/useLiteralKeys` emitted a code action with\n  an invalid AST. Contributed by @ematipico\n\n\n- Fix [#105](https://github.com/biomejs/biome/issues/105), removing false positives reported\n  by [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/).\n\n  The rule no longer reports the following used variable:\n\n  ```js\n  const a = f(() => a);\n  ```\n\n  Contributed by @Conaclos\n\n### VSCode\n\n#### Enhancements\n\n- Improve server binary resolution when using certain package managers, notably pnpm.\n\n  The new strategy is to point to `node_modules/.bin/biome` path,\n  which is consistent for all package managers.\n\n## 1.1.2 (2023-09-07)\n\n### Editors\n\n#### Bug fixes\n\n- Fix a case where an empty JSON file would cause the LSP server to crash. Contributed by @ematipico\n\n### Linter\n\n#### Enhancements\n\n- [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) now accepts import namespaces in\n  _PascalCase_ and rejects export namespaces in _CONSTANT\\_CASE_.\n\n  The following code is now valid:\n\n  ```js\n  import * as React from \"react\";\n  ```\n\n  And the following code is now invalid:\n\n  ```js\n  export * as MY_NAMESPACE from \"./lib.js\";\n  ```\n\n  Contributed by @Conaclos\n\n- [noUselessConstructor](https://biomejs.dev/linter/rules/no-useless-constructor/) now ignores decorated classes and\n  decorated parameters. The rule now gives suggestions instead of safe fixes when parameters are annotated with types.\n  Contributed by @Conaclos\n\n## 1.1.1 (2023-09-07)\n\n### Analyzer\n\n#### Bug fixes\n\n- The diagnostic for `// rome-ignore` suppression comment should not be a warning. A warning could block the CI, marking\n  a gradual migration difficult. The code action that changes `// rome-ignore` to `// biome-ignore` is disabled as\n  consequence. Contributed by @ematipico\n\n## 1.1.0 (2023-09-06)\n\n### Analyzer\n\n#### Enhancements\n\n- Add a code action to replace `rome-ignore` with `biome-ignore`. Use `biome check --apply-unsafe` to update all the\n  comments. The action is not bulletproof, and it might generate unwanted code, that's why it's unsafe action.\n  Contributed by @ematipico\n\n### CLI\n\n#### Enhancements\n\n- Biome now reports a diagnostics when a `rome.json` file is found.\n- `biome migrate --write` creates `biome.json` from `rome.json`, but it won't delete the `rome.json` file. Contributed\n  by @ematipico\n\n#### Bug fixes\n\n- Biome uses `biome.json` first, then it attempts to use `rome.json`.\n- Fix a case where Biome couldn't compute correctly the ignored files when the VSC integration is enabled. Contributed\n  by @ematipico\n\n### Configuration\n\n### Editors\n\n#### Bug fixes\n\n- The LSP now uses its own socket and won't rely on Biome's socket. This fixes some cases where users were seeing\n  multiple servers in the `rage` output.\n\n### Formatter\n\n#### Enhancements\n\n- You can use `// biome-ignore` as suppression comment.\n- The `// rome-ignore` suppression is deprecated.\n\n### JavaScript APIs\n\n### Linter\n\n#### New features\n\n- Add [useCollapsedElseIf](https://biomejs.dev/linter/rules/use-collapsed-else-if/) rule. This new rule requires merging\n  an `else` and an `if`, if the `if` statement is the only statement in the `else` block. Contributed by @n-gude\n\n#### Enhancements\n\n- [useTemplate](https://biomejs.dev/linter/rules/use-template/) now reports all string concatenations.\n\n  Previously, the rule ignored concatenation of a value and a newline or a backquote.\n  For example, the following concatenation was not reported:\n\n  ```js\n  v + \"\\n\";\n  \"`\" + v + \"`\";\n  ```\n\n  The rule now reports these cases and suggests the following code fixes:\n\n  ```diff\n  - v + \"\\n\";\n  + `${v}\\n`;\n  - v + \"`\";\n  + `\\`${v}\\``;\n  ```\n\n  Contributed by @Conaclos\n\n- [useExponentiationOperator](https://biomejs.dev/linter/rules/use-exponentiation-operator/) suggests better code fixes.\n\n  The rule now preserves any comment preceding the exponent,\n  and it preserves any parenthesis around the base or the exponent.\n  It also adds spaces around the exponentiation operator `**`,\n  and always adds parentheses for pre- and post-updates.\n\n  ```diff\n  - Math.pow(a++, /**/ (2))\n  + (a++) ** /**/ (2)\n  ```\n\n  Contributed by @Conaclos\n\n- You can use `// biome-ignore` as suppression comment.\n\n- The `// rome-ignore` suppression is deprecated.\n\n#### Bug fixes\n\n- Fix [#80](https://github.com/biomejs/biome/issues/95),\n  making [noDuplicateJsxProps](https://biomejs.dev/linter/rules/no-duplicate-jsx-props/) case-insensitive.\n\n  Some frameworks, such as Material UI, rely on the case-sensitivity of JSX properties.\n  For\n  example, [TextField has two properties with the same name, but distinct cases](https://mui.com/material-ui/api/text-field/#TextField-prop-inputProps):\n\n  ```jsx\n  <TextField inputLabelProps=\"\" InputLabelProps=\"\"></TextField>\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [#138](https://github.com/biomejs/biome/issues/138)\n\n  [noCommaOperator](https://biomejs.dev/linter/rules/no-comma-operator/) now correctly ignores all use of comma\n  operators inside the update part of a `for` loop.\n  The following code is now correctly ignored:\n\n  ```js\n  for (\n    let i = 0, j = 1, k = 2;\n    i < 100;\n    i++, j++, k++\n  ) {}\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [rome#4713](https://github.com/rome/tools/issues/4713).\n\n  Previously, [useTemplate](https://biomejs.dev/linter/rules/use-template/) made the following suggestion:\n\n  ```diff\n  - a + b + \"px\"\n  + `${a}${b}px`\n  ```\n\n  This breaks code where `a` and `b` are numbers.\n\n  Now, the rule makes the following suggestion:\n\n  ```diff\n  - a + b + \"px\"\n  + `${a + b}px`\n   ```\n\n  Contributed by @Conaclos\n\n- Fix [rome#4109](https://github.com/rome/tools/issues/4109)\n\n  Previously, [useTemplate](https://biomejs.dev/linter/rules/use-template/) suggested an invalid code fix when a leading\n  or trailing single-line comment was present:\n\n  ```diff\n    // leading comment\n  - 1 /* inner comment */ + \"+\" + 2 // trailing comment\n  + `${// leading comment\n  + 1 /* inner comment */}+${2 //trailing comment}` // trailing comment\n  ```\n\n  Now, the rule correctly handles this case:\n\n  ```diff\n    // leading comment\n  - 1 + \"+\" + 2 // trailing comment\n  + `${1}+${2}` // trailing comment\n  ```\n\n  As a sideeffect, the rule also suggests the removal of any inner comments.\n\n  Contributed by @Conaclos\n\n- Fix [rome#3850](https://github.com/rome/tools/issues/3850)\n\n  Previously [useExponentiationOperator](https://biomejs.dev/linter/rules/use-exponentiation-operator/) suggested\n  invalid code in a specific edge case:\n\n  ```diff\n  - 1 +Math.pow(++a, 2)\n  + 1 +++a**2\n  ```\n\n  Now, the rule properly adds parentheses:\n\n  ```diff\n  - 1 +Math.pow(++a, 2)\n  + 1 +(++a) ** 2\n  ```\n\n  Contributed by @Conaclos\n\n- Fix [#106](https://github.com/biomejs/biome/issues/106)\n\n  [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/) now correctly recognizes some\n  TypeScript types such as `Uppercase`.\n\n  Contributed by @Conaclos\n\n- Fix [rome#4616](https://github.com/rome/tools/issues/4616)\n\n  Previously [noUnreachableSuper](https://biomejs.dev/linter/rules/no-unreachable-super/) reported valid codes with\n  complex nesting of control flow structures.\n\n  Contributed by @Conaclos\n\n## 1.0.0 (2023-08-28)\n\n### Analyzer\n\n#### BREAKING CHANGES\n\n- The organize imports feature now groups import statements by \"distance\".\n\n  Modules \"farther\" from the user are put on the top, and modules \"closer\" to the user are placed on the bottom.\n  Check the [documentation](https://biomejs.dev/analyzer/) for more information about it.\n\n- The organize imports tool is enabled by default. If you don't want to use it, you need to disable it explicitly:\n\n  ```json\n  {\n    \"organizeImports\": {\n      \"enabled\": false\n    }\n  }\n  ```\n\n### CLI\n\n#### BREAKING CHANGES\n\n- The CLI now exists with an error when there's an error inside the configuration.\n\n  Previously, biome would raise warnings and continue the execution by applying its defaults.\n\n  This could have been better for users because this could have created false positives in linting or formatted\n  code with a configuration that wasn't the user's.\n\n- The command `biome check` now shows formatter diagnostics when checking the code.\n\n  The diagnostics presence will result in an error code when the command finishes.\n\n  This aligns with semantic and behaviour meant for the command `biome check`.\n\n- `init` command emits a `biome.json` file;\n\n#### Other changes\n\n- Fix [#4670](https://github.com/rome/tools/issues/4670), don't crash at empty default export.\n\n- Fix [#4556](https://github.com/rome/tools/issues/4556), which correctly handles new lines in the\n  `.gitignore` file across OS.\n\n- Add a new option to ignore unknown files `--files-ignore-unknown`:\n\n    ```shell\n    biome format --files-ignore-unknown ./src\n    ```\n\n  Doing so, Biome won't emit diagnostics for files that doesn't know how to handle.\n\n- Add the new option `--no-errors-on-unmatched`:\n\n    ```shell\n    biome format --no-errors-on-unmatched ./src\n    ```\n\n  Biome doesn't exit with an error code if no files were processed in the given paths.\n\n- Fix the diagnostics emitted when running the `biome format` command.\n\n- Biome no longer warns when discovering (possibly infinite) symbolic links between directories.\n\n  This fixes [#4193](https://github.com/rome/tools/issues/4193) which resulted in incorrect warnings\n  when a single file or directory was pointed at by multiple symbolic links. Symbolic links to other\n  symbolic links do still trigger warnings if they are too deeply nested.\n\n- Introduced a new command called `biome lint`, which will only run lint rules against the code base.\n\n- Biome recognizes known files as \"JSON files with comments allowed\":\n\n  - `typescript.json`;\n  - `tsconfig.json`;\n  - `jsconfig.json`;\n  - `tslint.json`;\n  - `babel.config.json`;\n  - `.babelrc.json`;\n  - `.ember-cli`;\n  - `typedoc.json`;\n  - `.eslintrc.json`;\n  - `.eslintrc`;\n  - `.jsfmtrc`;\n  - `.jshintrc`;\n  - `.swcrc`;\n  - `.hintrc`;\n  - `.babelrc`;\n- Add support for `biome.json`;\n\n### Configuration\n\n#### Other changes\n\n- Add a new option to ignore unknown files:\n\n    ```json\n    {\n       \"files\": {\n          \"ignoreUnknown\": true\n       }\n    }\n    ```\n  Doing so, Biome won't emit diagnostics for file that it doesn't know how to handle.\n\n- Add a new `\"javascript\"` option to support the unsafe/experimental parameter decorators:\n\n    ```json\n    {\n       \"javascript\": {\n          \"parser\": {\n             \"unsafeParameterDecoratorsEnabled\": true\n          }\n       }\n    }\n    ```\n\n- Add a new `\"extends\"` option, useful to split the configuration file in multiple files:\n\n  ```json\n  {\n    \"extends\": [\"../sharedFormatter.json\", \"linter.json\"]\n  }\n  ```\n\n  The resolution of the files is file system based, Biome doesn't know how to\n  resolve dependencies yet.\n\n- The commands `biome check` and `biome lint` now show the remaining diagnostics even when\n  `--apply-safe` or `--apply-unsafe` are passed.\n\n- Fix the commands `biome check` and `biome lint`,\n  they won't exit with an error code if no error diagnostics are emitted.\n\n- Add a new option `--error-on-warnings`,\n  which instructs Biome to exit with an error code when warnings are emitted.\n\n  ```shell\n  biome check --error-on-warnings ./src\n  ```\n\n- Add a configuration to enable parsing comments inside JSON files:\n\n  ```json\n  {\n    \"json\": {\n      \"parser\": {\n        \"allowComments\": true\n      }\n    }\n  }\n  ```\n\n### Editors\n\n#### Other changes\n\n- The Biome LSP can now show diagnostics belonging to JSON lint rules.\n\n- The Biome LSP no longer applies unsafe quickfixes on-save when `editor.codeActionsOnSave.quickfix.biome` is enabled.\n\n- Fix [#4564](https://github.com/rome/tools/issues/4564); files too large don't emit errors.\n\n- The Biome LSP sends client messages when files are ignored or too big.\n\n### Formatter\n\n- Add a new option called `--jsx-quote-style`.\n\n  This option lets you choose between single and double quotes for JSX attributes.\n\n- Add the option `--arrow-parentheses`.\n\n  This option allows setting the parentheses style for arrow functions.\n\n- The _JSON_ formatter can now format `.json` files with comments.\n\n### Linter\n\n#### Removed rules\n\n- Remove `complexity/noExtraSemicolon` ([#4553](https://github.com/rome/tools/issues/4553))\n\n  The _Biome_ formatter takes care of removing extra semicolons.\n  Thus, there is no need for this rule.\n\n- Remove `useCamelCase`\n\n  Use [useNamingConvention](https://biomejs.dev/linter/rules/use-naming-convention/) instead.\n\n#### New rules\n\n- Add [noExcessiveComplexity](https://biomejs.dev/linter/rules/no-excessive-cognitive-complexity/)\n\n- Add [useImportRestrictions](https://biomejs.dev/linter/rules/use-import-restrictions/)\n\n- Add [noFallthroughSwitchClause](https://biomejs.dev/linter/rules/no-fallthrough-switch-clause/)\n\n- Add [noGlobalIsFinite](https://biomejs.dev/linter/rules/no-global-is-finite/)\n\n  This rule recommends using `Number.isFinite` instead of the global and unsafe `isFinite` that attempts a type\n  coercion.\n\n- Add [noGlobalIsNan](https://biomejs.dev/linter/rules/no-global-is-nan/)\n\n  This rule recommends using `Number.isNaN` instead of the global and unsafe `isNaN` that attempts a type coercion.\n\n- Add [noUnsafeDeclarationMerging](https://biomejs.dev/linter/rules/no-unsafe-declaration-merging/)\n\n  This rule disallows declaration merging between an interface and a class.\n\n- Add [noUselessThisAlias](https://biomejs.dev/linter/rules/no-useless-this-alias/)\n\n  This rule disallows useless aliasing of `this` in arrow functions.\n\n- Add [useArrowFunction](https://biomejs.dev/linter/rules/use-arrow-function/)\n\n  This rule proposes turning function expressions into arrow functions.\n  Function expressions that use `this` are ignored.\n\n- Add [noDuplicateJsonKeys](https://biomejs.dev/linter/rules/no-duplicate-json-keys/)\n\n  This rule disallow duplicate keys in a JSON object.\n\n- Add [noVoid](https://biomejs.dev/linter/rules/no-void/)\n\n  This rule disallows the use of `void`.\n\n- Add [noNonoctalDecimalEscape](https://biomejs.dev/linter/rules/no-nonoctal-decimal-escape/)\n\n  This rule disallows `\\8` and `\\9` escape sequences in string literals.\n\n- Add [noUselessEmptyExport](https://biomejs.dev/linter/rules/no-useless-empty-export/)\n\n  This rule disallows useless `export {}`.\n\n- Add [useIsArray](https://biomejs.dev/linter/rules/use-is-array/)\n\n  This rule proposes using `Array.isArray()` instead of `instanceof Array`.\n\n- Add [useGetterReturn](https://biomejs.dev/linter/rules/use-getter-return/)\n\n  This rule enforces the presence of non-empty return statements in getters.\n  This makes the following code incorrect:\n\n  ```js\n  class Person {\n      get firstName() {}\n  }\n  ```\n\n#### Promoted rules\n\nNew rules are promoted, please check [#4750](https://github.com/rome/tools/discussions/4750) for more details:\n\n- [a11y/useHeadingContent](https://biomejs.dev/linter/rules/use-heading-content/)\n- [complexity/noForEach](https://biomejs.dev/linter/rules/no-for-each/)\n- [complexity/useLiteralKeys](https://biomejs.dev/linter/rules/use-literal-keys/)\n- [complexity/useSimpleNumberKeys](https://biomejs.dev/linter/rules/use-simple-number-keys/)\n- [correctness/useIsNan](https://biomejs.dev/linter/rules/use-is-nan/)\n- [suspicious/noConsoleLog](https://biomejs.dev/linter/rules/no-console-log/)\n- [suspicious/noDuplicateJsxProps](https://biomejs.dev/linter/rules/no-duplicate-jsx-props/)\n\nThe following rules are now recommended:\n\n**- [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/)\n\n- [noRedundantUseStrict](https://biomejs.dev/linter/rules/no-redundant-use-strict/)\n- [useExponentiationOperator](https://biomejs.dev/linter/rules/use-exponentiation-operator/)**\n\n#### Other changes\n\n- Add new TypeScript globals (`AsyncDisposable`, `Awaited`, `DecoratorContext`, and\n  others) [4643](https://github.com/rome/tools/issues/4643).\n\n- [noRedeclare](https://biomejs.dev/linter/rules/no-redeclare/): allow redeclare of index signatures are in different\n  type members [#4478](https://github.com/rome/tools/issues/4478)\n\n-\nImprove [noConsoleLog](https://biomejs.dev/linter/rules/no-console-log/), [noGlobalObjectCalls](https://biomejs.dev/linter/rules/no-global-object-calls/), [useIsNan](https://biomejs.dev/linter/rules/use-is-nan/),\nand [useNumericLiterals](https://biomejs.dev/linter/rules/use-numeric-literals/) by handling `globalThis` and `window`\nnamespaces.\n\nFor instance, the following code is now reported by `noConsoleLog`:\n\n```js\nglobalThis.console.log(\"log\")\n```\n\n- Improve [noDuplicateParameters](https://biomejs.dev/linter/rules/no-duplicate-parameters/) to manage constructor\n  parameters.\n\n- Improve [noInnerDeclarations](https://biomejs.dev/linter/rules/no-inner-declarations/)\n\n  Now, the rule doesn't report false-positives about ambient _TypeScript_ declarations.\n  For example, the following code is no longer reported by the rule:\n\n  ```ts\n  declare var foo;\n  ```\n\n- Improve [useEnumInitializers](https://biomejs.dev/linter/rules/use-enum-initializers/)\n\n  The rule now reports all uninitialized members of an enum in a single diagnostic.\n\n  Moreover, ambient enum declarations are now ignored.\n  This avoids reporting ambient enum declarations in _TypeScript_ declaration files.\n\n  ```ts\n  declare enum Weather {\n    Rainy,\n    Sunny,\n  }\n  ```\n\n- Relax [noBannedTypes](https://biomejs.dev/linter/rules/no-banned-types/) and improve documentation\n\n  The rule no longer reports a user type that reuses a banned type name.\n  The following code is now allowed:\n\n  ```ts\n  import { Number } from \"a-lib\";\n  declare const v: Number;\n  ```\n\n  The rule now allows the use of the type `{}` to denote a non-nullable generic type:\n\n  ```ts\n  function f<T extends {}>(x: T) {\n      assert(x != null);\n  }\n  ```\n\n  And in a type intersection for narrowing a type to its non-nullable equivalent type:\n\n  ```ts\n  type NonNullableMyType = MyType & {};\n  ```\n\n- Improve [noConstantCondition](https://biomejs.dev/linter/rules/no-constant-condition/)\n\n  The rule now allows `while(true)`.\n  This recognizes a common pattern in the web community:\n\n  ```js\n  while (true) {\n    if (cond) {\n      break;\n    }\n  }\n  ```\n\n- Improve the diagnostic and the code action\n  of [useDefaultParameterLast](https://biomejs.dev/linter/rules/use-default-parameter-last/).\n\n  The diagnostic now reports the last required parameter which should precede optional and default parameters.\n\n  The code action now removes any whitespace between the parameter name and its initialization.\n\n- Relax `noConfusingArrow`\n\n  All arrow functions that enclose its parameter with parenthesis are allowed.\n  Thus, the following snippet no longer trigger the rule:\n\n  ```js\n  var x = (a) => 1 ? 2 : 3;\n  ```\n\n  The following snippet still triggers the rule:\n\n  ```js\n  var x = a => 1 ? 2 : 3;\n  ```\n\n- Relax [useLiteralEnumMembers](https://biomejs.dev/linter/rules/use-literal-enum-members/)\n\n  Enum members that refer to previous enum members are now allowed.\n  This allows a common pattern in enum flags like in the following example:\n\n  ```ts\n  enum FileAccess {\n    None = 0,\n    Read = 1,\n    Write = 1 << 1,\n    All = Read | Write,\n  }\n  ```\n\n  Arbitrary numeric constant expressions are also allowed:\n\n  ```ts\n  enum FileAccess {\n    None = 0,\n    Read = 2**0,\n    Write = 2**1,\n    All = Read | Write,\n  }\n  ```\n\n- Improve [useLiteralKeys](https://biomejs.dev/linter/rules/use-literal-keys/).\n\n  Now, the rule suggests simplifying computed properties to string literal properties:\n\n  ```diff\n  {\n  -  [\"1+1\"]: 2,\n  +  \"1+1\": 2,\n  }\n  ```\n\n  It also suggests simplifying string literal properties to static properties:\n\n  ```diff\n  {\n  -  \"a\": 0,\n  +  a: 0,\n  }\n  ```\n\n  These suggestions are made in object literals, classes, interfaces, and object types.\n\n- Improve [noNewSymbol](https://biomejs.dev/linter/rules/no-new-symbol/).\n\n  The rule now handles cases where `Symbol` is namespaced with the global `globalThis` or `window`.\n\n- The rules [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/)\n  and [useHookAtTopLevel](https://biomejs.dev/linter/rules/use-hook-at-top-level/) accept a different shape of options\n\n  Old configuration:\n\n  ```json\n  {\n    \"linter\": {\n       \"rules\": {\n          \"nursery\": {\n             \"useExhaustiveDependencies\": {\n                \"level\": \"error\",\n                \"options\": {\n                   \"hooks\": [\n                      [\"useMyEffect\", 0, 1]\n                   ]\n                }\n             }\n          }\n       }\n    }\n  }\n  ```\n\n  New configuration:\n\n  ```json\n  {\n    \"linter\": {\n       \"rules\": {\n          \"nursery\": {\n             \"useExhaustiveDependencies\": {\n                \"level\": \"error\",\n                \"options\": {\n                   \"hooks\": [\n                      {\n                         \"name\": \"useMyEffect\",\n                         \"closureIndex\": 0,\n                         \"dependenciesIndex\": 1\n                      }\n                   ]\n                }\n             }\n          }\n       }\n    }\n  }\n  ```\n\n- [noRedundantUseStrict](https://biomejs.dev/linter/rules/no-redundant-use-strict/) check only `'use strict'` directive\n  to resolve false positive diagnostics.\n\n  React introduced new directives, \"use client\" and \"use server\".\n  The rule raises false positive errors about these directives.\n\n- Fix a crash in the [NoParameterAssign](https://biomejs.dev/linter/rules/no-parameter-assign/) rule that occurred when\n  there was a bogus binding. [#4323](https://github.com/rome/tools/issues/4323)\n\n- Fix [useExhaustiveDependencies](https://biomejs.dev/linter/rules/use-exhaustive-dependencies/) in the following\n  cases [#4330](https://github.com/rome/tools/issues/4330):\n\n  - when the first argument of hooks is a named function\n  - inside an export default function\n  - for `React.use` hooks\n\n- Fix [noInvalidConstructorSuper](https://biomejs.dev/linter/rules/no-invalid-constructor-super/) that erroneously\n  reported generic parents [#4624](https://github.com/rome/tools/issues/4624).\n\n- Fix [noDuplicateCase](https://biomejs.dev/linter/rules/no-duplicate-case/) that erroneously reported as equals the\n  strings literals `\"'\"` and `'\"'` [#4706](https://github.com/rome/tools/issues/4706).\n\n- Fix [NoUnreachableSuper](https://biomejs.dev/linter/rules/no-unreachable-super/)'s false positive\n  diagnostics ([#4483](https://github.com/rome/tools/issues/4483)) caused to nested if statement.\n\n  The rule no longer reports `This constructor calls super() in a loop`\n  when using nested if statements in a constructor.\n\n- Fix [useHookAtTopLevel](https://biomejs.dev/linter/rules/use-hook-at-top-level/)'s false positive\n  diagnostics ([#4637](https://github.com/rome/tools/issues/4637))\n\n  The rule no longer reports false positive diagnostics when accessing properties directly from a hook and calling a\n  hook inside function arguments.\n\n- Fix [noUselessConstructor](https://biomejs.dev/linter/rules/no-useless-constructor/) which erroneously reported\n  constructors with default parameters [rome#4781](https://github.com/rome/tools/issues/4781)\n\n- Fix [noUselessFragments](https://biomejs.dev/linter/rules/no-useless-fragments/)'s panics when\n  running `biome check --apply-unsafe` ([#4637](https://github.com/rome/tools/issues/4639))\n\n  This rule's code action emits an invalid AST, so I fixed using JsxString instead of JsStringLiteral\n\n- Fix [noUndeclaredVariables](https://biomejs.dev/linter/rules/no-undeclared-variables/)'s false positive\n  diagnostics ([#4675](https://github.com/rome/tools/issues/4675))\n\n  The semantic analyzer no longer handles `this` reference identifier.\n\n- Fix [noUnusedVariables](https://biomejs.dev/linter/rules/no-unused-variables/)'s false positive\n  diagnostics ([#4688](https://github.com/rome/tools/issues/4688))\n\n  The semantic analyzer handles ts export declaration clause correctly.\n\n### Parser\n\n- Add support for decorators in class method parameters, example:\n\n    ```js\n    class AppController {\n       get(@Param() id) {}\n       // ^^^^^^^^ new supported syntax\n    }\n    ```\n\n  This syntax is only supported via configuration, because it's a non-standard syntax.\n\n    ```json\n    {\n       \"javascript\": {\n          \"parser\": {\n             \"unsafeParameterDecoratorsEnabled\": true\n          }\n       }\n    }\n    ```\n- Add support for parsing comments inside JSON files:\n\n  ```json\n  {\n    \"json\": {\n      \"parser\": {\n        \"allowComments\": true\n      }\n    }\n  }\n  ```\n- Add support for the new `using` syntax\n\n  ```js\n  const using = resource.lock();\n  ```\n\n\n\n================================================\nFILE: CLAUDE.md\n================================================\n# CLAUDE.md\n\nThis file provides guidance to Claude Code (claude.ai/code) when working with code in this repository.\n\n## Development Commands\n\n### Primary Commands (use Just task runner)\n\n```bash\n# Install required development tools\njust install-tools\n\n# Format code (Rust + TOML)\njust format\n\n# Run all tests\njust test\n\n# Run linting\njust lint\n\n# Check if ready for CI (comprehensive check)\njust ready\n\n# Generate all code-generated files\njust gen-all\n```\n\n### Cargo Commands\n\n```bash\n# Run Biome CLI in development mode\ncargo biome-cli-dev --help\ncargo biome-cli-dev check --write\n\n# Run tests for specific crate\ncargo test -p biome_html_formatter\n\n# Build in release mode\ncargo build --release\n```\n\n### Rule Development\n\n```bash\n# Create new lint rules (name must be camelCase)\njust new-js-lintrule ruleName\njust new-css-lintrule ruleName\njust new-json-lintrule ruleName\njust new-graphql-lintrule ruleName\n\n# Test specific lint rule\njust test-lintrule ruleName\n\n# Move rule from nursery to stable group\njust move-rule stable ruleName\n```\n\n## Architecture Overview\n\n**Biome** is a Rust-based monorepo implementing a high-performance web development toolchain. The architecture follows a modular, language-agnostic design.\n\n### Core Components\n\n- **biome_service**: Central workspace service providing unified APIs\n- **biome_rowan**: Lossless syntax tree foundation (preserves all source info)\n- **biome_formatter**: Pretty-printing infrastructure using intermediate representation\n- **biome_analyze**: Rule-based analysis framework with visitor patterns\n\n### Language Support Pattern\n\nEach language follows consistent crate structure:\n```\nbiome_{lang}_syntax     # AST definitions\nbiome_{lang}_parser     # Parser implementation\nbiome_{lang}_formatter  # Formatting logic\nbiome_{lang}_analyze    # Linting rules\nbiome_{lang}_factory    # AST construction\nbiome_{lang}_semantic   # Semantic analysis (where applicable)\n```\n\nLanguages: JavaScript/TypeScript, CSS, JSON, HTML, GraphQL, Grit\n\n### Key Architectural Patterns\n\n1. **Grammar-Driven**: Uses `.ungram` files for AST generation\n2. **Code Generation**: Extensive use of `xtask/codegen` for consistency\n3. **Incremental**: Supports efficient re-parsing and re-analysis\n4. **Transport-Agnostic**: Service layer works with CLI, LSP, daemon\n5. **Capability-Based**: File handlers declare their supported operations\n\n### File Locations\n\n- Core crates: `/crates/biome_*/`\n- Grammar definitions: `/xtask/codegen/*.ungram`\n- Test snapshots: `tests/specs/` in each crate\n- Configuration: `biome_configuration/src/`\n\n### Testing Strategy\n\n- **Spec Tests**: Snapshot testing with `.snap` files (use `cargo insta`)\n- **Quick Tests**: `just test-quick package` for rapid iteration\n- **Prettier Compatibility**: Automated comparison tests\n- **Fuzz Testing**: In `/fuzz/` directory\n\n### Development Workflow\n\n1. Make changes to source code\n2. Run `just format` to format code\n3. Run `just gen-all` if modifying grammars or adding rules\n4. Run `just test` to verify changes\n5. Use `just ready` before submitting PR (runs all CI checks)\n\n### Working with Current Directory\n\nYou are currently in `/crates/biome_html_formatter/` - the HTML formatter implementation. This crate:\n\n- Implements HTML/Astro/Svelte formatting\n- Follows the standard formatter architecture using `biome_formatter` IR\n- Has test files in `tests/` directory\n- Benchmark in `benches/html_formatter.rs`\n\n### Code Generation\n\nWhen adding new syntax nodes or rules:\n- Modify appropriate `.ungram` file in `xtask/codegen/`\n- Run `just gen-all` to regenerate code\n- Formatters, parsers, and AST definitions are auto-generated\n\n### Performance Notes\n\n- Uses arena allocation for memory efficiency\n- Implements incremental parsing/analysis\n- Zero-copy string handling where possible\n- All formatters use same IR for consistency\n\n### Additional Instructions to know how to work inside the project\n\n- General contribution instructions @CONTRIBUTING.md\n\n\n\n================================================\nFILE: clippy.toml\n================================================\nallow-dbg-in-tests = true\n\ndisallowed-methods = [\n  { path = \"str::to_ascii_lowercase\", reason = \"Avoid memory allocation. Use `biome_string_case::StrOnlyExtension::to_ascii_lowercase_cow` instead.\" },\n  { path = \"std::ffi::OsStr::to_ascii_lowercase\", reason = \"Avoid memory allocation. Use `biome_string_case::StrLikeExtension::to_ascii_lowercase_cow` instead.\" },\n  { path = \"str::to_lowercase\", reason = \"Avoid memory allocation. Use `biome_string_case::StrOnlyExtension::to_lowercase_cow` instead.\" },\n]\n\n\n\n================================================\nFILE: CODE_OF_CONDUCT.md\n================================================\n# Contributor Covenant Code of Conduct\n\n**Instances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n<biomejs@googlegroups.com>.**\n\nIn the event that your report includes one of the people mentioned above please\nfeel free to reach out to one of the other people listed instead.\n\nFollowed is an unmodified [Contributor Covenant Code of Conduct 2.1](https://www.contributor-covenant.org/version/2/1/code_of_conduct/).\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n<biomejs@googlegroups.com>.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n\n\n\n\n================================================\nFILE: CONTRIBUTING.md\n================================================\n# 🚀 Contributing\n\nWe can use help in a bunch of areas and any help is greatly appreciated!\n\n## Table of Contents\n\n- [🚀 Contributing](#-contributing)\n  * [Asking questions, making proposals](#asking-questions-making-proposals)\n  * [Reporting bugs](#reporting-bugs)\n  * [Getting Started](#getting-started)\n    + [Local development](#local-development)\n      - [Install the required tools](#install-the-required-tools)\n    + [GitHub Codespaces](#github-codespaces)\n  * [Testing](#testing)\n    + [Debugging](#debugging)\n  * [Debug binaries](#debug-binaries)\n  * [Production binaries](#production-binaries)\n  * [Checks](#checks)\n  * [Crates development](#crates-development)\n    + [Create new crates](#create-new-crates)\n    + [Analyzers and lint rules](#analyzers-and-lint-rules)\n    + [Parser](#parser)\n    + [Formatter](#formatter)\n  * [Crate dependencies](#crate-dependencies)\n  * [Node.js development](#nodejs-development)\n    + [Translations](#translations)\n  * [Commit messages](#commit-messages)\n  * [Creating pull requests](#creating-pull-requests)\n    + [Changelog](#changelog)\n      - [Create a changeset](#create-a-changeset)\n      - [Choose the correct packages](#choose-the-correct-packages)\n      - [Choose the correct type of change](#choose-the-correct-type-of-change)\n      - [Writing a changeset](#writing-a-changeset)\n    + [Documentation](#documentation)\n    + [Versioning](#versioning)\n  * [Releasing](#releasing)\n    + [Beta releases](#beta-releases)\n    + [Regular releases](#regular-releases)\n  * [Resources](#resources)\n  * [Current Members](#current-members)\n    + [Lead team](#lead-team)\n    + [Core Contributors team](#core-contributors-team)\n    + [Maintainers team](#maintainers-team)\n    + [Past Maintainers](#past-maintainers)\n\n## Asking questions, making proposals\n\nIf you have any questions, proposals, or feedback, open a [GitHub discussion](https://github.com/biomejs/biome/discussions).\nMake sure your comment adds value: [don't post a comment just to get attention](https://jacobtomlinson.dev/posts/2022/dont-be-that-open-source-user-dont-be-me/).\n\nOur [Discord server](https://biomejs.dev/chat) is open for help and more ad-hoc discussion.\nAll activity on the Discord is still moderated and will be strictly enforced under the project's [Code of Conduct](./CODE_OF_CONDUCT.md).\n\nRemember that we are doing this project on our own time.\nWe are humans: we like support, and we expect kindness :)\n\n## Reporting bugs\n\nOur [GitHub issues](https://github.com/biomejs/biome/issues/) serve as a place for submitting bugs.\nMake sure that the bugs is not reported yet and is not fixed in the main branch.\nYou can test on the main branch, thanks to the [playground](https://biomejs.dev/playground/).\n\nAlternatively, you can use our official [CodeSandbox template](https://codesandbox.io/p/sandbox/biome-starter-cbs-rky6zq).\n\n## Getting Started\n\nYou can [work on the project locally](#local-development) by cloning the repository and installing the required tools or [use the pre-configured GitHub Codespaces](#github-codespaces) and jump right into the code.\n\n### Local development\n\nBuilding this project requires a `stable` Rust toolchain, which can be installed using [rustup](https://www.rust-lang.org/tools/install).\n\nClone the repository and navigate to the `tools` directory:\n\n```bash\ngit clone https://github.com/biomejs/biome\ncd biome\n```\n\nYou can use cargo to run Biome CLI in development mode:\n\n```bash\n# This is like running \"biome --help\"\ncargo biome-cli-dev --help\n```\n\n#### Install the required tools\n\nWe use [Just](https://just.systems/man/en/) to run scripts and tasks, to make our life easier.\n\nYou can install `just` using cargo:\n\n```shell\ncargo install just\n```\n\nBut we **highly recommend** to [install it using an OS package manager](https://github.com/casey/just#packages), so you won't need to prefix every command with `cargo`.\n\nOnce installed, run the following command to install the required tools:\n\n```shell\njust install-tools\n```\n\nThis command will install:\n- `cargo-binstall`, to install binary extensions for `cargo`.\n- `cargo-insta`, a `cargo` extension to manage snapshot testing inside the repository.\n- `taplo-cli`, a small tool for formatting TOML files.\n- `wasm-pack` and `wasm-tools` for managing the WASM build of Biome.\n\nYou'll also need to have `pnpm` installed on your machine, and run `pnpm install` from the root of the repository. `pnpm` is needed to [create changesets](#create-a-changeset)\n\nAnd you're good to go hack with Biome and Rust! 🚀\n\n### GitHub Codespaces\n\n[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://github.com/codespaces/new?machine=premiumLinux&repo=671654508&ref=main&skip_quickstart=true)\n\nThis Codespace comes pre-configured with the required tools and dependencies to work on the Biome project.\n\n> [!NOTE]\n> A basic Codespace (32gb of disk space) might run out of disk space when building biome or running the full test suite.\n> The pre-configured Codespace is therefore based on the premium image with 64gb of disk space.\n\n## Testing\n\nYou can either use `cargo` or `just` to run tests. For simplicity and running tests real quick, use `cargo`.\n\nWith `cargo`, you can run tests by using the `test` command:\n\n```shell\n# run tests\ncargo test\n\n# or use the shortcut\ncargo t\n```\n\nIf you run `cargo t` from the root, it will run **all** tests of the whole repository. If you're inside a crate folder, `cargo` will run **tests of that crate**:\n\n```shell\ncd crates/biome_cli\n\n# it will run only the tests of the `biome_cli` crate\ncargo t\n```\n\nYou can run **a single test** with cargo by passing the test name after the `test` command:\n\n```shell\ncd crates/biome_js_formatter\n\ncargo t quick_test\n```\n\nThis will run the `quick_test` test inside the `biome_js_formatter` crate. You should see an output similar to this:\n\n```shell\nrunning 1 test\ntest quick_test::quick_test ... ok\n\ntest result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 224 filtered out; finished in 0.02s\n```\n\nYou can also use `just` for running tests. With `just`, the scripts will use the same test runner we use in the CI.\n\n```shell\njust test\n```\n\nIf you want to test the tests for a single crate:\n\n```shell\njust test-crate biome_cli\n```\n\nRust has a concept of **doctest**. A doc test is a doc comment that runs some code. Usually, it looks something like this:\n\n```rust\n/// I am a doc test\n/// ```\n/// assert_eq!(true, true) // this is a doc test, and the assertion must pass\n/// ```\nfn some_fn() {\n\n}\n```\nThe code inside the code blocks is **run** during the testing phase.\n\nTo run only the doctest, you can run the command:\n\n```shell\njust test-doc\n```\n\nIn some crates, we use snapshot testing. The majority of snapshot testing is done using [`insta`](https://insta.rs). `insta` is already installed by the command `just install-tools`.\n\nWhen a snapshot test fails, you can run:\n\n- `cargo insta accept` to accept all the changes and update all the snapshots;\n- `cargo insta reject` to reject all the changes;\n- `cargo insta review` to review snapshots singularly.\n\n### Debugging\n\nSometimes you want to debug something when running tests. Like `console.log`, in JavaScript, in Rust you can use the macro `dbg!()` to print something during debugging something. Then, pass the option `--show-output` to `cargo`:\n\n```rust\nfn some_function() -> &'static str {\n    let some_variable = \"some_variable\";\n    dbg!(&some_variable);\n    some_variable\n}\n#[test]\nfn test_some_function() {\n    let result = some_function();\n    assert_eq!(result, \"some_variable\")\n}\n```\n\n```shell\ncargo t test_some_function --show-output\n```\n\n## Debug binaries\n\nCreating a development binary is very useful in case you need to triage a reproduction, and you require more information like logging, trace logs, etc.\n\nAdditionally, you can use this binary when you need to debug issues related to LSP clients.\n\nFrom the root of the repository, run the following command:\n\n```shell\ncargo build --bin biome\n```\n`cargo` will create a binary called `biome` in the `target/debug/` directory.\n\nIf you're debugging a CLI reproduction, copy the `biome` binary inside the root of the reproduction, and change any script that uses the npm package to use the binary instead:\n\n```diff\n{\n  \"scripts\": {\n-    \"lint\": \"biome lint\",\n+    \"lint\": \"./biome lint\"\n  }\n}\n```\n\nIf you're debugging an LSP reproduction, make sure that the client allows to use custom binary, like VSCode and Zed. Provide an absolute URL to the binary that was emitted.\n\n```json\n{\n  \"biome.lsp.bin\": \"/Users/john/www/biome/target/debug/biome\"\n}\n```\n\n## Production binaries\n\n_Usually_, the easiest way to create a production build is to use the `--release` flag, **however** Biome requires an environment variable called `BIOME_VERSION` to generate different code at compile time.\n\nWhen you provide a `BIOME_VERSION` that is _different_ from `0.0.0`, the build will turn off all the nursery rules that are recommended. The value of `BIOME_VERSION` doesn't matter, as long as it's different from `0.0.0`. This means that you'll have to provide a command similar to this:\n\n```shell\nBIOME_VERSION=0.0.1 cargo build --bin biome --release\n```\n\n## Checks\n\nWhen you finished your work, and you are ready to **commit and open a PR**, there are few other\nthings you would need to run and check:\n- `just f` (alias for `just format`), formats Rust and TOML files.\n- `just l` (alias for `just lint`), run the linter for the whole project.\n- Code generation. The code generation of the repository is spread in the different parts of the codebase. Sometimes is needed and sometime it isn't:\n  - run `just gen-analyzer` when you're working on the **linter**;\n  - run `just gen-bindings` in case you worked around the **workspace**.\n\n> [!NOTE]\n> You can run `just ready` as well, although it's a command that runs the codegen of the whole repository, which will take some time\n\n## Crates development\n\n### Create new crates\n\nIf you happen to create a new _crate_ inside the workspace, use the command `just new-crate`, e.g.:\n\n```shell\ncargo new crates/biome_new_crate --lib\n```\n\nWhere `biome_new_crate` is going to be the name of the new crate. The `--lib` option tells `cargo` to create the crate as library, so you will probably see a `src/lib.rs` file.\n\n### Analyzers and lint rules\n\nTo know the technical details of how our analyzer works, how to create a rule and how to write tests, please check our [internal page](https://github.com/biomejs/biome/blob/main/crates/biome_analyze/CONTRIBUTING.md)\n\n### Parser\n\nTo know the technical details of how our parser works and how to write test, please check our [internal page](https://github.com/biomejs/biome/blob/main/crates/biome_parser/CONTRIBUTING.md)\n\n### Formatter\n\nTo know the technical details of how our formatter works and how to write test, please check our [internal page](https://github.com/biomejs/biome/blob/main/crates/biome_formatter/CONTRIBUTING.md)\n\n\n## Crate dependencies\n\n[Workspace dependencies](https://doc.rust-lang.org/cargo/reference/workspaces.html#the-dependencies-table) are used, and many dependencies are defined in Cargo.toml in the root.\n\nInternal crates are loaded with `workspace = true` for each crate. About `dev-dependencies`, we use [path dependencies](https://doc.rust-lang.org/cargo/reference/specifying-dependencies.html#specifying-path-dependencies) to avoid requiring the published version of these crates.\n\n## Node.js development\n\nThe npm module `packages/@biomejs/biome` contains Biome's Node.js API that supports different backends:\n\n- `wasm-nodejs` (WebAssembly)\n- `backend-jsonrpc` (Connection to the daemon)\n\nFor testing and developing, you need to build these packages, following the steps:\n\n1. install pnpm via [corepack](https://nodejs.org/api/corepack.html) by running `corepack enable`;\n2. install [wasm-pack](https://rustwasm.github.io/wasm-pack/installer/) globally;\n3. run `pnpm --filter \"@biomejs/backend-jsonrpc\" build`;\n4. run the `pnpm --filter \"@biomejs/js-api\" build:wasm-dev` and `pnpm --filter \"@biomejs/js-api\" build` commands;\n5. run `pnpm i --filter \"@biomejs/js-api\" --frozen-lockfile` to link the WebAssembly bindings and the JSON-RPC bindings\n\nThe tests are run against the compiled files, which means that you need to run the\n`build` script after you implemented features/bug fixes.\n\n### Translations\n\nFor more information on how to help with translation, please see the [translation contribution guidelines for our docs](https://github.com/biomejs/website/blob/main/TRANSLATIONS.md).\n\n## Commit messages\n\nInternally, the Biome team adheres as closely as possible to the [conventional commit specification](https://www.conventionalcommits.org/en/v1.0.0-beta.2/).\nThe following this convention encourages commit best-practices and facilitates commit-powered features like changelog generation.\n\nThe following commit prefixes are supported:\n\n- `build:`, a change that affects the build system or external dependencies\n- `chore:`, project housekeeping\n- `ci:`, a change that affects CI\n- `docs:`, a documentation update\n- `feat:`, a new feature\n- `fix:`, a bugfix\n- `perf:`, project performance\n- `refactor:`, refactor of the code without change in functionality\n- `release:`, release of a new version\n- `revert:`, revert a previous change\n- `test:`, a test update\n\nBelow are examples of well-formatted commits:\n\n```txt\nfeat(compiler): implement parsing for new type of files\nfix: fix nasty unhandled error\ndocs: fix link to website page\ntest(lint): add more cases to handle invalid rules\n```\n\nWe are using [action-semantic-pull-request](https://github.com/amannn/action-semantic-pull-request) to lint the titles of pull requests. If the 'Lint Pull Request Titles' workflow fails, please correct the title.\n\n## Creating pull requests\n\nWhen creating a new pull request, it's preferable to use a conventional commit-formatted title, as this title will be used as the default commit message on the squashed commit after merging.\nSee the [dedicated section](#commit-messages) about conventional commit format.\n\nWhen creating a PR, follow the following instructions:\n- if you fix a bug (code or documentation), send a PR to the maintenance branch `main`.\n- if you add a **new nursery rule**, send a PR to the maintenance branch `main`. Nursery rules don't follow semantic versioning.\n- if you promote a rule from nursery, send a PR to the `next` branch.\n- if you implement a new feature that affects end users, send a PR to the `next` branch.\n- if you implement a new feature that _doesn't affect end users_, send a PR to the maintenance `main` branch.\n\n### Changelog\n\nThis repository uses [changesets](https://github.com/changesets/changesets) to automate the releases of Biome's binaries, the JavaScript libraries and the creation of the `CHANGELOG.md` for each library.\n\n#### Create a changeset\n\nIf the PR you're about to open is a bugfix/feature visible to users of the Biome toolchain or of the published Biome crates, you are encouraged to provide a **changeset** . To *create* a changeset, use the following command (*don't create it manually*):\n\n```shell\njust new-changeset\n```\n> [!NOTE]\n> The script uses `pnpm` under the hoods, so make sure to have ran `pnpm i` from the root of the repository before running this script.\n\nThe command will present a prompt where you need to choose the libraries involved by the PR, the type of change (`major`, `minor` or `patch`) for each library, and a description of the change. The description will be used as name of the file.\n\nThe command will create the changeset(s) in the `.changeset` folder. You're free to open the file, and add more information in it.\n\nIf you want to add headers, use `####` or `#####`. Other kind of headers will mess up the final CHANGELOG and break upstream tools.\n\n#### Choose the correct packages\n\nIn the vast majority of cases, you want to choose the `@biomejs/biome` package, which represents the main package.\n\nThe frontmatter of the changeset will look like this:\n\n```markdown\n---\n\"@biomejs/biome\": patch\n---\n\nDescription here...\n```\n\n#### Choose the correct type of change\n\nWe are very strict about `major` changes in the `@biomejs/biome` package. To better understand type of your change *for this package*, please refer to our [versioning page](https://biomejs.dev/internals/versioning/). Generally:\n- `patch`: any sort of change that fixes a bug.\n- `minor`: new features available to the users.\n- `major`: a change that breaks a user API.\n\nWhen choosing `minor` or `major`, make sure your PR targets the `next` branch instead of `main`.\n\n#### Writing a changeset\n\nThe description of the changeset should follow the these guidelines:\n\n- Our changesets should be about _user-facing_ changes. Internal changes don't\n  need changesets.\n- Use the past tense when describing what you did, e.g. \"Added new feature\", \"Fixed edge case\".\n- Use the present tense when describing Biome behavior, e.g. \"Biome now supports ...\".\n- If you fixed a bug, please start with a link to the issue, e.g. \"Fixed [#4444](https://github.com/biomejs/biome/issues/4444): ...\".\n- If you reference a rule, please add the link to the rule on the website, e.g. \"Added the rule [`useAwesomeThing`](https://biomejs.dev/linter/rules/use-awesome-thing/)\" (even if the website isn't updated yet, the URL is pretty predictable...).\n- Similarly, if you reference an assist, please add the link to the assist on the website, e.g. \"Added the assist [`awesomeAction`](https://biomejs.dev/assist/actions/awesome-action/)\".\n- Whenever applicable, add a code block to show your new changes. For example, for a new rule you should show an invalid case, while for the formatter you should show how the new formatting changes, and so on.\n- End every sentence with a full stop (`.`).\n\nIf in doubt, take a look at existing or past changesets.\n\n### Documentation\n\nIf your PR involves new features, or changes to existing features, documentation must be updated as well. For rules, assists, and their options, this is done using inline [rustdoc](https://doc.rust-lang.org/rustdoc/how-to-write-documentation.html) documentation.\n\nWhen other documentation updates are required, such as new formatter options, a PR should be created against the `next` branch of [our website](https://github.com/biomejs/website/). When doing so, please link the documentation PR from the PR that introduces the feature.\n\n### Versioning\n\nWe follow the specs suggested by [the official documentation](https://code.visualstudio.com/api/working-with-extensions/publishing-extension#prerelease-extensions):\n\nOdd minor versions are dedicated to pre-releases, e.g. `*.5.*` .\nEven minor versions are dedicated to official releases, e.g. `*.6.*`.\n\n## Releasing\n\n### Beta releases\n\n1. [ ] Run the `beta` workflow.\n   Input the _upcoming_ version with an incremented number for each release (e.g. `2.0.0-beta.1`).\n2. [ ] If you're a Core Contributor, approve the deployment.\n\n### Regular releases\n\nBefore starting release:\n\n1. [ ] Make sure that all issues/PRs for the milestone are done: https://github.com/biomejs/biome/milestones\n\n1. [ ] Replace all `version: \"next\"` to the new version number in the metadata of the rules.\n\nWhen releasing a new **minor** or **major** version of a Biome, follow these steps:\n\n1. [ ] Create a PR from `next` to `main`. Make sure that code conflicts are fixed and the new features have relative docs PR.\n\n1. [ ] Merge `next` to `main`. **Using merge commit is recommended here**, do not use squash merge as it removes the commit history.\n\n1. [ ] **Update to the same `version` in all crates** if you publish crates, if applicable. (`Cargo.toml` and `crates/**/Cargo.toml`)\n\n1. [ ] Linter rules have a `version` metadata directly defined in their implementation.\n   This field is set to `\"next\"` for newly created rules.\n   This field must be updated to the new version.\n\n1. [ ] Merge the `ci: release` PR, and the release workflow will run. Once these workflows finish compiling the final artefact, **they need to be approved manually** by a member of the **Core Contributors**.\n\n1. [ ] After releasing a major version number, you may want to update the `update-preview-version.mjs` script to make sure that future previews indicate a version number with a higher patch version than is currently indicated in the `package.json` manifests.\n\n1. [ ] Make sure you create new `next` branches for both the main repository and the website.\n\n**patch** releases only require a merging of the `ci: release` PR, and should leave the `next` branches untouched.\n\n## Resources\n\nWe have several resources explaining about Biome. They will help you understand the project and codebase.\n\n- [Rust Dublin October 2023 - Biome - YouTube](https://youtu.be/stxiUYmHn0s?si=C9cMsc93nNrZa-r1)\n- [Rome, a Modern Toolchain! by Emanuele Stoppa - GitNation](https://portal.gitnation.org/contents/rome-a-modern-toolchain)\n- [How to create a lint rule in Biome](https://www.youtube.com/watch?v=zfzMO3nW_Wo&t=343s)\n\n## Current Members\n\nMembers are listed in alphabetical order. Members are free to use the full name, GitHub handle, or any other nickname they wish to be addressed. Members are free to disclose their pronouns.\n\n### Lead team\n\n- [Arend van Beelen @arendjr](https://github.com/arendjr)\n- [Emanuele Stoppa @ematipico](https://github.com/ematipico)\n- [Victorien Elvinger @Conaclos](https://github.com/Conaclos)\n\n### Core Contributors team\n\n- [Carson McManus @dyc3](https://github.com/dyc3)\n- [Denis Bezrukov @denbezrukov](https://github.com/denbezrukov)\n- [Hiroki Ihoriya @unvalley](https://github.com/unvalley)\n- [Naoki Ikeguchi @siketyan](https://github.com/siketyan)\n- [Nicolas Hedger @nhedger](https://github.com/nhedger)\n\n### Maintainers team\n\n- [Dani Guardiola @DaniGuardiola](https://github.com/DaniGuardiola)\n- [Justinas Delinda @minht11](https://github.com/minht11)\n- [Madeline Gurriarán @SuperchupuDev](https://github.com/SuperchupuDev)\n- [Marat Dulin @mdevils](https://github.com/mdevils)\n- [Vladimir Ivanov_@vlad](https://github.com/vladimir-ivanov)\n- [Vo Hoang Long @vohoanglong0107](https://github.com/vohoanglong0107)\n- [Yoshiaki Togami @togami2864](https://github.com/togami2864)\n- [Yusuke Abe @chansuke](https://github.com/chansuke)\n- [zoomdong @fireairforce](https://github.com/fireairforce)\n\n### Past Maintainers\n\n- [Daiki Nishikawa @nissy-dev](https://github.com/nissy-dev) (Core contributor)\n- [Jon Egeland @faultyserver](https://github.com/faultyserver) (Core contributor)\n- [Takayuki Maeda @TaKO8Ki](https://github.com/TaKO8Ki) (Maintainer)\n- [Yagiz Nizipli @anonrig](https://github.com/anonrig) (Maintainer)\n- [Vasu Singh @vasucp1207](https://github.com/vasucp1207) (Maintainer)\n- [Victor Teles @victor-teles](https://github.com/victor-teles) (Maintainer)\n- [Zheyu Zhang @ah-yu](https://github.com/ah-yu) (Core Contributor)\n\n\n\n================================================\nFILE: Dockerfile.benchmark\n================================================\n# syntax=docker/dockerfile:1@sha256:38387523653efa0039f8e1c89bb74a30504e76ee9f565e25c9a09841f9427b05\nFROM rust:1.89.0-bookworm@sha256:c50cd6e20c46b0b36730b5eb27289744e4bb8f32abc90d8c64ca09decf4f55ba\nWORKDIR /usr/src/\n\n# https://github.com/nodesource/distributions\nRUN curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && apt-get install -y nodejs\nRUN cargo install hyperfine\n\nCOPY Cargo.toml Cargo.lock ./\nCOPY ./crates ./crates\nCOPY ./xtask ./xtask\n\nWORKDIR /usr/src/benchmark\n\nCOPY ./benchmark .\n\nRUN npm ci\nRUN node bench.js formatter\nRUN node bench.js linter\n\n\n\n================================================\nFILE: GOVERNANCE.md\n================================================\n# Governance\n\nThis document outlines the governance model for Biome.\n\nIt describes various parts of how the project is managed as well as accepted practices for day-to-day operation:\n\n* [Contributor Model](#contributor-model)\n  + [Lead](#lead)\n    - [Lead nomination](#lead-nomination)\n  + [Core Contributor](#core-contributor)\n    - [Core contributor nomination](#core-contributor-nomination)\n  + [Maintainer](#maintainer)\n    - [Maintainer nomination](#maintainer-nomination)\n  + [Voting Rules](#voting-rules)\n  + [Ownership](#ownership)\n  + [Inactivity](#inactivity)\n  + [Contributions](#contributions)\n  + [Governance changes](#governance-changes)\n* [Project Direction](#project-direction)\n  + [Roadmap](#roadmap)\n* [Code review](#code-review)\n* [Financial Contributions](#financial-contributions)\n  + [Sponsorship](#sponsorship)\n  + [Community-Funded Bounties](#community-funded-bounties)\n  + [Project-Funded Bounties](#project-funded-bounties)\n  + [Paid Contracting](#paid-contracting)\n  + [Fund Allocation](#fund-allocation)\n    - [Expenses](#expenses)\n* [Moderation](#moderation)\n  + [Reporting](#reporting)\n  + [Who gets involved?](#who-gets-involved)\n  + [Review](#review)\n  + [Resolution](#resolution)\n\n\n## Contributor Model\n\nAll members must follow the [Code of Conduct](CODE_OF_CONDUCT.md). Consequences for member violations are detailed in [Moderation](#moderation).\n\n### Lead\n\nLeads are the owners of the organization.\n\nLeads have additional privileges over core contributors. Leads control and maintain sensitive project assets and act as tiebreakers in the event of disagreements. In case of disagreements, only **one** lead must be involved in the resolution.\n\nThese assets and responsibilities are but are not limited to:\n- Access to social accounts.\n- Administration privileges of the [Biome Discord server][discord].\n- Administration privileges of the [Biome GitHub org][gh-org].\n- Website credentials (hosting platform, domain name, etc.).\n- Access to sensitive emails, such as the CoC email.\n\nAlso:\n- Ability to vote for new leads.\n- Onboard new [core contributors](#core-contributor) and new leads.\n- Takes part in [project decisions](#project-direction-and-planning).\n- Access to the Discord `Lead` category and channels that belong to this category.\n- Propose changes to the governance document via PR.\n\nThe ownership of assets is only sometimes evenly distributed among all the leads.\n\n#### Lead nomination\n\nLeads may only be self-nominated. Being a lead only adds burden to a core contributor: more rights to be held accountable with, and more responsibilities.\n\nWhen nominating a lead, a new thread in the `#leads` channel with a case of why the person should join as [core contributor](#core-contributor) has to be created.\n\n`#leads` is a private channel available only to people who have the `Lead` role.\n\nThe voting period will follow the [voting rules](#voting-rules). An individual becomes a lead if all the other leads vote in favour.\n\nIf vote is successful, the lead will ask the nominee if they want to accept the title.\n\nIn the event of a rejection, the nominated person will be privately given the requirements they have yet to meet. Details of the discussion - for example, those who objected to the nomination - will not be disclosed.\n\n### Core Contributor\n\nCore Contributors are outstanding [maintainers](#maintainer), are ambassadors of Biome organization and lead by example the community.\n\n- Push access to the [Biome GitHub org][gh-org], this includes all repositories\n- `Core contributor` status on the [Biome Discord server][discord]\n- Takes part in [project decisions](#project-direction-and-planning)\n- Ability to [vote](#maintainer-nomination) on new maintainers and [vote](#core-contributor-nomination) on new core contributors\n- Onboard new [maintainers](#maintainer)\n- Assign [pledges to issues](#bounties).\n- Access to the Discord `Core contributors` category and channels that belong to this category.\n- Propose changes to the governance document via PR.\n\n#### Core contributor nomination\n\nOnly [maintainers](#maintainer) can be nominated to be core contributors.\n\nCore contributors may either be nominated by another, [Core contributor](#core-contributor), or [lead](#lead).\n\nWhen nominating a core contributor, a new **private** thread in the `#core-contributors` channel has to be created, with a case and [their contributions](#contributions) of why the person should join as [core contributor](#core-contributor).\n\n`#core-contributors` is a private channel available only to people who have the `Core contributor` role.\n\nThe voting period will follow the [voting rules](#voting-rules). An individual becomes a [core contributor](#core-contributor) if:\n- receive at least a positive vote from a [lead](#lead);\n- more than 70% of positive votes across the members of the Core contributors team;\n\nVoting requirements may change in the future based on the amount of people involved in the vote.\n\nA core contributor can be self-nominated. They will have to message a [lead maintainer](#lead) privately and present a case. Then, the lead can:\n- reject the nomination in place, provide reasons why and possibly some suggestions for the future; the lead\n- initiate a voting session among the core contributors;\n\nWhen the verdict is reached, the thread will be deleted, and a [lead](#lead) will reach out to the nominee.\n\nIf vote is successful, the core member will ask the nominee if they want to accept the title.\n\nIn the event of a rejection, the nominated person will be privately given the requirements they have yet to meet. Details of the discussion - for example, those who objected to the nomination - will not be disclosed.\n\n### Maintainer\n\nMaintainers are those with a history of consistent contributions, including but not limited to pull requests, project management, or support. These privileges include:\n\n- Push access to some of the repositories of the [Biome GitHub org][gh-org]\n- `Maintainer` status on the [Biome Discord server][discord]\n- Ability to [vote](#voting) on project decisions\n- Ability to [vote](#maintainer-nomination) on new maintainers\n- Access to the Discord `Maintainers` category and channels that belong to this category.\n#### Maintainer nomination\n\nMaintainers may either be nominated by another [maintainer](#maintainer), [Core contributor](#core-contributor), [lead](#lead).\n\nWhen nominating a new maintainer, a new **private** thread in the `#maintainers` channel has to be created, provide a link to the history of the [person's contributions](#contributions) to the project and a brief explanation of why the person should join as [maintainer](#maintainer).\n\n`#maintainers` is a private channel available only to people who have the `maintainer` role.\n\nThe voting period will follow the [voting rules](#voting-rules). An individual becomes a [maintainer](#maintainer) if:\n- reaches more than 50% of positive votes among the people who have voting rights;\n- if the voting session ends with 50%, the Leads will take the decision;\n\nA maintainer can be self-nominated. They will have to message a [lead maintainer](#lead) privately with links to their contributions to the project. Then, the lead can:\n- reject the nomination in place, provide reasons why and possibly some suggestions for the future;\n- initiate a voting session among the maintainers;\n\nWhen the verdict is reached, the thread will be deleted, and a [core contributor](#core-contributor) or [lead](#lead) will reach out to the nominee.\n\nIf vote is successful, the person reaching out will ask the nominee if they want to accept the title.\n\nIn the event of a rejection, the nominated person will be privately given the requirements they have not met. Details of the discussion, such as the names of those who objected the nomination, will not be disclosed.\n\n### Voting Rules\n\n- The voting sessions are run in Discord, so Maintainers and Core Contributors are expected to have an account.\n- Members are required to vote.\n- Members may abstain from a vote.\n- Members who do not vote within three days will automatically abstain.\n- Leads may reduce the three days automatic abstain for urgent decisions.\n- Leads reserve the right to veto approval with a publicly disclosed reason.\n- It's highly suggested to pair the vote with a reason of the vote, e.g. \"I vote in favour because that person writes good code\". These reasons will be collected and brought up to the nominee at the end of the voting phase.\n\n### Ownership\n\nOne or more people can own certain parts of the codebase. This process is informal, and inclusion could result from substantial contributions or delegation by other members. A maintainer's responsibility is to identify the relevant owners and ensure there's an understanding when it comes to code review.\n\n### Inactivity\n\nThere aren't strict requirements and expectations around activity for core contributors and maintainers; although long periods of inactivity must be communicated to the team.\n\nInactive core contributors or maintainers may have voting and access rights removed and status removed, and given them the _Past maintainer_ status. A core contributor or maintainer may request their voting rights and status back upon sufficient activity.\n\n> [!NOTE]\n> The definition of \"long periods\", and how long an individual needs to stay inactive in order to have their voting rights removed have yet to be decided.\n\n### Contributions\n\nContributions to the project aren't only limited to code. Contributions come in different forms and ways:\n- Documentation\n- Code to all the repositories of the [GitHub org][gh-org]\n- Support in primary channels of the organization, e.g. GitHub and Discord\n- Support in secondary channels, e.g. StackOverflow, etc.\n- Website;\n\n### Governance changes\n\nChanges to the governance document must be approved by at least fifty percent of the Core Contributors and a majority of the Leads.\n\n## Project Direction\n\nProject direction and planning is a shared responsibility amongst members. Core contributors are responsible for dictating high-level goals and the project scope that should be adhered to.\n\n### Roadmap\n\nLeads may create a roadmap document to share with the community once the core contributors have set the project's goals.\n\nRoadmaps don't pro","default_max_file_size":100000,"pattern_type":"exclude","pattern":""}